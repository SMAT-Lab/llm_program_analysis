{
    "type": "module",
    "label": "import json\nfrom typing import Any, Type, TypeVar, overload\n\nimport jsonschema\nfrom fastapi.encoders import jsonable_encoder\n\nfrom .type import type_match\n\n\ndef to_dict(data) -> dict:\n    return jsonable_encoder(data)\n\n\ndef dumps(data) -> str:\n    return json.dumps(jsonable_encoder(data))\n\n\nT = TypeVar(\"T\")\n\n\n@overload\ndef loads(data: str, *args, target_type: Type[T], **kwargs) -> T: ...\n\n\n@overload\ndef loads(data: str, *args, **kwargs) -> Any: ...\n\n\ndef loads(data: str, *args, target_type: Type[T] | None = None, **kwargs) -> Any:\n    parsed = json.loads(data, *args, **kwargs)\n    if target_type:\n        return type_match(parsed, target_type)\n    return parsed\n\n\ndef validate_with_jsonschema(\n    schema: dict[str, Any], data: dict[str, Any]\n) -> str | None:\n    \"\"\"\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    \"\"\"\n    try:\n        jsonschema.validate(data, schema)\n        return None\n    except jsonschema.ValidationError as e:\n        return str(e)\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import json",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "json",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Any, Type, TypeVar, overload",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Type",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Type",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TypeVar",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TypeVar",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "overload",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "overload",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import jsonschema",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "jsonschema",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "jsonschema",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from fastapi.encoders import jsonable_encoder",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "fastapi.encoders",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fastapi",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "encoders",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "jsonable_encoder",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "jsonable_encoder",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .type import type_match",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".type",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "type",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "type",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "type_match",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "type_match",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def to_dict(data) -> dict:\n    return jsonable_encoder(data)",
            "children": [
                {
                    "type": "identifier",
                    "label": "to_dict",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(data)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "dict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "dict",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "return jsonable_encoder(data)",
                    "children": [
                        {
                            "type": "return_statement",
                            "label": "return jsonable_encoder(data)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "jsonable_encoder(data)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "jsonable_encoder",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(data)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "data",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def dumps(data) -> str:\n    return json.dumps(jsonable_encoder(data))",
            "children": [
                {
                    "type": "identifier",
                    "label": "dumps",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(data)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "return json.dumps(jsonable_encoder(data))",
                    "children": [
                        {
                            "type": "return_statement",
                            "label": "return json.dumps(jsonable_encoder(data))",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "json.dumps(jsonable_encoder(data))",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "json.dumps",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "json",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "dumps",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(jsonable_encoder(data))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "jsonable_encoder(data)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "jsonable_encoder",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(data)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "T = TypeVar(\"T\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "T = TypeVar(\"T\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "T",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "TypeVar(\"T\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "TypeVar",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"T\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"T\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "T",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@overload\ndef loads(data: str, *args, target_type: Type[T], **kwargs) -> T: ...",
            "children": [
                {
                    "type": "decorator",
                    "label": "@overload",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "overload",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def loads(data: str, *args, target_type: Type[T], **kwargs) -> T: ...",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "loads",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(data: str, *args, target_type: Type[T], **kwargs)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "data: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "list_splat_pattern",
                                    "label": "*args",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "args",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "target_type: Type[T]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "target_type",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Type[T]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Type[T]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[T]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "T",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "T",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "dictionary_splat_pattern",
                                    "label": "**kwargs",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "kwargs",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "T",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "T",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "...",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "...",
                                    "children": [
                                        {
                                            "type": "ellipsis",
                                            "label": "...",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@overload\ndef loads(data: str, *args, **kwargs) -> Any: ...",
            "children": [
                {
                    "type": "decorator",
                    "label": "@overload",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "overload",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def loads(data: str, *args, **kwargs) -> Any: ...",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "loads",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(data: str, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "data: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "list_splat_pattern",
                                    "label": "*args",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "args",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dictionary_splat_pattern",
                                    "label": "**kwargs",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "kwargs",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Any",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Any",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "...",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "...",
                                    "children": [
                                        {
                                            "type": "ellipsis",
                                            "label": "...",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def loads(data: str, *args, target_type: Type[T] | None = None, **kwargs) -> Any:\n    parsed = json.loads(data, *args, **kwargs)\n    if target_type:\n        return type_match(parsed, target_type)\n    return parsed",
            "children": [
                {
                    "type": "identifier",
                    "label": "loads",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(data: str, *args, target_type: Type[T] | None = None, **kwargs)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "data: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "data",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "list_splat_pattern",
                            "label": "*args",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "args",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "target_type: Type[T] | None = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "target_type",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Type[T] | None",
                                    "children": [
                                        {
                                            "type": "union_type",
                                            "label": "Type[T] | None",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "Type[T]",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "label": "Type[T]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Type",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type_parameter",
                                                                    "label": "[T]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "T",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "T",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "None",
                                                    "children": [
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "dictionary_splat_pattern",
                            "label": "**kwargs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "kwargs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "parsed = json.loads(data, *args, **kwargs)\n    if target_type:\n        return type_match(parsed, target_type)\n    return parsed",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "parsed = json.loads(data, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "parsed = json.loads(data, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "parsed",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "json.loads(data, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "json.loads",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "json",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "loads",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(data, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list_splat",
                                                            "label": "*args",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "args",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "dictionary_splat",
                                                            "label": "**kwargs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "kwargs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if target_type:\n        return type_match(parsed, target_type)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "target_type",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return type_match(parsed, target_type)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return type_match(parsed, target_type)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "type_match(parsed, target_type)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "type_match",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(parsed, target_type)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "parsed",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "target_type",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return parsed",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "parsed",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def validate_with_jsonschema(\n    schema: dict[str, Any], data: dict[str, Any]\n) -> str | None:\n    \"\"\"\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    \"\"\"\n    try:\n        jsonschema.validate(data, schema)\n        return None\n    except jsonschema.ValidationError as e:\n        return str(e)",
            "children": [
                {
                    "type": "identifier",
                    "label": "validate_with_jsonschema",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    schema: dict[str, Any], data: dict[str, Any]\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "schema: dict[str, Any]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "schema",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "dict[str, Any]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dict",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "Any",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Any",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "data: dict[str, Any]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "data",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "dict[str, Any]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dict",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "Any",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Any",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str | None",
                    "children": [
                        {
                            "type": "binary_operator",
                            "label": "str | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "str",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    \"\"\"\n    try:\n        jsonschema.validate(data, schema)\n        return None\n    except jsonschema.ValidationError as e:\n        return str(e)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "try_statement",
                            "label": "try:\n        jsonschema.validate(data, schema)\n        return None\n    except jsonschema.ValidationError as e:\n        return str(e)",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "jsonschema.validate(data, schema)\n        return None",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "jsonschema.validate(data, schema)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "jsonschema.validate(data, schema)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "jsonschema.validate",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "jsonschema",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "validate",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(data, schema)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schema",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return None",
                                            "children": [
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except jsonschema.ValidationError as e:\n        return str(e)",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "jsonschema.ValidationError as e",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "jsonschema.ValidationError",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "jsonschema",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValidationError",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "e",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return str(e)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return str(e)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "str(e)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(e)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "e",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}