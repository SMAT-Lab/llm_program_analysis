{
    "type": "module",
    "label": "import logging\n\nimport pytest\n\nfrom backend.util.test import SpinTestServer\n\n#  NOTE: You can run tests like with the --log-cli-level=INFO to see the logs\n# Set up logging\nlogger = logging.getLogger(__name__)\n\n# Create console handler with formatting\nch = logging.StreamHandler()\nch.setLevel(logging.INFO)\nformatter = logging.Formatter(\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")\nch.setFormatter(formatter)\nlogger.addHandler(ch)\n\n\n@pytest.fixture(scope=\"session\")\nasync def server():\n    async with SpinTestServer() as server:\n        yield server\n\n\n@pytest.fixture(scope=\"session\", autouse=True)\nasync def graph_cleanup(server):\n    created_graph_ids = []\n    original_create_graph = server.agent_server.test_create_graph\n\n    async def create_graph_wrapper(*args, **kwargs):\n        created_graph = await original_create_graph(*args, **kwargs)\n        # Extract user_id correctly\n        user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)\n        created_graph_ids.append((created_graph.id, user_id))\n        return created_graph\n\n    try:\n        server.agent_server.test_create_graph = create_graph_wrapper\n        yield  # This runs the test function\n    finally:\n        server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import pytest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pytest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pytest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.test import SpinTestServer",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.test",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "test",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SpinTestServer",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SpinTestServer",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "#  NOTE: You can run tests like with the --log-cli-level=INFO to see the logs",
            "children": []
        },
        {
            "type": "comment",
            "label": "# Set up logging",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# Create console handler with formatting",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "ch = logging.StreamHandler()",
            "children": [
                {
                    "type": "assignment",
                    "label": "ch = logging.StreamHandler()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ch",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.StreamHandler()",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.StreamHandler",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "StreamHandler",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "ch.setLevel(logging.INFO)",
            "children": [
                {
                    "type": "call",
                    "label": "ch.setLevel(logging.INFO)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "ch.setLevel",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ch",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "setLevel",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "(logging.INFO)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.INFO",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "INFO",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "formatter = logging.Formatter(\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "formatter = logging.Formatter(\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "formatter",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.Formatter(\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.Formatter",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "Formatter",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "ch.setFormatter(formatter)",
            "children": [
                {
                    "type": "call",
                    "label": "ch.setFormatter(formatter)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "ch.setFormatter",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ch",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "setFormatter",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "(formatter)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "formatter",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger.addHandler(ch)",
            "children": [
                {
                    "type": "call",
                    "label": "logger.addHandler(ch)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "logger.addHandler",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "logger",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "addHandler",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "(ch)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ch",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.fixture(scope=\"session\")\nasync def server():\n    async with SpinTestServer() as server:\n        yield server",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.fixture(scope=\"session\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "pytest.fixture(scope=\"session\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.fixture",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pytest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "fixture",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(scope=\"session\")",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "scope=\"session\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scope",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"session\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "session",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def server():\n    async with SpinTestServer() as server:\n        yield server",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "async with SpinTestServer() as server:\n        yield server",
                            "children": [
                                {
                                    "type": "with_statement",
                                    "label": "async with SpinTestServer() as server:\n        yield server",
                                    "children": [
                                        {
                                            "type": "with_clause",
                                            "label": "SpinTestServer() as server",
                                            "children": [
                                                {
                                                    "type": "with_item",
                                                    "label": "SpinTestServer() as server",
                                                    "children": [
                                                        {
                                                            "type": "as_pattern",
                                                            "label": "SpinTestServer() as server",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "SpinTestServer()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "SpinTestServer",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "as_pattern_target",
                                                                    "label": "server",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "server",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "yield server",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "yield server",
                                                    "children": [
                                                        {
                                                            "type": "yield",
                                                            "label": "yield server",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "server",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.fixture(scope=\"session\", autouse=True)\nasync def graph_cleanup(server):\n    created_graph_ids = []\n    original_create_graph = server.agent_server.test_create_graph\n\n    async def create_graph_wrapper(*args, **kwargs):\n        created_graph = await original_create_graph(*args, **kwargs)\n        # Extract user_id correctly\n        user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)\n        created_graph_ids.append((created_graph.id, user_id))\n        return created_graph\n\n    try:\n        server.agent_server.test_create_graph = create_graph_wrapper\n        yield  # This runs the test function\n    finally:\n        server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.fixture(scope=\"session\", autouse=True)",
                    "children": [
                        {
                            "type": "call",
                            "label": "pytest.fixture(scope=\"session\", autouse=True)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.fixture",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pytest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "fixture",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(scope=\"session\", autouse=True)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "scope=\"session\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scope",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"session\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "session",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "autouse=True",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "autouse",
                                                    "children": []
                                                },
                                                {
                                                    "type": "true",
                                                    "label": "True",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def graph_cleanup(server):\n    created_graph_ids = []\n    original_create_graph = server.agent_server.test_create_graph\n\n    async def create_graph_wrapper(*args, **kwargs):\n        created_graph = await original_create_graph(*args, **kwargs)\n        # Extract user_id correctly\n        user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)\n        created_graph_ids.append((created_graph.id, user_id))\n        return created_graph\n\n    try:\n        server.agent_server.test_create_graph = create_graph_wrapper\n        yield  # This runs the test function\n    finally:\n        server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "graph_cleanup",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(server)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "server",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "created_graph_ids = []\n    original_create_graph = server.agent_server.test_create_graph\n\n    async def create_graph_wrapper(*args, **kwargs):\n        created_graph = await original_create_graph(*args, **kwargs)\n        # Extract user_id correctly\n        user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)\n        created_graph_ids.append((created_graph.id, user_id))\n        return created_graph\n\n    try:\n        server.agent_server.test_create_graph = create_graph_wrapper\n        yield  # This runs the test function\n    finally:\n        server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "created_graph_ids = []",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "created_graph_ids = []",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "created_graph_ids",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[]",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "original_create_graph = server.agent_server.test_create_graph",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "original_create_graph = server.agent_server.test_create_graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "original_create_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "server.agent_server.test_create_graph",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "server.agent_server",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "server",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "agent_server",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "test_create_graph",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "async def create_graph_wrapper(*args, **kwargs):\n        created_graph = await original_create_graph(*args, **kwargs)\n        # Extract user_id correctly\n        user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)\n        created_graph_ids.append((created_graph.id, user_id))\n        return created_graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "create_graph_wrapper",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(*args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "list_splat_pattern",
                                                    "label": "*args",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "args",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "dictionary_splat_pattern",
                                                    "label": "**kwargs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "kwargs",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "created_graph = await original_create_graph(*args, **kwargs)\n        # Extract user_id correctly\n        user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)\n        created_graph_ids.append((created_graph.id, user_id))\n        return created_graph",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "created_graph = await original_create_graph(*args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "created_graph = await original_create_graph(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "created_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "await",
                                                                    "label": "await original_create_graph(*args, **kwargs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "original_create_graph(*args, **kwargs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "original_create_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(*args, **kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "list_splat",
                                                                                            "label": "*args",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "args",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary_splat",
                                                                                            "label": "**kwargs",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "kwargs",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Extract user_id correctly",
                                                    "children": []
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "user_id = kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "kwargs.get(\"user_id\", args[2] if len(args) > 2 else None)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "kwargs.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "kwargs",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"user_id\", args[2] if len(args) > 2 else None)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"user_id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "conditional_expression",
                                                                                    "label": "args[2] if len(args) > 2 else None",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "args[2]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "args",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "len(args) > 2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "len(args)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "len",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(args)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "args",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "none",
                                                                                            "label": "None",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "created_graph_ids.append((created_graph.id, user_id))",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "created_graph_ids.append((created_graph.id, user_id))",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "created_graph_ids.append",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "created_graph_ids",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "append",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "((created_graph.id, user_id))",
                                                                    "children": [
                                                                        {
                                                                            "type": "tuple",
                                                                            "label": "(created_graph.id, user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "created_graph.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "created_graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return created_graph",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "created_graph",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        server.agent_server.test_create_graph = create_graph_wrapper\n        yield  # This runs the test function\n    finally:\n        server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "server.agent_server.test_create_graph = create_graph_wrapper\n        yield  # This runs the test function",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "server.agent_server.test_create_graph = create_graph_wrapper",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "server.agent_server.test_create_graph = create_graph_wrapper",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "server.agent_server.test_create_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "server.agent_server",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "server",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "agent_server",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_create_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "create_graph_wrapper",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "yield",
                                                    "children": [
                                                        {
                                                            "type": "yield",
                                                            "label": "yield",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# This runs the test function",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "finally_clause",
                                            "label": "finally:\n        server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "server.agent_server.test_create_graph = original_create_graph\n\n        # Delete the created graphs and assert they were deleted\n        for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "server.agent_server.test_create_graph = original_create_graph",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "server.agent_server.test_create_graph = original_create_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "server.agent_server.test_create_graph",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "server.agent_server",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "server",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "agent_server",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "test_create_graph",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "original_create_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Delete the created graphs and assert they were deleted",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "for_statement",
                                                            "label": "for graph_id, user_id in created_graph_ids:\n            if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "label": "graph_id, user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "created_graph_ids",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if user_id:\n                resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "resp = await server.agent_server.test_delete_graph(graph_id, user_id)\n                num_deleted = resp[\"version_counts\"]\n                assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "resp = await server.agent_server.test_delete_graph(graph_id, user_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "resp = await server.agent_server.test_delete_graph(graph_id, user_id)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "resp",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "await",
                                                                                                            "label": "await server.agent_server.test_delete_graph(graph_id, user_id)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "server.agent_server.test_delete_graph(graph_id, user_id)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "server.agent_server.test_delete_graph",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "server.agent_server",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "server",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "agent_server",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "test_delete_graph",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "(graph_id, user_id)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "graph_id",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "user_id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "num_deleted = resp[\"version_counts\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "num_deleted = resp[\"version_counts\"]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "num_deleted",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "subscript",
                                                                                                            "label": "resp[\"version_counts\"]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "resp",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"version_counts\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "version_counts",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "assert_statement",
                                                                                            "label": "assert num_deleted > 0, f\"Graph {graph_id} was not deleted.\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "comparison_operator",
                                                                                                    "label": "num_deleted > 0",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "num_deleted",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "0",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"Graph {graph_id} was not deleted.\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Graph ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{graph_id}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "graph_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " was not deleted.",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}