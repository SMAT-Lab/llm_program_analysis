{
    "type": "module",
    "label": "import ipaddress\nimport re\nimport socket\nfrom typing import Callable\nfrom urllib.parse import urlparse, urlunparse\n\nimport idna\nimport requests as req\n\nfrom backend.util.settings import Config\n\n# List of IP networks to block\nBLOCKED_IP_NETWORKS = [\n    # --8<-- [start:BLOCKED_IP_NETWORKS]\n    ipaddress.ip_network(\"0.0.0.0/8\"),  # \"This\" Network\n    ipaddress.ip_network(\"10.0.0.0/8\"),  # Private-Use\n    ipaddress.ip_network(\"127.0.0.0/8\"),  # Loopback\n    ipaddress.ip_network(\"169.254.0.0/16\"),  # Link Local\n    ipaddress.ip_network(\"172.16.0.0/12\"),  # Private-Use\n    ipaddress.ip_network(\"192.168.0.0/16\"),  # Private-Use\n    ipaddress.ip_network(\"224.0.0.0/4\"),  # Multicast\n    ipaddress.ip_network(\"240.0.0.0/4\"),  # Reserved for Future Use\n    # --8<-- [end:BLOCKED_IP_NETWORKS]\n]\n\nALLOWED_SCHEMES = [\"http\", \"https\"]\nHOSTNAME_REGEX = re.compile(r\"^[A-Za-z0-9.-]+$\")  # Basic DNS-safe hostname pattern\n\n\ndef _canonicalize_url(url: str) -> str:\n    # Strip spaces and trailing slashes\n    url = url.strip().strip(\"/\")\n    # Ensure the URL starts with http:// or https://\n    if not url.startswith((\"http://\", \"https://\")):\n        url = \"http://\" + url\n\n    # Replace backslashes with forward slashes to avoid parsing ambiguities\n    url = url.replace(\"\\\\\", \"/\")\n    return url\n\n\ndef _is_ip_blocked(ip: str) -> bool:\n    \"\"\"\n    Checks if the IP address is in a blocked network.\n    \"\"\"\n    ip_addr = ipaddress.ip_address(ip)\n    return any(ip_addr in network for network in BLOCKED_IP_NETWORKS)\n\n\ndef validate_url(url: str, trusted_origins: list[str]) -> str:\n    \"\"\"\n    Validates the URL to prevent SSRF attacks by ensuring it does not point to a private\n    or untrusted IP address, unless whitelisted.\n    \"\"\"\n    url = _canonicalize_url(url)\n    parsed = urlparse(url)\n\n    # Check scheme\n    if parsed.scheme not in ALLOWED_SCHEMES:\n        raise ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )\n\n    # Validate and IDNA encode the hostname\n    if not parsed.hostname:\n        raise ValueError(\"Invalid URL: No hostname found.\")\n\n    # IDNA encode to prevent Unicode domain attacks\n    try:\n        ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")\n    except idna.IDNAError:\n        raise ValueError(\"Invalid hostname with unsupported characters.\")\n\n    # Check hostname characters\n    if not HOSTNAME_REGEX.match(ascii_hostname):\n        raise ValueError(\"Hostname contains invalid characters.\")\n\n    # Rebuild the URL with the normalized, IDNA-encoded hostname\n    parsed = parsed._replace(netloc=ascii_hostname)\n    url = str(urlunparse(parsed))\n\n    # Check if hostname is a trusted origin (exact match)\n    if ascii_hostname in trusted_origins:\n        return url\n\n    # Resolve all IP addresses for the hostname\n    try:\n        ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}\n    except socket.gaierror:\n        raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")\n\n    if not ip_addresses:\n        raise ValueError(f\"No IP addresses found for {ascii_hostname}\")\n\n    # Check if any resolved IP address falls into blocked ranges\n    for ip in ip_addresses:\n        if _is_ip_blocked(ip):\n            raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )\n\n    return url\n\n\nclass Requests:\n    \"\"\"\n    A wrapper around the requests library that validates URLs before making requests.\n    \"\"\"\n\n    def __init__(\n        self,\n        trusted_origins: list[str] | None = None,\n        raise_for_status: bool = True,\n        extra_url_validator: Callable[[str], str] | None = None,\n        extra_headers: dict[str, str] | None = None,\n    ):\n        self.trusted_origins = []\n        for url in trusted_origins or []:\n            hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)\n\n        self.raise_for_status = raise_for_status\n        self.extra_url_validator = extra_url_validator\n        self.extra_headers = extra_headers\n\n    def request(\n        self, method, url, headers=None, allow_redirects=False, *args, **kwargs\n    ) -> req.Response:\n        if self.extra_headers is not None:\n            headers = {**(headers or {}), **self.extra_headers}\n\n        url = validate_url(url, self.trusted_origins)\n        if self.extra_url_validator is not None:\n            url = self.extra_url_validator(url)\n\n        response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )\n        if self.raise_for_status:\n            response.raise_for_status()\n\n        return response\n\n    def get(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"GET\", url, *args, **kwargs)\n\n    def post(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"POST\", url, *args, **kwargs)\n\n    def put(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PUT\", url, *args, **kwargs)\n\n    def delete(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"DELETE\", url, *args, **kwargs)\n\n    def head(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"HEAD\", url, *args, **kwargs)\n\n    def options(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"OPTIONS\", url, *args, **kwargs)\n\n    def patch(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PATCH\", url, *args, **kwargs)\n\n\nrequests = Requests(trusted_origins=Config().trust_endpoints_for_requests)\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import ipaddress",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "ipaddress",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ipaddress",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import re",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "re",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "re",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import socket",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "socket",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "socket",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Callable",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Callable",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Callable",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from urllib.parse import urlparse, urlunparse",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "urllib.parse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urllib",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "parse",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "urlparse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urlparse",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "urlunparse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urlunparse",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import idna",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "idna",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "idna",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import requests as req",
            "children": [
                {
                    "type": "aliased_import",
                    "label": "requests as req",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "requests",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "requests",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "req",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.settings import Config",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Config",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Config",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# List of IP networks to block",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "BLOCKED_IP_NETWORKS = [\n    # --8<-- [start:BLOCKED_IP_NETWORKS]\n    ipaddress.ip_network(\"0.0.0.0/8\"),  # \"This\" Network\n    ipaddress.ip_network(\"10.0.0.0/8\"),  # Private-Use\n    ipaddress.ip_network(\"127.0.0.0/8\"),  # Loopback\n    ipaddress.ip_network(\"169.254.0.0/16\"),  # Link Local\n    ipaddress.ip_network(\"172.16.0.0/12\"),  # Private-Use\n    ipaddress.ip_network(\"192.168.0.0/16\"),  # Private-Use\n    ipaddress.ip_network(\"224.0.0.0/4\"),  # Multicast\n    ipaddress.ip_network(\"240.0.0.0/4\"),  # Reserved for Future Use\n    # --8<-- [end:BLOCKED_IP_NETWORKS]\n]",
            "children": [
                {
                    "type": "assignment",
                    "label": "BLOCKED_IP_NETWORKS = [\n    # --8<-- [start:BLOCKED_IP_NETWORKS]\n    ipaddress.ip_network(\"0.0.0.0/8\"),  # \"This\" Network\n    ipaddress.ip_network(\"10.0.0.0/8\"),  # Private-Use\n    ipaddress.ip_network(\"127.0.0.0/8\"),  # Loopback\n    ipaddress.ip_network(\"169.254.0.0/16\"),  # Link Local\n    ipaddress.ip_network(\"172.16.0.0/12\"),  # Private-Use\n    ipaddress.ip_network(\"192.168.0.0/16\"),  # Private-Use\n    ipaddress.ip_network(\"224.0.0.0/4\"),  # Multicast\n    ipaddress.ip_network(\"240.0.0.0/4\"),  # Reserved for Future Use\n    # --8<-- [end:BLOCKED_IP_NETWORKS]\n]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BLOCKED_IP_NETWORKS",
                            "children": []
                        },
                        {
                            "type": "list",
                            "label": "[\n    # --8<-- [start:BLOCKED_IP_NETWORKS]\n    ipaddress.ip_network(\"0.0.0.0/8\"),  # \"This\" Network\n    ipaddress.ip_network(\"10.0.0.0/8\"),  # Private-Use\n    ipaddress.ip_network(\"127.0.0.0/8\"),  # Loopback\n    ipaddress.ip_network(\"169.254.0.0/16\"),  # Link Local\n    ipaddress.ip_network(\"172.16.0.0/12\"),  # Private-Use\n    ipaddress.ip_network(\"192.168.0.0/16\"),  # Private-Use\n    ipaddress.ip_network(\"224.0.0.0/4\"),  # Multicast\n    ipaddress.ip_network(\"240.0.0.0/4\"),  # Reserved for Future Use\n    # --8<-- [end:BLOCKED_IP_NETWORKS]\n]",
                            "children": [
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [start:BLOCKED_IP_NETWORKS]",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"0.0.0.0/8\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"0.0.0.0/8\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"0.0.0.0/8\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "0.0.0.0/8",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# \"This\" Network",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"10.0.0.0/8\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"10.0.0.0/8\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"10.0.0.0/8\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "10.0.0.0/8",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Private-Use",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"127.0.0.0/8\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"127.0.0.0/8\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"127.0.0.0/8\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "127.0.0.0/8",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Loopback",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"169.254.0.0/16\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"169.254.0.0/16\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"169.254.0.0/16\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "169.254.0.0/16",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Link Local",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"172.16.0.0/12\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"172.16.0.0/12\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"172.16.0.0/12\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "172.16.0.0/12",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Private-Use",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"192.168.0.0/16\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"192.168.0.0/16\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"192.168.0.0/16\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "192.168.0.0/16",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Private-Use",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"224.0.0.0/4\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"224.0.0.0/4\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"224.0.0.0/4\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "224.0.0.0/4",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Multicast",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "ipaddress.ip_network(\"240.0.0.0/4\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ipaddress.ip_network",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ipaddress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ip_network",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"240.0.0.0/4\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"240.0.0.0/4\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "240.0.0.0/4",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Reserved for Future Use",
                                    "children": []
                                },
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [end:BLOCKED_IP_NETWORKS]",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "ALLOWED_SCHEMES = [\"http\", \"https\"]",
            "children": [
                {
                    "type": "assignment",
                    "label": "ALLOWED_SCHEMES = [\"http\", \"https\"]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ALLOWED_SCHEMES",
                            "children": []
                        },
                        {
                            "type": "list",
                            "label": "[\"http\", \"https\"]",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"http\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "http",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "\"https\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "https",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "HOSTNAME_REGEX = re.compile(r\"^[A-Za-z0-9.-]+$\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "HOSTNAME_REGEX = re.compile(r\"^[A-Za-z0-9.-]+$\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HOSTNAME_REGEX",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "re.compile(r\"^[A-Za-z0-9.-]+$\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "re.compile",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "re",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "compile",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(r\"^[A-Za-z0-9.-]+$\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "r\"^[A-Za-z0-9.-]+$\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "r\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "^[A-Za-z0-9.-]+$",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# Basic DNS-safe hostname pattern",
            "children": []
        },
        {
            "type": "function_definition",
            "label": "def _canonicalize_url(url: str) -> str:\n    # Strip spaces and trailing slashes\n    url = url.strip().strip(\"/\")\n    # Ensure the URL starts with http:// or https://\n    if not url.startswith((\"http://\", \"https://\")):\n        url = \"http://\" + url\n\n    # Replace backslashes with forward slashes to avoid parsing ambiguities\n    url = url.replace(\"\\\\\", \"/\")\n    return url",
            "children": [
                {
                    "type": "identifier",
                    "label": "_canonicalize_url",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(url: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "url: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "url",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "comment",
                    "label": "# Strip spaces and trailing slashes",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "url = url.strip().strip(\"/\")\n    # Ensure the URL starts with http:// or https://\n    if not url.startswith((\"http://\", \"https://\")):\n        url = \"http://\" + url\n\n    # Replace backslashes with forward slashes to avoid parsing ambiguities\n    url = url.replace(\"\\\\\", \"/\")\n    return url",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "url = url.strip().strip(\"/\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "url = url.strip().strip(\"/\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "url.strip().strip(\"/\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "url.strip().strip",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "url.strip()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "url.strip",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "url",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "strip",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "strip",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"/\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"/\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "/",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Ensure the URL starts with http:// or https://",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if not url.startswith((\"http://\", \"https://\")):\n        url = \"http://\" + url",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not url.startswith((\"http://\", \"https://\"))",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "url.startswith((\"http://\", \"https://\"))",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "url.startswith",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "url",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "startswith",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "((\"http://\", \"https://\"))",
                                                    "children": [
                                                        {
                                                            "type": "tuple",
                                                            "label": "(\"http://\", \"https://\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"http://\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "http://",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"https://\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "url = \"http://\" + url",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "url = \"http://\" + url",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "url = \"http://\" + url",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "url",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "\"http://\" + url",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"http://\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "http://",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Replace backslashes with forward slashes to avoid parsing ambiguities",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "url = url.replace(\"\\\\\", \"/\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "url = url.replace(\"\\\\\", \"/\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "url.replace(\"\\\\\", \"/\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "url.replace",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "url",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "replace",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"\\\\\", \"/\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\\\\\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "\\\\",
                                                                    "children": [
                                                                        {
                                                                            "type": "escape_sequence",
                                                                            "label": "\\\\",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"/\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "/",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return url",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "url",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def _is_ip_blocked(ip: str) -> bool:\n    \"\"\"\n    Checks if the IP address is in a blocked network.\n    \"\"\"\n    ip_addr = ipaddress.ip_address(ip)\n    return any(ip_addr in network for network in BLOCKED_IP_NETWORKS)",
            "children": [
                {
                    "type": "identifier",
                    "label": "_is_ip_blocked",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(ip: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "ip: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ip",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "bool",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "bool",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Checks if the IP address is in a blocked network.\n    \"\"\"\n    ip_addr = ipaddress.ip_address(ip)\n    return any(ip_addr in network for network in BLOCKED_IP_NETWORKS)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Checks if the IP address is in a blocked network.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Checks if the IP address is in a blocked network.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Checks if the IP address is in a blocked network.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "ip_addr = ipaddress.ip_address(ip)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "ip_addr = ipaddress.ip_address(ip)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ip_addr",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "ipaddress.ip_address(ip)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "ipaddress.ip_address",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ipaddress",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "ip_address",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(ip)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ip",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return any(ip_addr in network for network in BLOCKED_IP_NETWORKS)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "any(ip_addr in network for network in BLOCKED_IP_NETWORKS)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "any",
                                            "children": []
                                        },
                                        {
                                            "type": "generator_expression",
                                            "label": "(ip_addr in network for network in BLOCKED_IP_NETWORKS)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "ip_addr in network",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ip_addr",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "network",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for network in BLOCKED_IP_NETWORKS",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "network",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "BLOCKED_IP_NETWORKS",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def validate_url(url: str, trusted_origins: list[str]) -> str:\n    \"\"\"\n    Validates the URL to prevent SSRF attacks by ensuring it does not point to a private\n    or untrusted IP address, unless whitelisted.\n    \"\"\"\n    url = _canonicalize_url(url)\n    parsed = urlparse(url)\n\n    # Check scheme\n    if parsed.scheme not in ALLOWED_SCHEMES:\n        raise ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )\n\n    # Validate and IDNA encode the hostname\n    if not parsed.hostname:\n        raise ValueError(\"Invalid URL: No hostname found.\")\n\n    # IDNA encode to prevent Unicode domain attacks\n    try:\n        ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")\n    except idna.IDNAError:\n        raise ValueError(\"Invalid hostname with unsupported characters.\")\n\n    # Check hostname characters\n    if not HOSTNAME_REGEX.match(ascii_hostname):\n        raise ValueError(\"Hostname contains invalid characters.\")\n\n    # Rebuild the URL with the normalized, IDNA-encoded hostname\n    parsed = parsed._replace(netloc=ascii_hostname)\n    url = str(urlunparse(parsed))\n\n    # Check if hostname is a trusted origin (exact match)\n    if ascii_hostname in trusted_origins:\n        return url\n\n    # Resolve all IP addresses for the hostname\n    try:\n        ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}\n    except socket.gaierror:\n        raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")\n\n    if not ip_addresses:\n        raise ValueError(f\"No IP addresses found for {ascii_hostname}\")\n\n    # Check if any resolved IP address falls into blocked ranges\n    for ip in ip_addresses:\n        if _is_ip_blocked(ip):\n            raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )\n\n    return url",
            "children": [
                {
                    "type": "identifier",
                    "label": "validate_url",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(url: str, trusted_origins: list[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "url: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "url",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "trusted_origins: list[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "trusted_origins",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Validates the URL to prevent SSRF attacks by ensuring it does not point to a private\n    or untrusted IP address, unless whitelisted.\n    \"\"\"\n    url = _canonicalize_url(url)\n    parsed = urlparse(url)\n\n    # Check scheme\n    if parsed.scheme not in ALLOWED_SCHEMES:\n        raise ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )\n\n    # Validate and IDNA encode the hostname\n    if not parsed.hostname:\n        raise ValueError(\"Invalid URL: No hostname found.\")\n\n    # IDNA encode to prevent Unicode domain attacks\n    try:\n        ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")\n    except idna.IDNAError:\n        raise ValueError(\"Invalid hostname with unsupported characters.\")\n\n    # Check hostname characters\n    if not HOSTNAME_REGEX.match(ascii_hostname):\n        raise ValueError(\"Hostname contains invalid characters.\")\n\n    # Rebuild the URL with the normalized, IDNA-encoded hostname\n    parsed = parsed._replace(netloc=ascii_hostname)\n    url = str(urlunparse(parsed))\n\n    # Check if hostname is a trusted origin (exact match)\n    if ascii_hostname in trusted_origins:\n        return url\n\n    # Resolve all IP addresses for the hostname\n    try:\n        ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}\n    except socket.gaierror:\n        raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")\n\n    if not ip_addresses:\n        raise ValueError(f\"No IP addresses found for {ascii_hostname}\")\n\n    # Check if any resolved IP address falls into blocked ranges\n    for ip in ip_addresses:\n        if _is_ip_blocked(ip):\n            raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )\n\n    return url",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Validates the URL to prevent SSRF attacks by ensuring it does not point to a private\n    or untrusted IP address, unless whitelisted.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Validates the URL to prevent SSRF attacks by ensuring it does not point to a private\n    or untrusted IP address, unless whitelisted.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Validates the URL to prevent SSRF attacks by ensuring it does not point to a private\n    or untrusted IP address, unless whitelisted.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "url = _canonicalize_url(url)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "url = _canonicalize_url(url)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "_canonicalize_url(url)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_canonicalize_url",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(url)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "url",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "parsed = urlparse(url)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "parsed = urlparse(url)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "parsed",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "urlparse(url)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "urlparse",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(url)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "url",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Check scheme",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if parsed.scheme not in ALLOWED_SCHEMES:\n        raise ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "parsed.scheme not in ALLOWED_SCHEMES",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "parsed.scheme",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "parsed",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "scheme",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "ALLOWED_SCHEMES",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Scheme '{parsed.scheme}' is not allowed. Only HTTP/HTTPS are supported.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Scheme '",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{parsed.scheme}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "parsed.scheme",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "parsed",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "scheme",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "' is not allowed. Only HTTP/HTTPS are supported.",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Validate and IDNA encode the hostname",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if not parsed.hostname:\n        raise ValueError(\"Invalid URL: No hostname found.\")",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not parsed.hostname",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "parsed.hostname",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "parsed",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "hostname",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\"Invalid URL: No hostname found.\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\"Invalid URL: No hostname found.\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\"Invalid URL: No hostname found.\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Invalid URL: No hostname found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Invalid URL: No hostname found.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Invalid URL: No hostname found.",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# IDNA encode to prevent Unicode domain attacks",
                            "children": []
                        },
                        {
                            "type": "try_statement",
                            "label": "try:\n        ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")\n    except idna.IDNAError:\n        raise ValueError(\"Invalid hostname with unsupported characters.\")",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "ascii_hostname = idna.encode(parsed.hostname).decode(\"ascii\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ascii_hostname",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "idna.encode(parsed.hostname).decode(\"ascii\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "idna.encode(parsed.hostname).decode",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "idna.encode(parsed.hostname)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "idna.encode",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "idna",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "encode",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(parsed.hostname)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "parsed.hostname",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "parsed",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "hostname",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "decode",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"ascii\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"ascii\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "ascii",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except idna.IDNAError:\n        raise ValueError(\"Invalid hostname with unsupported characters.\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "idna.IDNAError",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "idna",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "IDNAError",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise ValueError(\"Invalid hostname with unsupported characters.\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise ValueError(\"Invalid hostname with unsupported characters.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "ValueError(\"Invalid hostname with unsupported characters.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ValueError",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"Invalid hostname with unsupported characters.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"Invalid hostname with unsupported characters.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Invalid hostname with unsupported characters.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Check hostname characters",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if not HOSTNAME_REGEX.match(ascii_hostname):\n        raise ValueError(\"Hostname contains invalid characters.\")",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not HOSTNAME_REGEX.match(ascii_hostname)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "HOSTNAME_REGEX.match(ascii_hostname)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "HOSTNAME_REGEX.match",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "HOSTNAME_REGEX",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "match",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(ascii_hostname)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ascii_hostname",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\"Hostname contains invalid characters.\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\"Hostname contains invalid characters.\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\"Hostname contains invalid characters.\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Hostname contains invalid characters.\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Hostname contains invalid characters.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Hostname contains invalid characters.",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Rebuild the URL with the normalized, IDNA-encoded hostname",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "parsed = parsed._replace(netloc=ascii_hostname)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "parsed = parsed._replace(netloc=ascii_hostname)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "parsed",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "parsed._replace(netloc=ascii_hostname)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "parsed._replace",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "parsed",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_replace",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(netloc=ascii_hostname)",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "netloc=ascii_hostname",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "netloc",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ascii_hostname",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "url = str(urlunparse(parsed))",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "url = str(urlunparse(parsed))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "str(urlunparse(parsed))",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(urlunparse(parsed))",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "urlunparse(parsed)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "urlunparse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(parsed)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "parsed",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Check if hostname is a trusted origin (exact match)",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if ascii_hostname in trusted_origins:\n        return url",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "ascii_hostname in trusted_origins",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ascii_hostname",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "trusted_origins",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return url",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return url",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "url",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Resolve all IP addresses for the hostname",
                            "children": []
                        },
                        {
                            "type": "try_statement",
                            "label": "try:\n        ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}\n    except socket.gaierror:\n        raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "ip_addresses = {res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ip_addresses",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "set_comprehension",
                                                            "label": "{res[4][0] for res in socket.getaddrinfo(ascii_hostname, None)}",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "res[4][0]",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "res[4]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "res",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "4",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for res in socket.getaddrinfo(ascii_hostname, None)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "res",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "socket.getaddrinfo(ascii_hostname, None)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "socket.getaddrinfo",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "socket",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getaddrinfo",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(ascii_hostname, None)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ascii_hostname",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "none",
                                                                                            "label": "None",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except socket.gaierror:\n        raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "socket.gaierror",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "socket",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "gaierror",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "ValueError(f\"Unable to resolve IP address for hostname {ascii_hostname}\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ValueError",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Unable to resolve IP address for hostname {ascii_hostname}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Unable to resolve IP address for hostname {ascii_hostname}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Unable to resolve IP address for hostname ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{ascii_hostname}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ascii_hostname",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not ip_addresses:\n        raise ValueError(f\"No IP addresses found for {ascii_hostname}\")",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not ip_addresses",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ip_addresses",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(f\"No IP addresses found for {ascii_hostname}\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(f\"No IP addresses found for {ascii_hostname}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(f\"No IP addresses found for {ascii_hostname}\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"No IP addresses found for {ascii_hostname}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"No IP addresses found for {ascii_hostname}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "No IP addresses found for ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{ascii_hostname}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ascii_hostname",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Check if any resolved IP address falls into blocked ranges",
                            "children": []
                        },
                        {
                            "type": "for_statement",
                            "label": "for ip in ip_addresses:\n        if _is_ip_blocked(ip):\n            raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ip",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "ip_addresses",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "if _is_ip_blocked(ip):\n            raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if _is_ip_blocked(ip):\n            raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "_is_ip_blocked(ip)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "_is_ip_blocked",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(ip)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ip",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Access to private IP address {ip} for hostname {ascii_hostname} is not allowed.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Access to private IP address ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{ip}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "ip",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " for hostname ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{ascii_hostname}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "ascii_hostname",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " is not allowed.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return url",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "url",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class Requests:\n    \"\"\"\n    A wrapper around the requests library that validates URLs before making requests.\n    \"\"\"\n\n    def __init__(\n        self,\n        trusted_origins: list[str] | None = None,\n        raise_for_status: bool = True,\n        extra_url_validator: Callable[[str], str] | None = None,\n        extra_headers: dict[str, str] | None = None,\n    ):\n        self.trusted_origins = []\n        for url in trusted_origins or []:\n            hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)\n\n        self.raise_for_status = raise_for_status\n        self.extra_url_validator = extra_url_validator\n        self.extra_headers = extra_headers\n\n    def request(\n        self, method, url, headers=None, allow_redirects=False, *args, **kwargs\n    ) -> req.Response:\n        if self.extra_headers is not None:\n            headers = {**(headers or {}), **self.extra_headers}\n\n        url = validate_url(url, self.trusted_origins)\n        if self.extra_url_validator is not None:\n            url = self.extra_url_validator(url)\n\n        response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )\n        if self.raise_for_status:\n            response.raise_for_status()\n\n        return response\n\n    def get(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"GET\", url, *args, **kwargs)\n\n    def post(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"POST\", url, *args, **kwargs)\n\n    def put(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PUT\", url, *args, **kwargs)\n\n    def delete(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"DELETE\", url, *args, **kwargs)\n\n    def head(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"HEAD\", url, *args, **kwargs)\n\n    def options(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"OPTIONS\", url, *args, **kwargs)\n\n    def patch(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PATCH\", url, *args, **kwargs)",
            "children": [
                {
                    "type": "identifier",
                    "label": "Requests",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    A wrapper around the requests library that validates URLs before making requests.\n    \"\"\"\n\n    def __init__(\n        self,\n        trusted_origins: list[str] | None = None,\n        raise_for_status: bool = True,\n        extra_url_validator: Callable[[str], str] | None = None,\n        extra_headers: dict[str, str] | None = None,\n    ):\n        self.trusted_origins = []\n        for url in trusted_origins or []:\n            hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)\n\n        self.raise_for_status = raise_for_status\n        self.extra_url_validator = extra_url_validator\n        self.extra_headers = extra_headers\n\n    def request(\n        self, method, url, headers=None, allow_redirects=False, *args, **kwargs\n    ) -> req.Response:\n        if self.extra_headers is not None:\n            headers = {**(headers or {}), **self.extra_headers}\n\n        url = validate_url(url, self.trusted_origins)\n        if self.extra_url_validator is not None:\n            url = self.extra_url_validator(url)\n\n        response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )\n        if self.raise_for_status:\n            response.raise_for_status()\n\n        return response\n\n    def get(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"GET\", url, *args, **kwargs)\n\n    def post(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"POST\", url, *args, **kwargs)\n\n    def put(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PUT\", url, *args, **kwargs)\n\n    def delete(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"DELETE\", url, *args, **kwargs)\n\n    def head(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"HEAD\", url, *args, **kwargs)\n\n    def options(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"OPTIONS\", url, *args, **kwargs)\n\n    def patch(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PATCH\", url, *args, **kwargs)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    A wrapper around the requests library that validates URLs before making requests.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    A wrapper around the requests library that validates URLs before making requests.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    A wrapper around the requests library that validates URLs before making requests.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def __init__(\n        self,\n        trusted_origins: list[str] | None = None,\n        raise_for_status: bool = True,\n        extra_url_validator: Callable[[str], str] | None = None,\n        extra_headers: dict[str, str] | None = None,\n    ):\n        self.trusted_origins = []\n        for url in trusted_origins or []:\n            hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)\n\n        self.raise_for_status = raise_for_status\n        self.extra_url_validator = extra_url_validator\n        self.extra_headers = extra_headers",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self,\n        trusted_origins: list[str] | None = None,\n        raise_for_status: bool = True,\n        extra_url_validator: Callable[[str], str] | None = None,\n        extra_headers: dict[str, str] | None = None,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "trusted_origins: list[str] | None = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "trusted_origins",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "list[str] | None",
                                                    "children": [
                                                        {
                                                            "type": "union_type",
                                                            "label": "list[str] | None",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "list[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "list",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[str]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "str",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "None",
                                                                    "children": [
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "raise_for_status: bool = True",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "raise_for_status",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "true",
                                                    "label": "True",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "extra_url_validator: Callable[[str], str] | None = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "extra_url_validator",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Callable[[str], str] | None",
                                                    "children": [
                                                        {
                                                            "type": "union_type",
                                                            "label": "Callable[[str], str] | None",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Callable[[str], str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "Callable[[str], str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Callable",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[[str], str]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "[str]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "list",
                                                                                                    "label": "[str]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "str",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "None",
                                                                    "children": [
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "extra_headers: dict[str, str] | None = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "extra_headers",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "dict[str, str] | None",
                                                    "children": [
                                                        {
                                                            "type": "union_type",
                                                            "label": "dict[str, str] | None",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "dict[str, str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "dict[str, str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "dict",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[str, str]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "str",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "str",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "None",
                                                                    "children": [
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "self.trusted_origins = []\n        for url in trusted_origins or []:\n            hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)\n\n        self.raise_for_status = raise_for_status\n        self.extra_url_validator = extra_url_validator\n        self.extra_headers = extra_headers",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "self.trusted_origins = []",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.trusted_origins = []",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.trusted_origins",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "trusted_origins",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[]",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for url in trusted_origins or []:\n            hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "url",
                                                    "children": []
                                                },
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "trusted_origins or []",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "trusted_origins",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[]",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "hostname = urlparse(url).hostname\n            if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")\n            self.trusted_origins.append(hostname)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "hostname = urlparse(url).hostname",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "hostname = urlparse(url).hostname",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "hostname",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "urlparse(url).hostname",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "urlparse(url)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "urlparse",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(url)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "url",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "hostname",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if not hostname:\n                raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")",
                                                            "children": [
                                                                {
                                                                    "type": "not_operator",
                                                                    "label": "not hostname",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "hostname",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "raise_statement",
                                                                            "label": "raise ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "ValueError(f\"Invalid URL: Unable to determine hostname of {url}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ValueError",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(f\"Invalid URL: Unable to determine hostname of {url}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"Invalid URL: Unable to determine hostname of {url}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Invalid URL: Unable to determine hostname of ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{url}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "url",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "self.trusted_origins.append(hostname)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.trusted_origins.append(hostname)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.trusted_origins.append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.trusted_origins",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "trusted_origins",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(hostname)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "hostname",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.raise_for_status = raise_for_status",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.raise_for_status = raise_for_status",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.raise_for_status",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raise_for_status",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "raise_for_status",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.extra_url_validator = extra_url_validator",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.extra_url_validator = extra_url_validator",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.extra_url_validator",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "extra_url_validator",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "extra_url_validator",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.extra_headers = extra_headers",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.extra_headers = extra_headers",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.extra_headers",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "extra_headers",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "extra_headers",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def request(\n        self, method, url, headers=None, allow_redirects=False, *args, **kwargs\n    ) -> req.Response:\n        if self.extra_headers is not None:\n            headers = {**(headers or {}), **self.extra_headers}\n\n        url = validate_url(url, self.trusted_origins)\n        if self.extra_url_validator is not None:\n            url = self.extra_url_validator(url)\n\n        response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )\n        if self.raise_for_status:\n            response.raise_for_status()\n\n        return response",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "request",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self, method, url, headers=None, allow_redirects=False, *args, **kwargs\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "method",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "default_parameter",
                                            "label": "headers=None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "headers",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "default_parameter",
                                            "label": "allow_redirects=False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "allow_redirects",
                                                    "children": []
                                                },
                                                {
                                                    "type": "false",
                                                    "label": "False",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if self.extra_headers is not None:\n            headers = {**(headers or {}), **self.extra_headers}\n\n        url = validate_url(url, self.trusted_origins)\n        if self.extra_url_validator is not None:\n            url = self.extra_url_validator(url)\n\n        response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )\n        if self.raise_for_status:\n            response.raise_for_status()\n\n        return response",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if self.extra_headers is not None:\n            headers = {**(headers or {}), **self.extra_headers}",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "self.extra_headers is not None",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.extra_headers",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "extra_headers",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "headers = {**(headers or {}), **self.extra_headers}",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "headers = {**(headers or {}), **self.extra_headers}",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "headers = {**(headers or {}), **self.extra_headers}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "headers",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{**(headers or {}), **self.extra_headers}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary_splat",
                                                                                    "label": "**(headers or {})",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(headers or {})",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "headers or {}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "headers",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "dictionary",
                                                                                                            "label": "{}",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "dictionary_splat",
                                                                                    "label": "**self.extra_headers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.extra_headers",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "extra_headers",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "url = validate_url(url, self.trusted_origins)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "url = validate_url(url, self.trusted_origins)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "url",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "validate_url(url, self.trusted_origins)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "validate_url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(url, self.trusted_origins)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "url",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.trusted_origins",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "trusted_origins",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if self.extra_url_validator is not None:\n            url = self.extra_url_validator(url)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "self.extra_url_validator is not None",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.extra_url_validator",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "extra_url_validator",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "url = self.extra_url_validator(url)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "url = self.extra_url_validator(url)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "url = self.extra_url_validator(url)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "url",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "self.extra_url_validator(url)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.extra_url_validator",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "extra_url_validator",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(url)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "url",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "response = req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "response",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "req.request(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "req.request",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "req",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "request",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            method,\n            url,\n            headers=headers,\n            allow_redirects=allow_redirects,\n            *args,\n            **kwargs,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "method",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "url",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers=headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "allow_redirects=allow_redirects",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "allow_redirects",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "allow_redirects",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "list_splat",
                                                                            "label": "*args",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "args",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "dictionary_splat",
                                                                            "label": "**kwargs",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "kwargs",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if self.raise_for_status:\n            response.raise_for_status()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "self.raise_for_status",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "raise_for_status",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "response.raise_for_status()",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "response.raise_for_status()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "response.raise_for_status()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "response.raise_for_status",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "response",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "raise_for_status",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def get(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"GET\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"GET\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"GET\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"GET\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"GET\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"GET\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "GET",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def post(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"POST\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "post",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"POST\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"POST\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"POST\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"POST\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"POST\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "POST",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def put(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PUT\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "put",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"PUT\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"PUT\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"PUT\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"PUT\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"PUT\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "PUT",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def delete(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"DELETE\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "delete",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"DELETE\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"DELETE\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"DELETE\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"DELETE\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"DELETE\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "DELETE",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def head(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"HEAD\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "head",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"HEAD\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"HEAD\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"HEAD\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"HEAD\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"HEAD\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "HEAD",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def options(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"OPTIONS\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "options",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"OPTIONS\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"OPTIONS\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"OPTIONS\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"OPTIONS\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"OPTIONS\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "OPTIONS",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def patch(self, url, *args, **kwargs) -> req.Response:\n        return self.request(\"PATCH\", url, *args, **kwargs)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "patch",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "url",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "req.Response",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "req.Response",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "req",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "Response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return self.request(\"PATCH\", url, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return self.request(\"PATCH\", url, *args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.request(\"PATCH\", url, *args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.request",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"PATCH\", url, *args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"PATCH\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "PATCH",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "requests = Requests(trusted_origins=Config().trust_endpoints_for_requests)",
            "children": [
                {
                    "type": "assignment",
                    "label": "requests = Requests(trusted_origins=Config().trust_endpoints_for_requests)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "requests",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "Requests(trusted_origins=Config().trust_endpoints_for_requests)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Requests",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(trusted_origins=Config().trust_endpoints_for_requests)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "trusted_origins=Config().trust_endpoints_for_requests",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "trusted_origins",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "Config().trust_endpoints_for_requests",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Config()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Config",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "trust_endpoints_for_requests",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}