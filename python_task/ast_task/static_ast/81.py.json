{
    "type": "module",
    "label": "import pytest\n\nfrom backend.util.service import AppService, expose, get_service_client\n\nTEST_SERVICE_PORT = 8765\n\n\nclass ServiceTest(AppService):\n    def __init__(self):\n        super().__init__()\n\n    @classmethod\n    def get_port(cls) -> int:\n        return TEST_SERVICE_PORT\n\n    @expose\n    def add(self, a: int, b: int) -> int:\n        return a + b\n\n    @expose\n    def subtract(self, a: int, b: int) -> int:\n        return a - b\n\n    @expose\n    def fun_with_async(self, a: int, b: int) -> int:\n        async def add_async(a: int, b: int) -> int:\n            return a + b\n\n        return self.run_and_wait(add_async(a, b))\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_service_creation(server):\n    with ServiceTest():\n        client = get_service_client(ServiceTest)\n        assert client.add(5, 3) == 8\n        assert client.subtract(10, 4) == 6\n        assert client.fun_with_async(5, 3) == 8\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import pytest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pytest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pytest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.service import AppService, expose, get_service_client",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.service",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "service",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AppService",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AppService",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "expose",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "expose",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_service_client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_service_client",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "TEST_SERVICE_PORT = 8765",
            "children": [
                {
                    "type": "assignment",
                    "label": "TEST_SERVICE_PORT = 8765",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TEST_SERVICE_PORT",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "8765",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class ServiceTest(AppService):\n    def __init__(self):\n        super().__init__()\n\n    @classmethod\n    def get_port(cls) -> int:\n        return TEST_SERVICE_PORT\n\n    @expose\n    def add(self, a: int, b: int) -> int:\n        return a + b\n\n    @expose\n    def subtract(self, a: int, b: int) -> int:\n        return a - b\n\n    @expose\n    def fun_with_async(self, a: int, b: int) -> int:\n        async def add_async(a: int, b: int) -> int:\n            return a + b\n\n        return self.run_and_wait(add_async(a, b))",
            "children": [
                {
                    "type": "identifier",
                    "label": "ServiceTest",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(AppService)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AppService",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def __init__(self):\n        super().__init__()\n\n    @classmethod\n    def get_port(cls) -> int:\n        return TEST_SERVICE_PORT\n\n    @expose\n    def add(self, a: int, b: int) -> int:\n        return a + b\n\n    @expose\n    def subtract(self, a: int, b: int) -> int:\n        return a - b\n\n    @expose\n    def fun_with_async(self, a: int, b: int) -> int:\n        async def add_async(a: int, b: int) -> int:\n            return a + b\n\n        return self.run_and_wait(add_async(a, b))",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def __init__(self):\n        super().__init__()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "super().__init__()",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "super().__init__()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().__init__()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().__init__",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "__init__",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@classmethod\n    def get_port(cls) -> int:\n        return TEST_SERVICE_PORT",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@classmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "classmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def get_port(cls) -> int:\n        return TEST_SERVICE_PORT",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_port",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(cls)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cls",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return TEST_SERVICE_PORT",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return TEST_SERVICE_PORT",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "TEST_SERVICE_PORT",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@expose\n    def add(self, a: int, b: int) -> int:\n        return a + b",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@expose",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expose",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def add(self, a: int, b: int) -> int:\n        return a + b",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "add",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, a: int, b: int)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "a: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "b: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return a + b",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return a + b",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "a + b",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "b",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@expose\n    def subtract(self, a: int, b: int) -> int:\n        return a - b",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@expose",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expose",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def subtract(self, a: int, b: int) -> int:\n        return a - b",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "subtract",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, a: int, b: int)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "a: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "b: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return a - b",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return a - b",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "a - b",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "b",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@expose\n    def fun_with_async(self, a: int, b: int) -> int:\n        async def add_async(a: int, b: int) -> int:\n            return a + b\n\n        return self.run_and_wait(add_async(a, b))",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@expose",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expose",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def fun_with_async(self, a: int, b: int) -> int:\n        async def add_async(a: int, b: int) -> int:\n            return a + b\n\n        return self.run_and_wait(add_async(a, b))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "fun_with_async",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, a: int, b: int)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "a: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "b: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "async def add_async(a: int, b: int) -> int:\n            return a + b\n\n        return self.run_and_wait(add_async(a, b))",
                                            "children": [
                                                {
                                                    "type": "function_definition",
                                                    "label": "async def add_async(a: int, b: int) -> int:\n            return a + b",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "add_async",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(a: int, b: int)",
                                                            "children": [
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "a: int",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "int",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "int",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "b: int",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "b",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "int",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "int",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "return a + b",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return a + b",
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "a + b",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "a",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "b",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return self.run_and_wait(add_async(a, b))",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "self.run_and_wait(add_async(a, b))",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.run_and_wait",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "run_and_wait",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(add_async(a, b))",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "add_async(a, b)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "add_async",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(a, b)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "a",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "b",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_service_creation(server):\n    with ServiceTest():\n        client = get_service_client(ServiceTest)\n        assert client.add(5, 3) == 8\n        assert client.subtract(10, 4) == 6\n        assert client.fun_with_async(5, 3) == 8",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.mark.asyncio(scope=\"session\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "pytest.mark.asyncio(scope=\"session\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.mark.asyncio",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "pytest.mark",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "pytest",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mark",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "asyncio",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(scope=\"session\")",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "scope=\"session\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scope",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"session\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "session",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def test_service_creation(server):\n    with ServiceTest():\n        client = get_service_client(ServiceTest)\n        assert client.add(5, 3) == 8\n        assert client.subtract(10, 4) == 6\n        assert client.fun_with_async(5, 3) == 8",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "test_service_creation",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(server)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "server",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "with ServiceTest():\n        client = get_service_client(ServiceTest)\n        assert client.add(5, 3) == 8\n        assert client.subtract(10, 4) == 6\n        assert client.fun_with_async(5, 3) == 8",
                            "children": [
                                {
                                    "type": "with_statement",
                                    "label": "with ServiceTest():\n        client = get_service_client(ServiceTest)\n        assert client.add(5, 3) == 8\n        assert client.subtract(10, 4) == 6\n        assert client.fun_with_async(5, 3) == 8",
                                    "children": [
                                        {
                                            "type": "with_clause",
                                            "label": "ServiceTest()",
                                            "children": [
                                                {
                                                    "type": "with_item",
                                                    "label": "ServiceTest()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "ServiceTest()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ServiceTest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "client = get_service_client(ServiceTest)\n        assert client.add(5, 3) == 8\n        assert client.subtract(10, 4) == 6\n        assert client.fun_with_async(5, 3) == 8",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "client = get_service_client(ServiceTest)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "client = get_service_client(ServiceTest)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "get_service_client(ServiceTest)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_service_client",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(ServiceTest)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ServiceTest",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "label": "assert client.add(5, 3) == 8",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "client.add(5, 3) == 8",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "client.add(5, 3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "client.add",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "client",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "add",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(5, 3)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "5",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "3",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "8",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "label": "assert client.subtract(10, 4) == 6",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "client.subtract(10, 4) == 6",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "client.subtract(10, 4)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "client.subtract",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "client",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "subtract",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(10, 4)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "10",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "4",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "6",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "label": "assert client.fun_with_async(5, 3) == 8",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "client.fun_with_async(5, 3) == 8",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "client.fun_with_async(5, 3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "client.fun_with_async",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "client",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "fun_with_async",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(5, 3)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "5",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "3",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "8",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}