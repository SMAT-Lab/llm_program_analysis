{
    "type": "module",
    "label": "# -*- coding: utf-8 -*-\n\nimport re\nimport sys\nimport random\nfrom typing import List, Tuple\n\nimport requests\nfrom requests.models import Response\n\n\ndef find_links_in_text(text: str) -> List[str]:\n    \"\"\"Find links in a text and return a list of URLs.\"\"\"\n\n    link_pattern = re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')\n\n    raw_links = re.findall(link_pattern, text)\n\n    links = [\n        str(raw_link[0]) for raw_link in raw_links\n    ]\n\n    return links\n\n\ndef find_links_in_file(filename: str) -> List[str]:\n    \"\"\"Find links in a file and return a list of URLs from text file.\"\"\"\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        readme = file.read()\n        index_section = readme.find('## Index')\n        if index_section == -1:\n            index_section = 0\n        content = readme[index_section:]\n\n    links = find_links_in_text(content)\n\n    return links\n\n\ndef check_duplicate_links(links: List[str]) -> Tuple[bool, List]:\n    \"\"\"Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    \"\"\"\n\n    seen = {}\n    duplicates = []\n    has_duplicate = False\n\n    for link in links:\n        link = link.rstrip('/')\n        if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)\n\n    if duplicates:\n        has_duplicate = True\n\n    return (has_duplicate, duplicates)\n\n\ndef fake_user_agent() -> str:\n    \"\"\"Faking user agent as some hosting services block not-whitelisted UA.\"\"\"\n\n    user_agents = [\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]\n\n    return random.choice(user_agents)\n\n\ndef get_host_from_link(link: str) -> str:\n\n    host = link.split('://', 1)[1] if '://' in link else link\n\n    # Remove routes, arguments and anchors\n    if '/' in host:\n        host = host.split('/', 1)[0]\n\n    elif '?' in host:\n        host = host.split('?', 1)[0]\n\n    elif '#' in host:\n        host = host.split('#', 1)[0]\n\n    return host\n\n\ndef has_cloudflare_protection(resp: Response) -> bool:\n    \"\"\"Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    \"\"\"\n\n    code = resp.status_code\n    server = resp.headers.get('Server') or resp.headers.get('server')\n    cloudflare_flags = [\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]\n\n    if code in [403, 503] and server == 'cloudflare':\n        html = resp.text\n\n        flags_found = [flag in html for flag in cloudflare_flags]\n        any_flag_found = any(flags_found)\n\n        if any_flag_found:\n            return True\n\n    return False\n\n\ndef check_if_link_is_working(link: str) -> Tuple[bool, str]:\n    \"\"\"Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    \"\"\"\n\n    has_error = False\n    error_message = ''\n\n    try:\n        resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })\n\n        code = resp.status_code\n\n        if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'\n\n    except requests.exceptions.SSLError as error:\n        has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'\n\n    except requests.exceptions.ConnectionError as error:\n        has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'\n\n    except (TimeoutError, requests.exceptions.ConnectTimeout):\n        has_error = True\n        error_message = f'ERR:TMO: {link}'\n\n    except requests.exceptions.TooManyRedirects as error:\n        has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'\n\n    except (Exception, requests.exceptions.RequestException) as error:\n        has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'\n\n    return (has_error, error_message)\n\n\ndef check_if_list_of_links_are_working(list_of_links: List[str]) -> List[str]:\n    error_messages = []\n    for link in list_of_links:\n        has_error, error_message = check_if_link_is_working(link)\n\n        if has_error:\n            error_messages.append(error_message)\n\n    return error_messages\n\n\ndef start_duplicate_links_checker(links: List[str]) -> None:\n\n    print('Checking for duplicate links...')\n\n    has_duplicate_link, duplicates_links = check_duplicate_links(links)\n\n    if has_duplicate_link:\n        print(f'Found duplicate links:')\n\n        for duplicate_link in duplicates_links:\n            print(duplicate_link)\n\n        sys.exit(1)\n    else:\n        print('No duplicate links.')\n\n\ndef start_links_working_checker(links: List[str]) -> None:\n\n    print(f'Checking if {len(links)} links are working...')\n\n    errors = check_if_list_of_links_are_working(links)\n    if errors:\n\n        num_errors = len(errors)\n        print(f'Apparently {num_errors} links are not working properly. See in:')\n\n        for error_message in errors:\n            print(error_message)\n\n        sys.exit(1)\n\n\ndef main(filename: str, only_duplicate_links_checker: bool) -> None:\n\n    links = find_links_in_file(filename)\n\n    start_duplicate_links_checker(links)\n\n    if not only_duplicate_links_checker:\n        start_links_working_checker(links)\n\n\nif __name__ == '__main__':\n    num_args = len(sys.argv)\n    only_duplicate_links_checker = False\n\n    if num_args < 2:\n        print('No .md file passed')\n        sys.exit(1)\n    elif num_args == 3:\n        third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename, only_duplicate_links_checker)\n",
    "children": [
        {
            "type": "comment",
            "label": "# -*- coding: utf-8 -*-",
            "children": []
        },
        {
            "type": "import_statement",
            "label": "import re",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "re",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "re",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import sys",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "sys",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "sys",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import random",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "random",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "random",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import List, Tuple",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "List",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "List",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Tuple",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Tuple",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import requests",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "requests",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "requests",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from requests.models import Response",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "requests.models",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "requests",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "models",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Response",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Response",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def find_links_in_text(text: str) -> List[str]:\n    \"\"\"Find links in a text and return a list of URLs.\"\"\"\n\n    link_pattern = re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')\n\n    raw_links = re.findall(link_pattern, text)\n\n    links = [\n        str(raw_link[0]) for raw_link in raw_links\n    ]\n\n    return links",
            "children": [
                {
                    "type": "identifier",
                    "label": "find_links_in_text",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(text: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "text: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "text",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Find links in a text and return a list of URLs.\"\"\"\n\n    link_pattern = re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')\n\n    raw_links = re.findall(link_pattern, text)\n\n    links = [\n        str(raw_link[0]) for raw_link in raw_links\n    ]\n\n    return links",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Find links in a text and return a list of URLs.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Find links in a text and return a list of URLs.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Find links in a text and return a list of URLs.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "link_pattern = re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "link_pattern = re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "link_pattern",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "re.compile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "re",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "compile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))')",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))'",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "r'",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?«»“”‘’]))",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "raw_links = re.findall(link_pattern, text)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "raw_links = re.findall(link_pattern, text)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "raw_links",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "re.findall(link_pattern, text)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "re.findall",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "re",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "findall",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(link_pattern, text)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "link_pattern",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "text",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "links = [\n        str(raw_link[0]) for raw_link in raw_links\n    ]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "links = [\n        str(raw_link[0]) for raw_link in raw_links\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "links",
                                            "children": []
                                        },
                                        {
                                            "type": "list_comprehension",
                                            "label": "[\n        str(raw_link[0]) for raw_link in raw_links\n    ]",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "str(raw_link[0])",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(raw_link[0])",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "raw_link[0]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "raw_link",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for raw_link in raw_links",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_link",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_links",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return links",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "links",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def find_links_in_file(filename: str) -> List[str]:\n    \"\"\"Find links in a file and return a list of URLs from text file.\"\"\"\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        readme = file.read()\n        index_section = readme.find('## Index')\n        if index_section == -1:\n            index_section = 0\n        content = readme[index_section:]\n\n    links = find_links_in_text(content)\n\n    return links",
            "children": [
                {
                    "type": "identifier",
                    "label": "find_links_in_file",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(filename: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "filename: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filename",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Find links in a file and return a list of URLs from text file.\"\"\"\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        readme = file.read()\n        index_section = readme.find('## Index')\n        if index_section == -1:\n            index_section = 0\n        content = readme[index_section:]\n\n    links = find_links_in_text(content)\n\n    return links",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Find links in a file and return a list of URLs from text file.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Find links in a file and return a list of URLs from text file.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Find links in a file and return a list of URLs from text file.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with open(filename, mode='r', encoding='utf-8') as file:\n        readme = file.read()\n        index_section = readme.find('## Index')\n        if index_section == -1:\n            index_section = 0\n        content = readme[index_section:]",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "open(filename, mode='r', encoding='utf-8') as file",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "open(filename, mode='r', encoding='utf-8') as file",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "open(filename, mode='r', encoding='utf-8') as file",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "open(filename, mode='r', encoding='utf-8')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "open",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(filename, mode='r', encoding='utf-8')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "filename",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "mode='r'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "mode",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'r'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "r",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "encoding='utf-8'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "encoding",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'utf-8'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "utf-8",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "file",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "readme = file.read()\n        index_section = readme.find('## Index')\n        if index_section == -1:\n            index_section = 0\n        content = readme[index_section:]",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "readme = file.read()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "readme = file.read()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "readme",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "file.read()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "file.read",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "file",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "read",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "index_section = readme.find('## Index')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "index_section = readme.find('## Index')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "index_section",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "readme.find('## Index')",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "readme.find",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "readme",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "find",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "('## Index')",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'## Index'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "## Index",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if index_section == -1:\n            index_section = 0",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "index_section == -1",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "index_section",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "unary_operator",
                                                            "label": "-1",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "index_section = 0",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "index_section = 0",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "index_section = 0",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "index_section",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "content = readme[index_section:]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "content = readme[index_section:]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "content",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "readme[index_section:]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "readme",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "slice",
                                                                    "label": "index_section:",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "index_section",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "links = find_links_in_text(content)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "links = find_links_in_text(content)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "links",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "find_links_in_text(content)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "find_links_in_text",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(content)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "content",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return links",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "links",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_duplicate_links(links: List[str]) -> Tuple[bool, List]:\n    \"\"\"Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    \"\"\"\n\n    seen = {}\n    duplicates = []\n    has_duplicate = False\n\n    for link in links:\n        link = link.rstrip('/')\n        if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)\n\n    if duplicates:\n        has_duplicate = True\n\n    return (has_duplicate, duplicates)",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_duplicate_links",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(links: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "links: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "links",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Tuple[bool, List]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Tuple[bool, List]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[bool, List]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "List",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    \"\"\"\n\n    seen = {}\n    duplicates = []\n    has_duplicate = False\n\n    for link in links:\n        link = link.rstrip('/')\n        if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)\n\n    if duplicates:\n        has_duplicate = True\n\n    return (has_duplicate, duplicates)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "seen = {}",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "seen = {}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "seen",
                                            "children": []
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{}",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "duplicates = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "duplicates = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "duplicates",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "has_duplicate = False",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "has_duplicate = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "has_duplicate",
                                            "children": []
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for link in links:\n        link = link.rstrip('/')\n        if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "link",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "links",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "link = link.rstrip('/')\n        if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "link = link.rstrip('/')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "link = link.rstrip('/')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "link",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "link.rstrip('/')",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "link.rstrip",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "link",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "rstrip",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "('/')",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'/'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "/",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "link not in seen",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "link",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "seen",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "seen[link] = 1",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "seen[link] = 1",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "seen[link] = 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "seen[link]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "seen",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            if seen[link] == 1:\n                duplicates.append(link)",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "if seen[link] == 1:\n                duplicates.append(link)",
                                                            "children": [
                                                                {
                                                                    "type": "if_statement",
                                                                    "label": "if seen[link] == 1:\n                duplicates.append(link)",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "seen[link] == 1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "seen[link]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "seen",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "duplicates.append(link)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "duplicates.append(link)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "duplicates.append(link)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "duplicates.append",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "duplicates",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "append",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(link)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "link",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if duplicates:\n        has_duplicate = True",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "duplicates",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "has_duplicate = True",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "has_duplicate = True",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "has_duplicate = True",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "has_duplicate",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "true",
                                                            "label": "True",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return (has_duplicate, duplicates)",
                            "children": [
                                {
                                    "type": "tuple",
                                    "label": "(has_duplicate, duplicates)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "has_duplicate",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "duplicates",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def fake_user_agent() -> str:\n    \"\"\"Faking user agent as some hosting services block not-whitelisted UA.\"\"\"\n\n    user_agents = [\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]\n\n    return random.choice(user_agents)",
            "children": [
                {
                    "type": "identifier",
                    "label": "fake_user_agent",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Faking user agent as some hosting services block not-whitelisted UA.\"\"\"\n\n    user_agents = [\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]\n\n    return random.choice(user_agents)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Faking user agent as some hosting services block not-whitelisted UA.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Faking user agent as some hosting services block not-whitelisted UA.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Faking user agent as some hosting services block not-whitelisted UA.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "user_agents = [\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_agents = [\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_agents",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return random.choice(user_agents)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "random.choice(user_agents)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "random.choice",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "random",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "choice",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(user_agents)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_agents",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_host_from_link(link: str) -> str:\n\n    host = link.split('://', 1)[1] if '://' in link else link\n\n    # Remove routes, arguments and anchors\n    if '/' in host:\n        host = host.split('/', 1)[0]\n\n    elif '?' in host:\n        host = host.split('?', 1)[0]\n\n    elif '#' in host:\n        host = host.split('#', 1)[0]\n\n    return host",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_host_from_link",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(link: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "link: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "link",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "host = link.split('://', 1)[1] if '://' in link else link\n\n    # Remove routes, arguments and anchors\n    if '/' in host:\n        host = host.split('/', 1)[0]\n\n    elif '?' in host:\n        host = host.split('?', 1)[0]\n\n    elif '#' in host:\n        host = host.split('#', 1)[0]\n\n    return host",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "host = link.split('://', 1)[1] if '://' in link else link",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "host = link.split('://', 1)[1] if '://' in link else link",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "host",
                                            "children": []
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "label": "link.split('://', 1)[1] if '://' in link else link",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "link.split('://', 1)[1]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "link.split('://', 1)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "link.split",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "link",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "split",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "('://', 1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'://'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "://",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "'://' in link",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "'://'",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "'",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "://",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "link",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "link",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Remove routes, arguments and anchors",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if '/' in host:\n        host = host.split('/', 1)[0]\n\n    elif '?' in host:\n        host = host.split('?', 1)[0]\n\n    elif '#' in host:\n        host = host.split('#', 1)[0]",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "'/' in host",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "'/'",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "host",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "host = host.split('/', 1)[0]",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "host = host.split('/', 1)[0]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "host = host.split('/', 1)[0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "host",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "host.split('/', 1)[0]",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "host.split('/', 1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "host.split",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "host",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "split",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "('/', 1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'/'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "/",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "label": "elif '?' in host:\n        host = host.split('?', 1)[0]",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "'?' in host",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "'?'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "?",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "host",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "host = host.split('?', 1)[0]",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "host = host.split('?', 1)[0]",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "host = host.split('?', 1)[0]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "host",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "host.split('?', 1)[0]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "host.split('?', 1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "host.split",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "host",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "split",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "('?', 1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "'?'",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "?",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "label": "elif '#' in host:\n        host = host.split('#', 1)[0]",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "'#' in host",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "'#'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "#",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "host",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "host = host.split('#', 1)[0]",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "host = host.split('#', 1)[0]",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "host = host.split('#', 1)[0]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "host",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "host.split('#', 1)[0]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "host.split('#', 1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "host.split",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "host",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "split",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "('#', 1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "'#'",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "#",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return host",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "host",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def has_cloudflare_protection(resp: Response) -> bool:\n    \"\"\"Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    \"\"\"\n\n    code = resp.status_code\n    server = resp.headers.get('Server') or resp.headers.get('server')\n    cloudflare_flags = [\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]\n\n    if code in [403, 503] and server == 'cloudflare':\n        html = resp.text\n\n        flags_found = [flag in html for flag in cloudflare_flags]\n        any_flag_found = any(flags_found)\n\n        if any_flag_found:\n            return True\n\n    return False",
            "children": [
                {
                    "type": "identifier",
                    "label": "has_cloudflare_protection",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(resp: Response)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "resp: Response",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "resp",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Response",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Response",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "bool",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "bool",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    \"\"\"\n\n    code = resp.status_code\n    server = resp.headers.get('Server') or resp.headers.get('server')\n    cloudflare_flags = [\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]\n\n    if code in [403, 503] and server == 'cloudflare':\n        html = resp.text\n\n        flags_found = [flag in html for flag in cloudflare_flags]\n        any_flag_found = any(flags_found)\n\n        if any_flag_found:\n            return True\n\n    return False",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "code = resp.status_code",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "code = resp.status_code",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "code",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "resp.status_code",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "resp",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "status_code",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "server = resp.headers.get('Server') or resp.headers.get('server')",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "server = resp.headers.get('Server') or resp.headers.get('server')",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "server",
                                            "children": []
                                        },
                                        {
                                            "type": "boolean_operator",
                                            "label": "resp.headers.get('Server') or resp.headers.get('server')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "resp.headers.get('Server')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "resp.headers.get",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "resp.headers",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "headers",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "('Server')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'Server'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Server",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "resp.headers.get('server')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "resp.headers.get",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "resp.headers",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "headers",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "('server')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'server'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "server",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "cloudflare_flags = [\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "cloudflare_flags = [\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cloudflare_flags",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "'403 Forbidden'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "403 Forbidden",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'cloudflare'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "cloudflare",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Cloudflare'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Cloudflare",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Security check'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Security check",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Please Wait... | Cloudflare'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Please Wait... | Cloudflare",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'We are checking your browser...'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "We are checking your browser...",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Please stand by, while we are checking your browser...'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Please stand by, while we are checking your browser...",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Checking your browser before accessing'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Checking your browser before accessing",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'This process is automatic.'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "This process is automatic.",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Your browser will redirect to your requested content shortly.'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Your browser will redirect to your requested content shortly.",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Please allow up to 5 seconds'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Please allow up to 5 seconds",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'DDoS protection by'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "DDoS protection by",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Ray ID:'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Ray ID:",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'Cloudflare Ray ID:'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Cloudflare Ray ID:",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'_cf_chl'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "_cf_chl",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'_cf_chl_opt'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "_cf_chl_opt",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'__cf_chl_rt_tk'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "__cf_chl_rt_tk",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'cf-spinner-please-wait'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "cf-spinner-please-wait",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'cf-spinner-redirecting'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "cf-spinner-redirecting",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if code in [403, 503] and server == 'cloudflare':\n        html = resp.text\n\n        flags_found = [flag in html for flag in cloudflare_flags]\n        any_flag_found = any(flags_found)\n\n        if any_flag_found:\n            return True",
                            "children": [
                                {
                                    "type": "boolean_operator",
                                    "label": "code in [403, 503] and server == 'cloudflare'",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "code in [403, 503]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "code",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[403, 503]",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "403",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "503",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comparison_operator",
                                            "label": "server == 'cloudflare'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "server",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'cloudflare'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "cloudflare",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "html = resp.text\n\n        flags_found = [flag in html for flag in cloudflare_flags]\n        any_flag_found = any(flags_found)\n\n        if any_flag_found:\n            return True",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "html = resp.text",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "html = resp.text",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "html",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "resp.text",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "resp",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "text",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "flags_found = [flag in html for flag in cloudflare_flags]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "flags_found = [flag in html for flag in cloudflare_flags]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "flags_found",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list_comprehension",
                                                            "label": "[flag in html for flag in cloudflare_flags]",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "flag in html",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "html",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for flag in cloudflare_flags",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cloudflare_flags",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "any_flag_found = any(flags_found)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "any_flag_found = any(flags_found)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "any_flag_found",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "any(flags_found)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "any",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(flags_found)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "flags_found",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if any_flag_found:\n            return True",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "any_flag_found",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return True",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return True",
                                                            "children": [
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return False",
                            "children": [
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_if_link_is_working(link: str) -> Tuple[bool, str]:\n    \"\"\"Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    \"\"\"\n\n    has_error = False\n    error_message = ''\n\n    try:\n        resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })\n\n        code = resp.status_code\n\n        if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'\n\n    except requests.exceptions.SSLError as error:\n        has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'\n\n    except requests.exceptions.ConnectionError as error:\n        has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'\n\n    except (TimeoutError, requests.exceptions.ConnectTimeout):\n        has_error = True\n        error_message = f'ERR:TMO: {link}'\n\n    except requests.exceptions.TooManyRedirects as error:\n        has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'\n\n    except (Exception, requests.exceptions.RequestException) as error:\n        has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'\n\n    return (has_error, error_message)",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_if_link_is_working",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(link: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "link: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "link",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Tuple[bool, str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Tuple[bool, str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[bool, str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    \"\"\"\n\n    has_error = False\n    error_message = ''\n\n    try:\n        resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })\n\n        code = resp.status_code\n\n        if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'\n\n    except requests.exceptions.SSLError as error:\n        has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'\n\n    except requests.exceptions.ConnectionError as error:\n        has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'\n\n    except (TimeoutError, requests.exceptions.ConnectTimeout):\n        has_error = True\n        error_message = f'ERR:TMO: {link}'\n\n    except requests.exceptions.TooManyRedirects as error:\n        has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'\n\n    except (Exception, requests.exceptions.RequestException) as error:\n        has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'\n\n    return (has_error, error_message)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "has_error = False",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "has_error = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "has_error",
                                            "children": []
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "error_message = ''",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "error_message = ''",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "error_message",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "''",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "try_statement",
                            "label": "try:\n        resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })\n\n        code = resp.status_code\n\n        if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'\n\n    except requests.exceptions.SSLError as error:\n        has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'\n\n    except requests.exceptions.ConnectionError as error:\n        has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'\n\n    except (TimeoutError, requests.exceptions.ConnectTimeout):\n        has_error = True\n        error_message = f'ERR:TMO: {link}'\n\n    except requests.exceptions.TooManyRedirects as error:\n        has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'\n\n    except (Exception, requests.exceptions.RequestException) as error:\n        has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })\n\n        code = resp.status_code\n\n        if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "resp",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "requests.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "requests",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "link",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "timeout=25",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "timeout",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "25",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "'User-Agent': fake_user_agent()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'User-Agent'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "User-Agent",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "fake_user_agent()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "fake_user_agent",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "'host': get_host_from_link(link)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'host'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "host",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "get_host_from_link(link)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get_host_from_link",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(link)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "code = resp.status_code",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "code = resp.status_code",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "code",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "resp.status_code",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "resp",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "status_code",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "code >= 400 and not has_cloudflare_protection(resp)",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "code >= 400",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "code",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "400",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not has_cloudflare_protection(resp)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "has_cloudflare_protection(resp)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "has_cloudflare_protection",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(resp)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "resp",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "has_error = True",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "has_error = True",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "has_error",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "true",
                                                                            "label": "True",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "error_message = f'ERR:CLT: {code} : {link}'",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "error_message = f'ERR:CLT: {code} : {link}'",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "error_message",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f'ERR:CLT: {code} : {link}'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "ERR:CLT: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{code}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "code",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " : ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{link}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except requests.exceptions.SSLError as error:\n        has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "requests.exceptions.SSLError as error",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "requests.exceptions.SSLError",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "requests.exceptions",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "requests",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exceptions",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "SSLError",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "error",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "error",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "has_error = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "has_error = True",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "error_message = f'ERR:SSL: {error} : {link}'",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "error_message = f'ERR:SSL: {error} : {link}'",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'ERR:SSL: {error} : {link}'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "ERR:SSL: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{error}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " : ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{link}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except requests.exceptions.ConnectionError as error:\n        has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "requests.exceptions.ConnectionError as error",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "requests.exceptions.ConnectionError",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "requests.exceptions",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "requests",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exceptions",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "ConnectionError",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "error",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "error",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "has_error = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "has_error = True",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "error_message = f'ERR:CNT: {error} : {link}'",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "error_message = f'ERR:CNT: {error} : {link}'",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'ERR:CNT: {error} : {link}'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "ERR:CNT: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{error}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " : ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{link}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except (TimeoutError, requests.exceptions.ConnectTimeout):\n        has_error = True\n        error_message = f'ERR:TMO: {link}'",
                                    "children": [
                                        {
                                            "type": "tuple",
                                            "label": "(TimeoutError, requests.exceptions.ConnectTimeout)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "TimeoutError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "requests.exceptions.ConnectTimeout",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "requests.exceptions",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "requests",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exceptions",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "ConnectTimeout",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "has_error = True\n        error_message = f'ERR:TMO: {link}'",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "has_error = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "has_error = True",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "error_message = f'ERR:TMO: {link}'",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "error_message = f'ERR:TMO: {link}'",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'ERR:TMO: {link}'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "ERR:TMO: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{link}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except requests.exceptions.TooManyRedirects as error:\n        has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "requests.exceptions.TooManyRedirects as error",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "requests.exceptions.TooManyRedirects",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "requests.exceptions",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "requests",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exceptions",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "TooManyRedirects",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "error",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "error",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "has_error = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "has_error = True",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "error_message = f'ERR:TMR: {error} : {link}'",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "error_message = f'ERR:TMR: {error} : {link}'",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'ERR:TMR: {error} : {link}'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "ERR:TMR: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{error}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " : ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{link}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except (Exception, requests.exceptions.RequestException) as error:\n        has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "(Exception, requests.exceptions.RequestException) as error",
                                            "children": [
                                                {
                                                    "type": "tuple",
                                                    "label": "(Exception, requests.exceptions.RequestException)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "requests.exceptions.RequestException",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "requests.exceptions",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "requests",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "exceptions",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "RequestException",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "error",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "error",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "has_error = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "has_error = True",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "error_message = f'ERR:UKN: {error} : {link}'",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "error_message = f'ERR:UKN: {error} : {link}'",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'ERR:UKN: {error} : {link}'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "ERR:UKN: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{error}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " : ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{link}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return (has_error, error_message)",
                            "children": [
                                {
                                    "type": "tuple",
                                    "label": "(has_error, error_message)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "has_error",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "error_message",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_if_list_of_links_are_working(list_of_links: List[str]) -> List[str]:\n    error_messages = []\n    for link in list_of_links:\n        has_error, error_message = check_if_link_is_working(link)\n\n        if has_error:\n            error_messages.append(error_message)\n\n    return error_messages",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_if_list_of_links_are_working",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(list_of_links: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "list_of_links: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list_of_links",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "error_messages = []\n    for link in list_of_links:\n        has_error, error_message = check_if_link_is_working(link)\n\n        if has_error:\n            error_messages.append(error_message)\n\n    return error_messages",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "error_messages = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "error_messages = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "error_messages",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for link in list_of_links:\n        has_error, error_message = check_if_link_is_working(link)\n\n        if has_error:\n            error_messages.append(error_message)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "link",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "list_of_links",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "has_error, error_message = check_if_link_is_working(link)\n\n        if has_error:\n            error_messages.append(error_message)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "has_error, error_message = check_if_link_is_working(link)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "has_error, error_message = check_if_link_is_working(link)",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "has_error, error_message",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "check_if_link_is_working(link)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "check_if_link_is_working",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(link)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "link",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if has_error:\n            error_messages.append(error_message)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "has_error",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "error_messages.append(error_message)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "error_messages.append(error_message)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "error_messages.append(error_message)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "error_messages.append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error_messages",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(error_message)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error_message",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return error_messages",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "error_messages",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def start_duplicate_links_checker(links: List[str]) -> None:\n\n    print('Checking for duplicate links...')\n\n    has_duplicate_link, duplicates_links = check_duplicate_links(links)\n\n    if has_duplicate_link:\n        print(f'Found duplicate links:')\n\n        for duplicate_link in duplicates_links:\n            print(duplicate_link)\n\n        sys.exit(1)\n    else:\n        print('No duplicate links.')",
            "children": [
                {
                    "type": "identifier",
                    "label": "start_duplicate_links_checker",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(links: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "links: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "links",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "print('Checking for duplicate links...')\n\n    has_duplicate_link, duplicates_links = check_duplicate_links(links)\n\n    if has_duplicate_link:\n        print(f'Found duplicate links:')\n\n        for duplicate_link in duplicates_links:\n            print(duplicate_link)\n\n        sys.exit(1)\n    else:\n        print('No duplicate links.')",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "print('Checking for duplicate links...')",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "print('Checking for duplicate links...')",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "print",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "('Checking for duplicate links...')",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "'Checking for duplicate links...'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Checking for duplicate links...",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "has_duplicate_link, duplicates_links = check_duplicate_links(links)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "has_duplicate_link, duplicates_links = check_duplicate_links(links)",
                                    "children": [
                                        {
                                            "type": "pattern_list",
                                            "label": "has_duplicate_link, duplicates_links",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "has_duplicate_link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "duplicates_links",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_duplicate_links(links)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_duplicate_links",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(links)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if has_duplicate_link:\n        print(f'Found duplicate links:')\n\n        for duplicate_link in duplicates_links:\n            print(duplicate_link)\n\n        sys.exit(1)\n    else:\n        print('No duplicate links.')",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "has_duplicate_link",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "print(f'Found duplicate links:')\n\n        for duplicate_link in duplicates_links:\n            print(duplicate_link)\n\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "print(f'Found duplicate links:')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print(f'Found duplicate links:')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f'Found duplicate links:')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'Found duplicate links:'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Found duplicate links:",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for duplicate_link in duplicates_links:\n            print(duplicate_link)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "duplicate_link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "duplicates_links",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "print(duplicate_link)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "print(duplicate_link)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "print(duplicate_link)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "print",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(duplicate_link)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "duplicate_link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.exit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(1)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        print('No duplicate links.')",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "print('No duplicate links.')",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "print('No duplicate links.')",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "print('No duplicate links.')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "print",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "('No duplicate links.')",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'No duplicate links.'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "No duplicate links.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def start_links_working_checker(links: List[str]) -> None:\n\n    print(f'Checking if {len(links)} links are working...')\n\n    errors = check_if_list_of_links_are_working(links)\n    if errors:\n\n        num_errors = len(errors)\n        print(f'Apparently {num_errors} links are not working properly. See in:')\n\n        for error_message in errors:\n            print(error_message)\n\n        sys.exit(1)",
            "children": [
                {
                    "type": "identifier",
                    "label": "start_links_working_checker",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(links: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "links: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "links",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "print(f'Checking if {len(links)} links are working...')\n\n    errors = check_if_list_of_links_are_working(links)\n    if errors:\n\n        num_errors = len(errors)\n        print(f'Apparently {num_errors} links are not working properly. See in:')\n\n        for error_message in errors:\n            print(error_message)\n\n        sys.exit(1)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "print(f'Checking if {len(links)} links are working...')",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "print(f'Checking if {len(links)} links are working...')",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "print",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(f'Checking if {len(links)} links are working...')",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f'Checking if {len(links)} links are working...'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Checking if ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{len(links)}",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(links)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(links)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "links",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " links are working...",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "errors = check_if_list_of_links_are_working(links)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "errors = check_if_list_of_links_are_working(links)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "errors",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_if_list_of_links_are_working(links)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_if_list_of_links_are_working",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(links)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if errors:\n\n        num_errors = len(errors)\n        print(f'Apparently {num_errors} links are not working properly. See in:')\n\n        for error_message in errors:\n            print(error_message)\n\n        sys.exit(1)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "errors",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "num_errors = len(errors)\n        print(f'Apparently {num_errors} links are not working properly. See in:')\n\n        for error_message in errors:\n            print(error_message)\n\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "num_errors = len(errors)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "num_errors = len(errors)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "num_errors",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "len(errors)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(errors)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "errors",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "print(f'Apparently {num_errors} links are not working properly. See in:')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print(f'Apparently {num_errors} links are not working properly. See in:')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f'Apparently {num_errors} links are not working properly. See in:')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f'Apparently {num_errors} links are not working properly. See in:'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Apparently ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{num_errors}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "num_errors",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " links are not working properly. See in:",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for error_message in errors:\n            print(error_message)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "error_message",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "errors",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "print(error_message)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "print(error_message)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "print(error_message)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "print",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(error_message)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error_message",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.exit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(1)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def main(filename: str, only_duplicate_links_checker: bool) -> None:\n\n    links = find_links_in_file(filename)\n\n    start_duplicate_links_checker(links)\n\n    if not only_duplicate_links_checker:\n        start_links_working_checker(links)",
            "children": [
                {
                    "type": "identifier",
                    "label": "main",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(filename: str, only_duplicate_links_checker: bool)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "filename: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filename",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "only_duplicate_links_checker: bool",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "only_duplicate_links_checker",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "links = find_links_in_file(filename)\n\n    start_duplicate_links_checker(links)\n\n    if not only_duplicate_links_checker:\n        start_links_working_checker(links)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "links = find_links_in_file(filename)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "links = find_links_in_file(filename)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "links",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "find_links_in_file(filename)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "find_links_in_file",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(filename)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "filename",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "start_duplicate_links_checker(links)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "start_duplicate_links_checker(links)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "start_duplicate_links_checker",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(links)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "links",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not only_duplicate_links_checker:\n        start_links_working_checker(links)",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not only_duplicate_links_checker",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "only_duplicate_links_checker",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "start_links_working_checker(links)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "start_links_working_checker(links)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "start_links_working_checker(links)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "start_links_working_checker",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(links)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == '__main__':\n    num_args = len(sys.argv)\n    only_duplicate_links_checker = False\n\n    if num_args < 2:\n        print('No .md file passed')\n        sys.exit(1)\n    elif num_args == 3:\n        third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename, only_duplicate_links_checker)",
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == '__main__'",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "'__main__'",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "'",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "'",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "num_args = len(sys.argv)\n    only_duplicate_links_checker = False\n\n    if num_args < 2:\n        print('No .md file passed')\n        sys.exit(1)\n    elif num_args == 3:\n        third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename, only_duplicate_links_checker)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "num_args = len(sys.argv)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "num_args = len(sys.argv)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "num_args",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "len(sys.argv)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "len",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(sys.argv)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.argv",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "argv",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "only_duplicate_links_checker = False",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "only_duplicate_links_checker = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "only_duplicate_links_checker",
                                            "children": []
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if num_args < 2:\n        print('No .md file passed')\n        sys.exit(1)\n    elif num_args == 3:\n        third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "num_args < 2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "num_args",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "print('No .md file passed')\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "print('No .md file passed')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print('No .md file passed')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "('No .md file passed')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'No .md file passed'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "No .md file passed",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.exit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(1)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "label": "elif num_args == 3:\n        third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "num_args == 3",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "num_args",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "3",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "third_arg = sys.argv[2].lower()",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "third_arg = sys.argv[2].lower()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "third_arg",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "sys.argv[2].lower()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "sys.argv[2].lower",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "sys.argv[2]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "sys.argv",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "sys",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "argv",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "lower",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker'",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "third_arg == '-odlc'",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "third_arg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'-odlc'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "-odlc",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "third_arg == '--only_duplicate_links_checker'",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "third_arg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'--only_duplicate_links_checker'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "--only_duplicate_links_checker",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "only_duplicate_links_checker = True",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "only_duplicate_links_checker = True",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "only_duplicate_links_checker = True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "only_duplicate_links_checker",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "else_clause",
                                                            "label": "else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)",
                                                            "children": [
                                                                {
                                                                    "type": "block",
                                                                    "label": "print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "print",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Third invalid argument. Usage: python ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{__file__}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "__file__",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " [-odlc | --only_duplicate_links_checker]",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "sys.exit(1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "sys.exit(1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "sys.exit",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "sys",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "exit",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(1)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filename = sys.argv[1]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filename = sys.argv[1]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filename",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "sys.argv[1]",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "sys.argv",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "sys",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "argv",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "main(filename, only_duplicate_links_checker)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "main(filename, only_duplicate_links_checker)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "main",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(filename, only_duplicate_links_checker)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filename",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "only_duplicate_links_checker",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}