{
    "type": "module",
    "label": "import asyncio\nimport logging\nfrom collections import defaultdict\nfrom typing import TYPE_CHECKING, Annotated, Any, Sequence\n\nimport pydantic\nfrom autogpt_libs.auth.middleware import auth_middleware\nfrom autogpt_libs.feature_flag.client import feature_flag\nfrom autogpt_libs.utils.cache import thread_cached\nfrom fastapi import APIRouter, Depends, HTTPException\nfrom typing_extensions import Optional, TypedDict\n\nimport backend.data.block\nimport backend.server.integrations.router\nimport backend.server.routers.analytics\nfrom backend.data import execution as execution_db\nfrom backend.data import graph as graph_db\nfrom backend.data.api_key import (\n    APIKeyError,\n    APIKeyNotFoundError,\n    APIKeyPermissionError,\n    APIKeyWithoutHash,\n    generate_api_key,\n    get_api_key_by_id,\n    list_user_api_keys,\n    revoke_api_key,\n    suspend_api_key,\n    update_api_key_permissions,\n)\nfrom backend.data.block import BlockInput, CompletedBlockOutput\nfrom backend.data.credit import get_block_costs, get_user_credit_model\nfrom backend.data.user import get_or_create_user\nfrom backend.executor import ExecutionManager, ExecutionScheduler, scheduler\nfrom backend.integrations.creds_manager import IntegrationCredentialsManager\nfrom backend.integrations.webhooks.graph_lifecycle_hooks import (\n    on_graph_activate,\n    on_graph_deactivate,\n)\nfrom backend.server.model import (\n    CreateAPIKeyRequest,\n    CreateAPIKeyResponse,\n    CreateGraph,\n    SetGraphActiveVersion,\n    UpdatePermissionsRequest,\n)\nfrom backend.server.utils import get_user_id\nfrom backend.util.service import get_service_client\nfrom backend.util.settings import Settings\n\nif TYPE_CHECKING:\n    from backend.data.model import Credentials\n\n\n@thread_cached\ndef execution_manager_client() -> ExecutionManager:\n    return get_service_client(ExecutionManager)\n\n\n@thread_cached\ndef execution_scheduler_client() -> ExecutionScheduler:\n    return get_service_client(ExecutionScheduler)\n\n\nsettings = Settings()\nlogger = logging.getLogger(__name__)\nintegration_creds_manager = IntegrationCredentialsManager()\n\n\n_user_credit_model = get_user_credit_model()\n\n# Define the API routes\nv1_router = APIRouter()\n\nv1_router.include_router(\n    backend.server.integrations.router.router,\n    prefix=\"/integrations\",\n    tags=[\"integrations\"],\n)\n\nv1_router.include_router(\n    backend.server.routers.analytics.router,\n    prefix=\"/analytics\",\n    tags=[\"analytics\"],\n    dependencies=[Depends(auth_middleware)],\n)\n\n\n########################################################\n##################### Auth #############################\n########################################################\n\n\n@v1_router.post(\"/auth/user\", tags=[\"auth\"], dependencies=[Depends(auth_middleware)])\nasync def get_or_create_user_route(user_data: dict = Depends(auth_middleware)):\n    user = await get_or_create_user(user_data)\n    return user.model_dump()\n\n\n########################################################\n##################### Blocks ###########################\n########################################################\n\n\n@v1_router.get(path=\"/blocks\", tags=[\"blocks\"], dependencies=[Depends(auth_middleware)])\ndef get_graph_blocks() -> Sequence[dict[Any, Any]]:\n    blocks = [block() for block in backend.data.block.get_blocks().values()]\n    costs = get_block_costs()\n    return [{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks]\n\n\n@v1_router.post(\n    path=\"/blocks/{block_id}/execute\",\n    tags=[\"blocks\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef execute_graph_block(block_id: str, data: BlockInput) -> CompletedBlockOutput:\n    obj = backend.data.block.get_block(block_id)\n    if not obj:\n        raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")\n\n    output = defaultdict(list)\n    for name, data in obj.execute(data):\n        output[name].append(data)\n    return output\n\n\n########################################################\n##################### Credits ##########################\n########################################################\n\n\n@v1_router.get(path=\"/credits\", dependencies=[Depends(auth_middleware)])\nasync def get_user_credits(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[str, int]:\n    # Credits can go negative, so ensure it's at least 0 for user to see.\n    return {\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)}\n\n\n########################################################\n##################### Graphs ###########################\n########################################################\n\n\nclass DeleteGraphResponse(TypedDict):\n    version_counts: int\n\n\n@v1_router.get(path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)])\nasync def get_graphs(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    return await graph_db.get_graphs(filter_by=\"active\", user_id=user_id)\n\n\n@v1_router.get(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\n@v1_router.get(\n    path=\"/graphs/{graph_id}/versions/{version}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_graph(\n    graph_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n    version: int | None = None,\n    hide_credentials: bool = False,\n) -> graph_db.GraphModel:\n    graph = await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graph\n\n\n@v1_router.get(\n    path=\"/graphs/{graph_id}/versions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@v1_router.get(\n    path=\"/templates/{graph_id}/versions\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_graph_all_versions(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    graphs = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not graphs:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graphs\n\n\n@v1_router.post(\n    path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\nasync def create_new_graph(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n) -> graph_db.GraphModel:\n    return await do_create_graph(create_graph, is_template=False, user_id=user_id)\n\n\nasync def do_create_graph(\n    create_graph: CreateGraph,\n    is_template: bool,\n    # user_id doesn't have to be annotated like on other endpoints,\n    # because create_graph isn't used directly as an endpoint\n    user_id: str,\n) -> graph_db.GraphModel:\n    if create_graph.graph:\n        graph = graph_db.make_graph_model(create_graph.graph, user_id)\n    elif create_graph.template_id:\n        # Create a new graph from a template\n        graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )\n        if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )\n        graph.version = 1\n    else:\n        raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )\n\n    graph.is_template = is_template\n    graph.is_active = not is_template\n    graph.reassign_ids(user_id=user_id, reassign_graph_id=True)\n\n    graph = await graph_db.create_graph(graph, user_id=user_id)\n    graph = await on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )\n    return graph\n\n\n@v1_router.delete(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\nasync def delete_graph(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> DeleteGraphResponse:\n    if active_version := await graph_db.get_graph(graph_id, user_id=user_id):\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        await on_graph_deactivate(active_version, get_credentials)\n\n    return {\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)}\n\n\n@v1_router.put(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\n@v1_router.put(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def update_graph(\n    graph_id: str,\n    graph: graph_db.Graph,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> graph_db.GraphModel:\n    # Sanity check\n    if graph.id and graph.id != graph_id:\n        raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")\n\n    # Determine new version\n    existing_versions = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not existing_versions:\n        raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")\n    latest_version_number = max(g.version for g in existing_versions)\n    graph.version = latest_version_number + 1\n\n    latest_version_graph = next(\n        v for v in existing_versions if v.version == latest_version_number\n    )\n    current_active_version = next((v for v in existing_versions if v.is_active), None)\n    if latest_version_graph.is_template != graph.is_template:\n        raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )\n    graph.is_active = not graph.is_template\n    graph = graph_db.make_graph_model(graph, user_id)\n    graph.reassign_ids(user_id=user_id)\n\n    new_graph_version = await graph_db.create_graph(graph, user_id=user_id)\n\n    if new_graph_version.is_active:\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        # Handle activation of the new graph first to ensure continuity\n        new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )\n        # Ensure new version is the only active version\n        await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )\n        if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )\n\n    return new_graph_version\n\n\n@v1_router.put(\n    path=\"/graphs/{graph_id}/versions/active\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def set_graph_active_version(\n    graph_id: str,\n    request_body: SetGraphActiveVersion,\n    user_id: Annotated[str, Depends(get_user_id)],\n):\n    new_active_version = request_body.active_graph_version\n    new_active_graph = await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )\n    if not new_active_graph:\n        raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")\n\n    current_active_graph = await graph_db.get_graph(graph_id, user_id=user_id)\n\n    def get_credentials(credentials_id: str) -> \"Credentials | None\":\n        return integration_creds_manager.get(user_id, credentials_id)\n\n    # Handle activation of the new graph first to ensure continuity\n    await on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )\n    # Ensure new version is the only active version\n    await graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )\n    if current_active_graph and current_active_graph.version != new_active_version:\n        # Handle deactivation of the previously active version\n        await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )\n\n\n@v1_router.post(\n    path=\"/graphs/{graph_id}/execute\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef execute_graph(\n    graph_id: str,\n    node_input: dict[Any, Any],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[str, Any]:  # FIXME: add proper return type\n    try:\n        graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )\n        return {\"id\": graph_exec.graph_exec_id}\n    except Exception as e:\n        msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)\n\n\n@v1_router.post(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def stop_graph_run(\n    graph_exec_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[execution_db.ExecutionResult]:\n    if not await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id):\n        raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")\n\n    await asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )\n\n    # Retrieve & return canceled graph execution in its final state\n    return await execution_db.get_execution_results(graph_exec_id)\n\n\n@v1_router.get(\n    path=\"/executions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_executions(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[graph_db.GraphExecution]:\n    return await graph_db.get_executions(user_id=user_id)\n\n\n@v1_router.get(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_graph_run_node_execution_results(\n    graph_id: str,\n    graph_exec_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Sequence[execution_db.ExecutionResult]:\n    graph = await graph_db.get_graph(graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n\n    return await execution_db.get_execution_results(graph_exec_id)\n\n\n########################################################\n##################### Templates ########################\n########################################################\n\n\n@v1_router.get(\n    path=\"/templates\",\n    tags=[\"graphs\", \"templates\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_templates(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    return await graph_db.get_graphs(filter_by=\"template\", user_id=user_id)\n\n\n@v1_router.get(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_template(\n    graph_id: str, version: int | None = None\n) -> graph_db.GraphModel:\n    graph = await graph_db.get_graph(graph_id, version, template=True)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")\n    return graph\n\n\n@v1_router.post(\n    path=\"/templates\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def create_new_template(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n) -> graph_db.GraphModel:\n    return await do_create_graph(create_graph, is_template=True, user_id=user_id)\n\n\n########################################################\n##################### Schedules ########################\n########################################################\n\n\nclass ScheduleCreationRequest(pydantic.BaseModel):\n    cron: str\n    input_data: dict[Any, Any]\n    graph_id: str\n\n\n@v1_router.post(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def create_schedule(\n    user_id: Annotated[str, Depends(get_user_id)],\n    schedule: ScheduleCreationRequest,\n) -> scheduler.JobInfo:\n    graph = await graph_db.get_graph(schedule.graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )\n\n    return await asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )\n\n\n@v1_router.delete(\n    path=\"/schedules/{schedule_id}\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef delete_schedule(\n    schedule_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[Any, Any]:\n    execution_scheduler_client().delete_schedule(schedule_id, user_id=user_id)\n    return {\"id\": schedule_id}\n\n\n@v1_router.get(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef get_execution_schedules(\n    user_id: Annotated[str, Depends(get_user_id)],\n    graph_id: str | None = None,\n) -> list[scheduler.JobInfo]:\n    return execution_scheduler_client().get_execution_schedules(\n        user_id=user_id,\n        graph_id=graph_id,\n    )\n\n\n########################################################\n#####################  API KEY ##############################\n########################################################\n\n\n@v1_router.post(\n    \"/api-keys\",\n    response_model=list[CreateAPIKeyResponse] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def create_api_key(\n    request: CreateAPIKeyRequest, user_id: Annotated[str, Depends(get_user_id)]\n) -> CreateAPIKeyResponse:\n    \"\"\"Create a new API key\"\"\"\n    try:\n        api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )\n        return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)\n    except APIKeyError as e:\n        logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))\n\n\n@v1_router.get(\n    \"/api-keys\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def get_api_keys(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> list[APIKeyWithoutHash]:\n    \"\"\"List all API keys for the user\"\"\"\n    try:\n        return await list_user_api_keys(user_id)\n    except APIKeyError as e:\n        logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))\n\n\n@v1_router.get(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def get_api_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> APIKeyWithoutHash:\n    \"\"\"Get a specific API key\"\"\"\n    try:\n        api_key = await get_api_key_by_id(key_id, user_id)\n        if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")\n        return api_key\n    except APIKeyError as e:\n        logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))\n\n\n@v1_router.delete(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def delete_api_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Revoke an API key\"\"\"\n    try:\n        return await revoke_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))\n\n\n@v1_router.post(\n    \"/api-keys/{key_id}/suspend\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def suspend_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Suspend an API key\"\"\"\n    try:\n        return await suspend_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))\n\n\n@v1_router.put(\n    \"/api-keys/{key_id}/permissions\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def update_permissions(\n    key_id: str,\n    request: UpdatePermissionsRequest,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Update API key permissions\"\"\"\n    try:\n        return await update_api_key_permissions(key_id, user_id, request.permissions)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import asyncio",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from collections import defaultdict",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "collections",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "collections",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "defaultdict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "defaultdict",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import TYPE_CHECKING, Annotated, Any, Sequence",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TYPE_CHECKING",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TYPE_CHECKING",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Annotated",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Annotated",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Sequence",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Sequence",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import pydantic",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pydantic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pydantic",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from autogpt_libs.auth.middleware import auth_middleware",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "autogpt_libs.auth.middleware",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "autogpt_libs",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "auth",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "middleware",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "auth_middleware",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "auth_middleware",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from autogpt_libs.feature_flag.client import feature_flag",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "autogpt_libs.feature_flag.client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "autogpt_libs",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "feature_flag",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "feature_flag",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "feature_flag",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from autogpt_libs.utils.cache import thread_cached",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "autogpt_libs.utils.cache",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "autogpt_libs",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "utils",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "cache",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "thread_cached",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "thread_cached",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from fastapi import APIRouter, Depends, HTTPException",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "fastapi",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fastapi",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIRouter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIRouter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Depends",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Depends",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "HTTPException",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HTTPException",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing_extensions import Optional, TypedDict",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing_extensions",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing_extensions",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Optional",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Optional",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TypedDict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TypedDict",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import backend.data.block",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import backend.server.integrations.router",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.integrations.router",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "router",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import backend.server.routers.analytics",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.routers.analytics",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "routers",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "analytics",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data import execution as execution_db",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "aliased_import",
                    "label": "execution as execution_db",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "execution",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "execution",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "execution_db",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data import graph as graph_db",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "aliased_import",
                    "label": "graph as graph_db",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "graph_db",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.api_key import (\n    APIKeyError,\n    APIKeyNotFoundError,\n    APIKeyPermissionError,\n    APIKeyWithoutHash,\n    generate_api_key,\n    get_api_key_by_id,\n    list_user_api_keys,\n    revoke_api_key,\n    suspend_api_key,\n    update_api_key_permissions,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.api_key",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "api_key",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIKeyError",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIKeyError",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIKeyNotFoundError",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIKeyNotFoundError",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIKeyPermissionError",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIKeyPermissionError",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIKeyWithoutHash",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIKeyWithoutHash",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "generate_api_key",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "generate_api_key",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_api_key_by_id",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_api_key_by_id",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "list_user_api_keys",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "list_user_api_keys",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "revoke_api_key",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "revoke_api_key",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "suspend_api_key",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "suspend_api_key",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "update_api_key_permissions",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "update_api_key_permissions",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.block import BlockInput, CompletedBlockOutput",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockInput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockInput",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CompletedBlockOutput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CompletedBlockOutput",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.credit import get_block_costs, get_user_credit_model",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.credit",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "credit",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_block_costs",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_block_costs",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_user_credit_model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_user_credit_model",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.user import get_or_create_user",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.user",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "user",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_or_create_user",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_or_create_user",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.executor import ExecutionManager, ExecutionScheduler, scheduler",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.executor",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "executor",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ExecutionManager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ExecutionManager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ExecutionScheduler",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ExecutionScheduler",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "scheduler",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "scheduler",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.creds_manager import IntegrationCredentialsManager",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.creds_manager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "creds_manager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "IntegrationCredentialsManager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IntegrationCredentialsManager",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.webhooks.graph_lifecycle_hooks import (\n    on_graph_activate,\n    on_graph_deactivate,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.webhooks.graph_lifecycle_hooks",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "webhooks",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "graph_lifecycle_hooks",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "on_graph_activate",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "on_graph_activate",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "on_graph_deactivate",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "on_graph_deactivate",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.server.model import (\n    CreateAPIKeyRequest,\n    CreateAPIKeyResponse,\n    CreateGraph,\n    SetGraphActiveVersion,\n    UpdatePermissionsRequest,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CreateAPIKeyRequest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CreateAPIKeyRequest",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CreateAPIKeyResponse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CreateAPIKeyResponse",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CreateGraph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CreateGraph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SetGraphActiveVersion",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SetGraphActiveVersion",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "UpdatePermissionsRequest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UpdatePermissionsRequest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.server.utils import get_user_id",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.utils",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "utils",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_user_id",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_user_id",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.service import get_service_client",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.service",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "service",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_service_client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_service_client",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.settings import Settings",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Settings",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if TYPE_CHECKING:\n    from backend.data.model import Credentials",
            "children": [
                {
                    "type": "identifier",
                    "label": "TYPE_CHECKING",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "from backend.data.model import Credentials",
                    "children": [
                        {
                            "type": "import_from_statement",
                            "label": "from backend.data.model import Credentials",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "backend.data.model",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backend",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "model",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "Credentials",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Credentials",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@thread_cached\ndef execution_manager_client() -> ExecutionManager:\n    return get_service_client(ExecutionManager)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@thread_cached",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "thread_cached",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def execution_manager_client() -> ExecutionManager:\n    return get_service_client(ExecutionManager)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "execution_manager_client",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "ExecutionManager",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ExecutionManager",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return get_service_client(ExecutionManager)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return get_service_client(ExecutionManager)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "get_service_client(ExecutionManager)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_service_client",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(ExecutionManager)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ExecutionManager",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@thread_cached\ndef execution_scheduler_client() -> ExecutionScheduler:\n    return get_service_client(ExecutionScheduler)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@thread_cached",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "thread_cached",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def execution_scheduler_client() -> ExecutionScheduler:\n    return get_service_client(ExecutionScheduler)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "execution_scheduler_client",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "ExecutionScheduler",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ExecutionScheduler",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return get_service_client(ExecutionScheduler)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return get_service_client(ExecutionScheduler)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "get_service_client(ExecutionScheduler)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_service_client",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(ExecutionScheduler)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ExecutionScheduler",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "settings = Settings()",
            "children": [
                {
                    "type": "assignment",
                    "label": "settings = Settings()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "Settings()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Settings",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "integration_creds_manager = IntegrationCredentialsManager()",
            "children": [
                {
                    "type": "assignment",
                    "label": "integration_creds_manager = IntegrationCredentialsManager()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "integration_creds_manager",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "IntegrationCredentialsManager()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "IntegrationCredentialsManager",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "_user_credit_model = get_user_credit_model()",
            "children": [
                {
                    "type": "assignment",
                    "label": "_user_credit_model = get_user_credit_model()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "_user_credit_model",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "get_user_credit_model()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get_user_credit_model",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# Define the API routes",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "v1_router = APIRouter()",
            "children": [
                {
                    "type": "assignment",
                    "label": "v1_router = APIRouter()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "v1_router",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "APIRouter()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "APIRouter",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "v1_router.include_router(\n    backend.server.integrations.router.router,\n    prefix=\"/integrations\",\n    tags=[\"integrations\"],\n)",
            "children": [
                {
                    "type": "call",
                    "label": "v1_router.include_router(\n    backend.server.integrations.router.router,\n    prefix=\"/integrations\",\n    tags=[\"integrations\"],\n)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "v1_router.include_router",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "v1_router",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "include_router",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "(\n    backend.server.integrations.router.router,\n    prefix=\"/integrations\",\n    tags=[\"integrations\"],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "backend.server.integrations.router.router",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "backend.server.integrations.router",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "backend.server.integrations",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "backend",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "server",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "integrations",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "router",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "label": "prefix=\"/integrations\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "prefix",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"/integrations\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/integrations",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "label": "tags=[\"integrations\"]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "tags",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[\"integrations\"]",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"integrations\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "integrations",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "v1_router.include_router(\n    backend.server.routers.analytics.router,\n    prefix=\"/analytics\",\n    tags=[\"analytics\"],\n    dependencies=[Depends(auth_middleware)],\n)",
            "children": [
                {
                    "type": "call",
                    "label": "v1_router.include_router(\n    backend.server.routers.analytics.router,\n    prefix=\"/analytics\",\n    tags=[\"analytics\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "v1_router.include_router",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "v1_router",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "include_router",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "(\n    backend.server.routers.analytics.router,\n    prefix=\"/analytics\",\n    tags=[\"analytics\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "backend.server.routers.analytics.router",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "backend.server.routers.analytics",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "backend.server.routers",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "backend",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "server",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "routers",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "analytics",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "label": "prefix=\"/analytics\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "prefix",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"/analytics\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/analytics",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "label": "tags=[\"analytics\"]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "tags",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[\"analytics\"]",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"analytics\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "analytics",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "label": "dependencies=[Depends(auth_middleware)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "dependencies",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "Depends(auth_middleware)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Depends",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "auth_middleware",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "##################### Auth #############################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\"/auth/user\", tags=[\"auth\"], dependencies=[Depends(auth_middleware)])\nasync def get_or_create_user_route(user_data: dict = Depends(auth_middleware)):\n    user = await get_or_create_user(user_data)\n    return user.model_dump()",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\"/auth/user\", tags=[\"auth\"], dependencies=[Depends(auth_middleware)])",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\"/auth/user\", tags=[\"auth\"], dependencies=[Depends(auth_middleware)])",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/auth/user\", tags=[\"auth\"], dependencies=[Depends(auth_middleware)])",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/auth/user\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/auth/user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"auth\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"auth\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"auth\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "auth",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_or_create_user_route(user_data: dict = Depends(auth_middleware)):\n    user = await get_or_create_user(user_data)\n    return user.model_dump()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_or_create_user_route",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(user_data: dict = Depends(auth_middleware))",
                            "children": [
                                {
                                    "type": "typed_default_parameter",
                                    "label": "user_data: dict = Depends(auth_middleware)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_data",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dict",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "Depends(auth_middleware)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Depends",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(auth_middleware)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "auth_middleware",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "user = await get_or_create_user(user_data)\n    return user.model_dump()",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "user = await get_or_create_user(user_data)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "user = await get_or_create_user(user_data)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await get_or_create_user(user_data)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "get_or_create_user(user_data)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_or_create_user",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(user_data)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_data",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return user.model_dump()",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "user.model_dump()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "user.model_dump",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "model_dump",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "##################### Blocks ###########################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(path=\"/blocks\", tags=[\"blocks\"], dependencies=[Depends(auth_middleware)])\ndef get_graph_blocks() -> Sequence[dict[Any, Any]]:\n    blocks = [block() for block in backend.data.block.get_blocks().values()]\n    costs = get_block_costs()\n    return [{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks]",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(path=\"/blocks\", tags=[\"blocks\"], dependencies=[Depends(auth_middleware)])",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(path=\"/blocks\", tags=[\"blocks\"], dependencies=[Depends(auth_middleware)])",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(path=\"/blocks\", tags=[\"blocks\"], dependencies=[Depends(auth_middleware)])",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/blocks\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/blocks\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/blocks",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"blocks\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"blocks\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"blocks\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "blocks",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def get_graph_blocks() -> Sequence[dict[Any, Any]]:\n    blocks = [block() for block in backend.data.block.get_blocks().values()]\n    costs = get_block_costs()\n    return [{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_graph_blocks",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "Sequence[dict[Any, Any]]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Sequence[dict[Any, Any]]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[dict[Any, Any]]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "dict[Any, Any]",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "label": "dict[Any, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type_parameter",
                                                                    "label": "[Any, Any]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "Any",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Any",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "Any",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Any",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "blocks = [block() for block in backend.data.block.get_blocks().values()]\n    costs = get_block_costs()\n    return [{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks]",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "blocks = [block() for block in backend.data.block.get_blocks().values()]",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "blocks = [block() for block in backend.data.block.get_blocks().values()]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "blocks",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list_comprehension",
                                                    "label": "[block() for block in backend.data.block.get_blocks().values()]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "block()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "label": "for block in backend.data.block.get_blocks().values()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "backend.data.block.get_blocks().values()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.data.block.get_blocks().values",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "backend.data.block.get_blocks()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.data.block.get_blocks",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.data.block",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "backend.data",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "backend",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "data",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "block",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get_blocks",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "values",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "costs = get_block_costs()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "costs = get_block_costs()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "costs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "get_block_costs()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_block_costs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return [{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks]",
                                    "children": [
                                        {
                                            "type": "list_comprehension",
                                            "label": "[{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks]",
                                            "children": [
                                                {
                                                    "type": "dictionary",
                                                    "label": "{**b.to_dict(), \"costs\": costs.get(b.id, [])}",
                                                    "children": [
                                                        {
                                                            "type": "dictionary_splat",
                                                            "label": "**b.to_dict()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "b.to_dict()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "b.to_dict",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "b",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "to_dict",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "label": "\"costs\": costs.get(b.id, [])",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"costs\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "costs",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "costs.get(b.id, [])",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "costs.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "costs",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b.id, [])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "b.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "b",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "list",
                                                                                    "label": "[]",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for b in blocks",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "blocks",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    path=\"/blocks/{block_id}/execute\",\n    tags=[\"blocks\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef execute_graph_block(block_id: str, data: BlockInput) -> CompletedBlockOutput:\n    obj = backend.data.block.get_block(block_id)\n    if not obj:\n        raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")\n\n    output = defaultdict(list)\n    for name, data in obj.execute(data):\n        output[name].append(data)\n    return output",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    path=\"/blocks/{block_id}/execute\",\n    tags=[\"blocks\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    path=\"/blocks/{block_id}/execute\",\n    tags=[\"blocks\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/blocks/{block_id}/execute\",\n    tags=[\"blocks\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/blocks/{block_id}/execute\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/blocks/{block_id}/execute\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/blocks/{block_id}/execute",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"blocks\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"blocks\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"blocks\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "blocks",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def execute_graph_block(block_id: str, data: BlockInput) -> CompletedBlockOutput:\n    obj = backend.data.block.get_block(block_id)\n    if not obj:\n        raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")\n\n    output = defaultdict(list)\n    for name, data in obj.execute(data):\n        output[name].append(data)\n    return output",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "execute_graph_block",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(block_id: str, data: BlockInput)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "block_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "block_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "data: BlockInput",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "BlockInput",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "CompletedBlockOutput",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "CompletedBlockOutput",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "obj = backend.data.block.get_block(block_id)\n    if not obj:\n        raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")\n\n    output = defaultdict(list)\n    for name, data in obj.execute(data):\n        output[name].append(data)\n    return output",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "obj = backend.data.block.get_block(block_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "obj = backend.data.block.get_block(block_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "obj",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "backend.data.block.get_block(block_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.data.block.get_block",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.data.block",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.data",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "backend",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_block",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(block_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not obj:\n        raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not obj",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "obj",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=f\"Block #{block_id} not found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=f\"Block #{block_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Block #{block_id} not found.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Block #{block_id} not found.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Block #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{block_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "output = defaultdict(list)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "output = defaultdict(list)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "output",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "defaultdict(list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "defaultdict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "for_statement",
                                    "label": "for name, data in obj.execute(data):\n        output[name].append(data)",
                                    "children": [
                                        {
                                            "type": "pattern_list",
                                            "label": "name, data",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "name",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "data",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "obj.execute(data)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "obj.execute",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "obj",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "execute",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(data)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "data",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "output[name].append(data)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "output[name].append(data)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "output[name].append(data)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "output[name].append",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "output[name]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "output",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "append",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(data)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "data",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return output",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "output",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "##################### Credits ##########################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(path=\"/credits\", dependencies=[Depends(auth_middleware)])\nasync def get_user_credits(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[str, int]:\n    # Credits can go negative, so ensure it's at least 0 for user to see.\n    return {\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)}",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(path=\"/credits\", dependencies=[Depends(auth_middleware)])",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(path=\"/credits\", dependencies=[Depends(auth_middleware)])",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(path=\"/credits\", dependencies=[Depends(auth_middleware)])",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/credits\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/credits\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/credits",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_user_credits(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[str, int]:\n    # Credits can go negative, so ensure it's at least 0 for user to see.\n    return {\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)}",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_user_credits",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "dict[str, int]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "dict[str, int]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "dict",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[str, int]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Credits can go negative, so ensure it's at least 0 for user to see.",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "return {\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)}",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return {\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)}",
                                    "children": [
                                        {
                                            "type": "dictionary",
                                            "label": "{\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)}",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "label": "\"credits\": max(await _user_credit_model.get_or_refill_credit(user_id), 0)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"credits\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "credits",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "max(await _user_credit_model.get_or_refill_credit(user_id), 0)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "max",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(await _user_credit_model.get_or_refill_credit(user_id), 0)",
                                                                    "children": [
                                                                        {
                                                                            "type": "await",
                                                                            "label": "await _user_credit_model.get_or_refill_credit(user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "_user_credit_model.get_or_refill_credit(user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "_user_credit_model.get_or_refill_credit",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "_user_credit_model",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get_or_refill_credit",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(user_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "##################### Graphs ###########################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "class_definition",
            "label": "class DeleteGraphResponse(TypedDict):\n    version_counts: int",
            "children": [
                {
                    "type": "identifier",
                    "label": "DeleteGraphResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(TypedDict)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TypedDict",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "version_counts: int",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "version_counts: int",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "version_counts: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "version_counts",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)])\nasync def get_graphs(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    return await graph_db.get_graphs(filter_by=\"active\", user_id=user_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)])",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)])",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)])",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_graphs(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    return await graph_db.get_graphs(filter_by=\"active\", user_id=user_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_graphs",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Sequence[graph_db.GraphModel]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Sequence[graph_db.GraphModel]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[graph_db.GraphModel]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "graph_db.GraphModel",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.GraphModel",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "GraphModel",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return await graph_db.get_graphs(filter_by=\"active\", user_id=user_id)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return await graph_db.get_graphs(filter_by=\"active\", user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await graph_db.get_graphs(filter_by=\"active\", user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "graph_db.get_graphs(filter_by=\"active\", user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.get_graphs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_graphs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(filter_by=\"active\", user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "filter_by=\"active\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "filter_by",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"active\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "active",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\n@v1_router.get(\n    path=\"/graphs/{graph_id}/versions/{version}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_graph(\n    graph_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n    version: int | None = None,\n    hide_credentials: bool = False,\n) -> graph_db.GraphModel:\n    graph = await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graph",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}/versions/{version}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/graphs/{graph_id}/versions/{version}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}/versions/{version}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}/versions/{version}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}/versions/{version}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}/versions/{version}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_graph(\n    graph_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n    version: int | None = None,\n    hide_credentials: bool = False,\n) -> graph_db.GraphModel:\n    graph = await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_graph",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n    version: int | None = None,\n    hide_credentials: bool = False,\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "version: int | None = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "version",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "int | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "hide_credentials: bool = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "hide_credentials",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "graph_db.GraphModel",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "graph_db.GraphModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_db",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "graph = await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graph",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "graph = await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph = await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n        graph_id, version, user_id=user_id, for_export=hide_credentials\n    )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "for_export=hide_credentials",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "for_export",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "hide_credentials",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Graph #{graph_id} not found.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Graph #{graph_id} not found.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Graph #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{graph_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}/versions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@v1_router.get(\n    path=\"/templates/{graph_id}/versions\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_graph_all_versions(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    graphs = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not graphs:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graphs",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}/versions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/graphs/{graph_id}/versions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}/versions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}/versions\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}/versions\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}/versions",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/templates/{graph_id}/versions\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/templates/{graph_id}/versions\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/templates/{graph_id}/versions\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/templates/{graph_id}/versions\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/templates/{graph_id}/versions\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/templates/{graph_id}/versions",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"templates\", \"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"templates\", \"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"templates\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "templates",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_graph_all_versions(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    graphs = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not graphs:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graphs",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_graph_all_versions",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Sequence[graph_db.GraphModel]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Sequence[graph_db.GraphModel]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[graph_db.GraphModel]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "graph_db.GraphModel",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.GraphModel",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "GraphModel",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "graphs = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not graphs:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n    return graphs",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "graphs = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graphs = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graphs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph_all_versions",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph_all_versions",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not graphs:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not graphs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graphs",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Graph #{graph_id} not found.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Graph #{graph_id} not found.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Graph #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{graph_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return graphs",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graphs",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\nasync def create_new_graph(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n) -> graph_db.GraphModel:\n    return await do_create_graph(create_graph, is_template=False, user_id=user_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def create_new_graph(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n) -> graph_db.GraphModel:\n    return await do_create_graph(create_graph, is_template=False, user_id=user_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_new_graph",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "create_graph: CreateGraph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "create_graph",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "CreateGraph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CreateGraph",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "graph_db.GraphModel",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "graph_db.GraphModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_db",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return await do_create_graph(create_graph, is_template=False, user_id=user_id)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return await do_create_graph(create_graph, is_template=False, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await do_create_graph(create_graph, is_template=False, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "do_create_graph(create_graph, is_template=False, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "do_create_graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(create_graph, is_template=False, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "create_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "is_template=False",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "is_template",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "false",
                                                                            "label": "False",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def do_create_graph(\n    create_graph: CreateGraph,\n    is_template: bool,\n    # user_id doesn't have to be annotated like on other endpoints,\n    # because create_graph isn't used directly as an endpoint\n    user_id: str,\n) -> graph_db.GraphModel:\n    if create_graph.graph:\n        graph = graph_db.make_graph_model(create_graph.graph, user_id)\n    elif create_graph.template_id:\n        # Create a new graph from a template\n        graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )\n        if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )\n        graph.version = 1\n    else:\n        raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )\n\n    graph.is_template = is_template\n    graph.is_active = not is_template\n    graph.reassign_ids(user_id=user_id, reassign_graph_id=True)\n\n    graph = await graph_db.create_graph(graph, user_id=user_id)\n    graph = await on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )\n    return graph",
            "children": [
                {
                    "type": "identifier",
                    "label": "do_create_graph",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    create_graph: CreateGraph,\n    is_template: bool,\n    # user_id doesn't have to be annotated like on other endpoints,\n    # because create_graph isn't used directly as an endpoint\n    user_id: str,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "create_graph: CreateGraph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "create_graph",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "CreateGraph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "CreateGraph",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "is_template: bool",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "is_template",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# user_id doesn't have to be annotated like on other endpoints,",
                            "children": []
                        },
                        {
                            "type": "comment",
                            "label": "# because create_graph isn't used directly as an endpoint",
                            "children": []
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "graph_db.GraphModel",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "graph_db.GraphModel",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph_db",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "GraphModel",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "if create_graph.graph:\n        graph = graph_db.make_graph_model(create_graph.graph, user_id)\n    elif create_graph.template_id:\n        # Create a new graph from a template\n        graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )\n        if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )\n        graph.version = 1\n    else:\n        raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )\n\n    graph.is_template = is_template\n    graph.is_active = not is_template\n    graph.reassign_ids(user_id=user_id, reassign_graph_id=True)\n\n    graph = await graph_db.create_graph(graph, user_id=user_id)\n    graph = await on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )\n    return graph",
                    "children": [
                        {
                            "type": "if_statement",
                            "label": "if create_graph.graph:\n        graph = graph_db.make_graph_model(create_graph.graph, user_id)\n    elif create_graph.template_id:\n        # Create a new graph from a template\n        graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )\n        if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )\n        graph.version = 1\n    else:\n        raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "create_graph.graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "create_graph",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "graph = graph_db.make_graph_model(create_graph.graph, user_id)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "graph = graph_db.make_graph_model(create_graph.graph, user_id)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "graph = graph_db.make_graph_model(create_graph.graph, user_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.make_graph_model(create_graph.graph, user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.make_graph_model",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "make_graph_model",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(create_graph.graph, user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "create_graph.graph",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "create_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "label": "elif create_graph.template_id:\n        # Create a new graph from a template\n        graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )\n        if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )\n        graph.version = 1",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "create_graph.template_id",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "create_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "template_id",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Create a new graph from a template",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )\n        if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )\n        graph.version = 1",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "graph = await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "await",
                                                                    "label": "await graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "graph_db.get_graph(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph_db.get_graph",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_db",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_graph",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n            create_graph.template_id,\n            create_graph.template_version,\n            template=True,\n            user_id=user_id,\n        )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "create_graph.template_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "create_graph",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "template_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "create_graph.template_version",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "create_graph",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "template_version",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "template=True",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "template",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "true",
                                                                                                    "label": "True",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "user_id=user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if not graph:\n            raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not graph",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "HTTPException(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "HTTPException",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                400, detail=f\"Template #{create_graph.template_id} not found\"\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "detail=f\"Template #{create_graph.template_id} not found\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "detail",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"Template #{create_graph.template_id} not found\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Template #",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{create_graph.template_id}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "create_graph.template_id",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "create_graph",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "template_id",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " not found",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "graph.version = 1",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "graph.version = 1",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph.version",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            status_code=400, detail=\"Either graph or template_id must be provided.\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=400",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "400",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Either graph or template_id must be provided.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Either graph or template_id must be provided.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Either graph or template_id must be provided.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph.is_template = is_template",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph.is_template = is_template",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "graph.is_template",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "is_template",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "is_template",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph.is_active = not is_template",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph.is_active = not is_template",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "graph.is_active",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "is_active",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "not_operator",
                                            "label": "not is_template",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "is_template",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph.reassign_ids(user_id=user_id, reassign_graph_id=True)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "graph.reassign_ids(user_id=user_id, reassign_graph_id=True)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "graph.reassign_ids",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "reassign_ids",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(user_id=user_id, reassign_graph_id=True)",
                                            "children": [
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "user_id=user_id",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "reassign_graph_id=True",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "reassign_graph_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "true",
                                                            "label": "True",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph = await graph_db.create_graph(graph, user_id=user_id)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph = await graph_db.create_graph(graph, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await graph_db.create_graph(graph, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "graph_db.create_graph(graph, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.create_graph",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "create_graph",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(graph, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph = await on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph = await on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "on_graph_activate(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "on_graph_activate",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        graph,\n        get_credentials=lambda id: integration_creds_manager.get(user_id, id),\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "get_credentials=lambda id: integration_creds_manager.get(user_id, id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "lambda",
                                                                            "label": "lambda id: integration_creds_manager.get(user_id, id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "lambda_parameters",
                                                                                    "label": "id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "integration_creds_manager.get(user_id, id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "integration_creds_manager.get",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "integration_creds_manager",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(user_id, id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.delete(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\nasync def delete_graph(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> DeleteGraphResponse:\n    if active_version := await graph_db.get_graph(graph_id, user_id=user_id):\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        await on_graph_deactivate(active_version, get_credentials)\n\n    return {\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)}",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.delete(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.delete(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.delete",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "delete",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def delete_graph(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> DeleteGraphResponse:\n    if active_version := await graph_db.get_graph(graph_id, user_id=user_id):\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        await on_graph_deactivate(active_version, get_credentials)\n\n    return {\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)}",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "delete_graph",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "DeleteGraphResponse",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "DeleteGraphResponse",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "if active_version := await graph_db.get_graph(graph_id, user_id=user_id):\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        await on_graph_deactivate(active_version, get_credentials)\n\n    return {\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)}",
                            "children": [
                                {
                                    "type": "if_statement",
                                    "label": "if active_version := await graph_db.get_graph(graph_id, user_id=user_id):\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        await on_graph_deactivate(active_version, get_credentials)",
                                    "children": [
                                        {
                                            "type": "named_expression",
                                            "label": "active_version := await graph_db.get_graph(graph_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "active_version",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        await on_graph_deactivate(active_version, get_credentials)",
                                            "children": [
                                                {
                                                    "type": "function_definition",
                                                    "label": "def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(credentials_id: str)",
                                                            "children": [
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "credentials_id: str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "str",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "\"Credentials | None\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Credentials | None\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Credentials | None",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "return integration_creds_manager.get(user_id, credentials_id)",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return integration_creds_manager.get(user_id, credentials_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "integration_creds_manager.get(user_id, credentials_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "integration_creds_manager.get",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "integration_creds_manager",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(user_id, credentials_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await on_graph_deactivate(active_version, get_credentials)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await on_graph_deactivate(active_version, get_credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "on_graph_deactivate(active_version, get_credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "on_graph_deactivate",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(active_version, get_credentials)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "active_version",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_credentials",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return {\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)}",
                                    "children": [
                                        {
                                            "type": "dictionary",
                                            "label": "{\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)}",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "label": "\"version_counts\": await graph_db.delete_graph(graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"version_counts\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "version_counts",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await graph_db.delete_graph(graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "graph_db.delete_graph(graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "graph_db.delete_graph",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_db",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "delete_graph",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(graph_id, user_id=user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "user_id=user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.put(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)\n@v1_router.put(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def update_graph(\n    graph_id: str,\n    graph: graph_db.Graph,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> graph_db.GraphModel:\n    # Sanity check\n    if graph.id and graph.id != graph_id:\n        raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")\n\n    # Determine new version\n    existing_versions = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not existing_versions:\n        raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")\n    latest_version_number = max(g.version for g in existing_versions)\n    graph.version = latest_version_number + 1\n\n    latest_version_graph = next(\n        v for v in existing_versions if v.version == latest_version_number\n    )\n    current_active_version = next((v for v in existing_versions if v.is_active), None)\n    if latest_version_graph.is_template != graph.is_template:\n        raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )\n    graph.is_active = not graph.is_template\n    graph = graph_db.make_graph_model(graph, user_id)\n    graph.reassign_ids(user_id=user_id)\n\n    new_graph_version = await graph_db.create_graph(graph, user_id=user_id)\n\n    if new_graph_version.is_active:\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        # Handle activation of the new graph first to ensure continuity\n        new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )\n        # Ensure new version is the only active version\n        await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )\n        if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )\n\n    return new_graph_version",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.put(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.put(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.put",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "put",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}\", tags=[\"graphs\"], dependencies=[Depends(auth_middleware)]\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@v1_router.put(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.put(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.put",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "put",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/templates/{graph_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/templates/{graph_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/templates/{graph_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"templates\", \"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"templates\", \"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"templates\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "templates",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def update_graph(\n    graph_id: str,\n    graph: graph_db.Graph,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> graph_db.GraphModel:\n    # Sanity check\n    if graph.id and graph.id != graph_id:\n        raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")\n\n    # Determine new version\n    existing_versions = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not existing_versions:\n        raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")\n    latest_version_number = max(g.version for g in existing_versions)\n    graph.version = latest_version_number + 1\n\n    latest_version_graph = next(\n        v for v in existing_versions if v.version == latest_version_number\n    )\n    current_active_version = next((v for v in existing_versions if v.is_active), None)\n    if latest_version_graph.is_template != graph.is_template:\n        raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )\n    graph.is_active = not graph.is_template\n    graph = graph_db.make_graph_model(graph, user_id)\n    graph.reassign_ids(user_id=user_id)\n\n    new_graph_version = await graph_db.create_graph(graph, user_id=user_id)\n\n    if new_graph_version.is_active:\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        # Handle activation of the new graph first to ensure continuity\n        new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )\n        # Ensure new version is the only active version\n        await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )\n        if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )\n\n    return new_graph_version",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "update_graph",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str,\n    graph: graph_db.Graph,\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "graph: graph_db.Graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "graph_db.Graph",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "graph_db.Graph",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph_db",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "Graph",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "graph_db.GraphModel",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "graph_db.GraphModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_db",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Sanity check",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "if graph.id and graph.id != graph_id:\n        raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")\n\n    # Determine new version\n    existing_versions = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)\n    if not existing_versions:\n        raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")\n    latest_version_number = max(g.version for g in existing_versions)\n    graph.version = latest_version_number + 1\n\n    latest_version_graph = next(\n        v for v in existing_versions if v.version == latest_version_number\n    )\n    current_active_version = next((v for v in existing_versions if v.is_active), None)\n    if latest_version_graph.is_template != graph.is_template:\n        raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )\n    graph.is_active = not graph.is_template\n    graph = graph_db.make_graph_model(graph, user_id)\n    graph.reassign_ids(user_id=user_id)\n\n    new_graph_version = await graph_db.create_graph(graph, user_id=user_id)\n\n    if new_graph_version.is_active:\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        # Handle activation of the new graph first to ensure continuity\n        new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )\n        # Ensure new version is the only active version\n        await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )\n        if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )\n\n    return new_graph_version",
                            "children": [
                                {
                                    "type": "if_statement",
                                    "label": "if graph.id and graph.id != graph_id:\n        raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")",
                                    "children": [
                                        {
                                            "type": "boolean_operator",
                                            "label": "graph.id and graph.id != graph_id",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "graph.id",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "id",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "graph.id != graph_id",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph.id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph_id",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(400, detail=\"Graph ID does not match ID in URI\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(400, detail=\"Graph ID does not match ID in URI\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(400, detail=\"Graph ID does not match ID in URI\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "400",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Graph ID does not match ID in URI\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Graph ID does not match ID in URI\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Graph ID does not match ID in URI",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Determine new version",
                                    "children": []
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "existing_versions = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "existing_versions = await graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "existing_versions",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph_all_versions(graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph_all_versions",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph_all_versions",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not existing_versions:\n        raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not existing_versions",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "existing_versions",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(404, detail=f\"Graph #{graph_id} not found\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(404, detail=f\"Graph #{graph_id} not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(404, detail=f\"Graph #{graph_id} not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "404",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Graph #{graph_id} not found\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Graph #{graph_id} not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Graph #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{graph_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "latest_version_number = max(g.version for g in existing_versions)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "latest_version_number = max(g.version for g in existing_versions)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "latest_version_number",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "max(g.version for g in existing_versions)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "max",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "generator_expression",
                                                            "label": "(g.version for g in existing_versions)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "g.version",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "g",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for g in existing_versions",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "g",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "existing_versions",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "graph.version = latest_version_number + 1",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph.version = latest_version_number + 1",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "graph.version",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "version",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "latest_version_number + 1",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "latest_version_number",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "latest_version_graph = next(\n        v for v in existing_versions if v.version == latest_version_number\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "latest_version_graph = next(\n        v for v in existing_versions if v.version == latest_version_number\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "latest_version_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "next(\n        v for v in existing_versions if v.version == latest_version_number\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "next",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "generator_expression",
                                                            "label": "(\n        v for v in existing_versions if v.version == latest_version_number\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "v",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for v in existing_versions",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "v",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "existing_versions",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "if_clause",
                                                                    "label": "if v.version == latest_version_number",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "v.version == latest_version_number",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "v.version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "latest_version_number",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "current_active_version = next((v for v in existing_versions if v.is_active), None)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "current_active_version = next((v for v in existing_versions if v.is_active), None)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "current_active_version",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "next((v for v in existing_versions if v.is_active), None)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "next",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "((v for v in existing_versions if v.is_active), None)",
                                                            "children": [
                                                                {
                                                                    "type": "generator_expression",
                                                                    "label": "(v for v in existing_versions if v.is_active)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "v",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for v in existing_versions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "v",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "existing_versions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_clause",
                                                                            "label": "if v.is_active",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "v.is_active",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "is_active",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if latest_version_graph.is_template != graph.is_template:\n        raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "latest_version_graph.is_template != graph.is_template",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "latest_version_graph.is_template",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "latest_version_graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "is_template",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "graph.is_template",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "is_template",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            400, detail=\"Changing is_template on an existing graph is forbidden\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "400",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Changing is_template on an existing graph is forbidden\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Changing is_template on an existing graph is forbidden\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Changing is_template on an existing graph is forbidden",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "graph.is_active = not graph.is_template",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph.is_active = not graph.is_template",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "graph.is_active",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "is_active",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "not_operator",
                                                    "label": "not graph.is_template",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph.is_template",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "is_template",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "graph = graph_db.make_graph_model(graph, user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph = graph_db.make_graph_model(graph, user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "graph_db.make_graph_model(graph, user_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.make_graph_model",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "make_graph_model",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(graph, user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "graph.reassign_ids(user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "graph.reassign_ids(user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "graph.reassign_ids",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "reassign_ids",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "user_id=user_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "new_graph_version = await graph_db.create_graph(graph, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "new_graph_version = await graph_db.create_graph(graph, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "new_graph_version",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.create_graph(graph, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.create_graph(graph, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.create_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "create_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if new_graph_version.is_active:\n\n        def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        # Handle activation of the new graph first to ensure continuity\n        new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )\n        # Ensure new version is the only active version\n        await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )\n        if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "new_graph_version.is_active",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "new_graph_version",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "is_active",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)\n\n        # Handle activation of the new graph first to ensure continuity\n        new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )\n        # Ensure new version is the only active version\n        await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )\n        if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                            "children": [
                                                {
                                                    "type": "function_definition",
                                                    "label": "def get_credentials(credentials_id: str) -> \"Credentials | None\":\n            return integration_creds_manager.get(user_id, credentials_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(credentials_id: str)",
                                                            "children": [
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "credentials_id: str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "str",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "\"Credentials | None\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Credentials | None\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Credentials | None",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "return integration_creds_manager.get(user_id, credentials_id)",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return integration_creds_manager.get(user_id, credentials_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "integration_creds_manager.get(user_id, credentials_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "integration_creds_manager.get",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "integration_creds_manager",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(user_id, credentials_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Handle activation of the new graph first to ensure continuity",
                                                    "children": []
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "new_graph_version = await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "new_graph_version",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "await",
                                                                    "label": "await on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "on_graph_activate(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "on_graph_activate",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n            new_graph_version,\n            get_credentials=get_credentials,\n        )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "new_graph_version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "get_credentials=get_credentials",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get_credentials",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get_credentials",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Ensure new version is the only active version",
                                                    "children": []
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "graph_db.set_graph_active_version(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "graph_db.set_graph_active_version",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_db",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "set_graph_active_version",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            graph_id=graph_id, version=new_graph_version.version, user_id=user_id\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_id=graph_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "version=new_graph_version.version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "new_graph_version.version",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "new_graph_version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "user_id=user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if current_active_version:\n            # Handle deactivation of the previously active version\n            await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "current_active_version",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Handle deactivation of the previously active version",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "await",
                                                                            "label": "await on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "on_graph_deactivate(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "on_graph_deactivate",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\n                current_active_version,\n                get_credentials=get_credentials,\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "current_active_version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "get_credentials=get_credentials",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get_credentials",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get_credentials",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return new_graph_version",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "new_graph_version",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.put(\n    path=\"/graphs/{graph_id}/versions/active\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def set_graph_active_version(\n    graph_id: str,\n    request_body: SetGraphActiveVersion,\n    user_id: Annotated[str, Depends(get_user_id)],\n):\n    new_active_version = request_body.active_graph_version\n    new_active_graph = await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )\n    if not new_active_graph:\n        raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")\n\n    current_active_graph = await graph_db.get_graph(graph_id, user_id=user_id)\n\n    def get_credentials(credentials_id: str) -> \"Credentials | None\":\n        return integration_creds_manager.get(user_id, credentials_id)\n\n    # Handle activation of the new graph first to ensure continuity\n    await on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )\n    # Ensure new version is the only active version\n    await graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )\n    if current_active_graph and current_active_graph.version != new_active_version:\n        # Handle deactivation of the previously active version\n        await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.put(\n    path=\"/graphs/{graph_id}/versions/active\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.put(\n    path=\"/graphs/{graph_id}/versions/active\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.put",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "put",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}/versions/active\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}/versions/active\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}/versions/active\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}/versions/active",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def set_graph_active_version(\n    graph_id: str,\n    request_body: SetGraphActiveVersion,\n    user_id: Annotated[str, Depends(get_user_id)],\n):\n    new_active_version = request_body.active_graph_version\n    new_active_graph = await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )\n    if not new_active_graph:\n        raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")\n\n    current_active_graph = await graph_db.get_graph(graph_id, user_id=user_id)\n\n    def get_credentials(credentials_id: str) -> \"Credentials | None\":\n        return integration_creds_manager.get(user_id, credentials_id)\n\n    # Handle activation of the new graph first to ensure continuity\n    await on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )\n    # Ensure new version is the only active version\n    await graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )\n    if current_active_graph and current_active_graph.version != new_active_version:\n        # Handle deactivation of the previously active version\n        await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "set_graph_active_version",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str,\n    request_body: SetGraphActiveVersion,\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "request_body: SetGraphActiveVersion",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request_body",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "SetGraphActiveVersion",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "SetGraphActiveVersion",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "new_active_version = request_body.active_graph_version\n    new_active_graph = await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )\n    if not new_active_graph:\n        raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")\n\n    current_active_graph = await graph_db.get_graph(graph_id, user_id=user_id)\n\n    def get_credentials(credentials_id: str) -> \"Credentials | None\":\n        return integration_creds_manager.get(user_id, credentials_id)\n\n    # Handle activation of the new graph first to ensure continuity\n    await on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )\n    # Ensure new version is the only active version\n    await graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )\n    if current_active_graph and current_active_graph.version != new_active_version:\n        # Handle deactivation of the previously active version\n        await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "new_active_version = request_body.active_graph_version",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "new_active_version = request_body.active_graph_version",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "new_active_version",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "request_body.active_graph_version",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "request_body",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "active_graph_version",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "new_active_graph = await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "new_active_graph = await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "new_active_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(\n        graph_id, new_active_version, user_id=user_id\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n        graph_id, new_active_version, user_id=user_id\n    )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "new_active_version",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not new_active_graph:\n        raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not new_active_graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "new_active_graph",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(404, f\"Graph #{graph_id} v{new_active_version} not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(404, f\"Graph #{graph_id} v{new_active_version} not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "404",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Graph #{graph_id} v{new_active_version} not found\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Graph #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{graph_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " v",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{new_active_version}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "new_active_version",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " not found",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "current_active_graph = await graph_db.get_graph(graph_id, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "current_active_graph = await graph_db.get_graph(graph_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "current_active_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def get_credentials(credentials_id: str) -> \"Credentials | None\":\n        return integration_creds_manager.get(user_id, credentials_id)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_credentials",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(credentials_id: str)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "credentials_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "\"Credentials | None\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Credentials | None\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Credentials | None",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return integration_creds_manager.get(user_id, credentials_id)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return integration_creds_manager.get(user_id, credentials_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "integration_creds_manager.get(user_id, credentials_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "integration_creds_manager.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "integration_creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(user_id, credentials_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Handle activation of the new graph first to ensure continuity",
                                    "children": []
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "await on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "on_graph_activate(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "on_graph_activate",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        new_active_graph,\n        get_credentials=get_credentials,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "new_active_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "get_credentials=get_credentials",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Ensure new version is the only active version",
                                    "children": []
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "await graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "graph_db.set_graph_active_version(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.set_graph_active_version",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "set_graph_active_version",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        graph_id=graph_id,\n        version=new_active_version,\n        user_id=user_id,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "graph_id=graph_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "version=new_active_version",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "new_active_version",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if current_active_graph and current_active_graph.version != new_active_version:\n        # Handle deactivation of the previously active version\n        await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                                    "children": [
                                        {
                                            "type": "boolean_operator",
                                            "label": "current_active_graph and current_active_graph.version != new_active_version",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "current_active_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "current_active_graph.version != new_active_version",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "current_active_graph.version",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "current_active_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "version",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "new_active_version",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Handle deactivation of the previously active version",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "on_graph_deactivate(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "on_graph_deactivate",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            current_active_graph,\n            get_credentials=get_credentials,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "current_active_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "get_credentials=get_credentials",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_credentials",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_credentials",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    path=\"/graphs/{graph_id}/execute\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef execute_graph(\n    graph_id: str,\n    node_input: dict[Any, Any],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[str, Any]:  # FIXME: add proper return type\n    try:\n        graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )\n        return {\"id\": graph_exec.graph_exec_id}\n    except Exception as e:\n        msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    path=\"/graphs/{graph_id}/execute\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    path=\"/graphs/{graph_id}/execute\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}/execute\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}/execute\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}/execute\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}/execute",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def execute_graph(\n    graph_id: str,\n    node_input: dict[Any, Any],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[str, Any]:  # FIXME: add proper return type\n    try:\n        graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )\n        return {\"id\": graph_exec.graph_exec_id}\n    except Exception as e:\n        msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "execute_graph",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str,\n    node_input: dict[Any, Any],\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "node_input: dict[Any, Any]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "node_input",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[Any, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[Any, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Any, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "dict[str, Any]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "dict[str, Any]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "dict",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[str, Any]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Any",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Any",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# FIXME: add proper return type",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "try:\n        graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )\n        return {\"id\": graph_exec.graph_exec_id}\n    except Exception as e:\n        msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)",
                            "children": [
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )\n        return {\"id\": graph_exec.graph_exec_id}\n    except Exception as e:\n        msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )\n        return {\"id\": graph_exec.graph_exec_id}",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "graph_exec = execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_exec",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "execution_manager_client().add_execution(\n            graph_id, node_input, user_id=user_id\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "execution_manager_client().add_execution",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "execution_manager_client()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "execution_manager_client",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "add_execution",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            graph_id, node_input, user_id=user_id\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node_input",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "user_id=user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return {\"id\": graph_exec.graph_exec_id}",
                                                    "children": [
                                                        {
                                                            "type": "dictionary",
                                                            "label": "{\"id\": graph_exec.graph_exec_id}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "\"id\": graph_exec.graph_exec_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"id\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "graph_exec.graph_exec_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_exec",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_exec_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except Exception as e:\n        msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "Exception as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "msg = e.__str__().encode().decode(\"unicode_escape\")\n        raise HTTPException(status_code=400, detail=msg)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "msg = e.__str__().encode().decode(\"unicode_escape\")",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "msg = e.__str__().encode().decode(\"unicode_escape\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "msg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "e.__str__().encode().decode(\"unicode_escape\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "e.__str__().encode().decode",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "e.__str__().encode()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "e.__str__().encode",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "e.__str__()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "e.__str__",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "e",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "__str__",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "()",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "encode",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "decode",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\"unicode_escape\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"unicode_escape\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "unicode_escape",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=msg)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=msg",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def stop_graph_run(\n    graph_exec_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[execution_db.ExecutionResult]:\n    if not await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id):\n        raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")\n\n    await asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )\n\n    # Retrieve & return canceled graph execution in its final state\n    return await execution_db.get_execution_results(graph_exec_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}/executions/{graph_exec_id}/stop\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}/executions/{graph_exec_id}/stop",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def stop_graph_run(\n    graph_exec_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[execution_db.ExecutionResult]:\n    if not await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id):\n        raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")\n\n    await asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )\n\n    # Retrieve & return canceled graph execution in its final state\n    return await execution_db.get_execution_results(graph_exec_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "stop_graph_run",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_exec_id: str, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_exec_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_exec_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Sequence[execution_db.ExecutionResult]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Sequence[execution_db.ExecutionResult]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[execution_db.ExecutionResult]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "execution_db.ExecutionResult",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "execution_db.ExecutionResult",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ExecutionResult",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "if not await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id):\n        raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")\n\n    await asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )\n\n    # Retrieve & return canceled graph execution in its final state\n    return await execution_db.get_execution_results(graph_exec_id)",
                            "children": [
                                {
                                    "type": "if_statement",
                                    "label": "if not await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id):\n        raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_execution(user_id=user_id, execution_id=graph_exec_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_execution",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_execution",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(user_id=user_id, execution_id=graph_exec_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "execution_id=graph_exec_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "execution_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_exec_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(404, detail=f\"Agent execution #{graph_exec_id} not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(404, detail=f\"Agent execution #{graph_exec_id} not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "404",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Agent execution #{graph_exec_id} not found\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Agent execution #{graph_exec_id} not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Agent execution #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{graph_exec_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_exec_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "await asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "asyncio.to_thread(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "asyncio.to_thread",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "asyncio",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "to_thread",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        lambda: execution_manager_client().cancel_execution(graph_exec_id)\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "lambda",
                                                                    "label": "lambda: execution_manager_client().cancel_execution(graph_exec_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "execution_manager_client().cancel_execution(graph_exec_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "execution_manager_client().cancel_execution",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "execution_manager_client()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "execution_manager_client",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cancel_execution",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(graph_exec_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_exec_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Retrieve & return canceled graph execution in its final state",
                                    "children": []
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return await execution_db.get_execution_results(graph_exec_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await execution_db.get_execution_results(graph_exec_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "execution_db.get_execution_results(graph_exec_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "execution_db.get_execution_results",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_execution_results",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(graph_exec_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_exec_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/executions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_executions(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[graph_db.GraphExecution]:\n    return await graph_db.get_executions(user_id=user_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/executions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/executions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/executions\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/executions\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/executions\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/executions",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_executions(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[graph_db.GraphExecution]:\n    return await graph_db.get_executions(user_id=user_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_executions",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "list[graph_db.GraphExecution]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "list[graph_db.GraphExecution]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[graph_db.GraphExecution]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "graph_db.GraphExecution",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.GraphExecution",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "GraphExecution",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return await graph_db.get_executions(user_id=user_id)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return await graph_db.get_executions(user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await graph_db.get_executions(user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "graph_db.get_executions(user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.get_executions",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_executions",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_graph_run_node_execution_results(\n    graph_id: str,\n    graph_exec_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Sequence[execution_db.ExecutionResult]:\n    graph = await graph_db.get_graph(graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n\n    return await execution_db.get_execution_results(graph_exec_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/graphs/{graph_id}/executions/{graph_exec_id}\",\n    tags=[\"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/graphs/{graph_id}/executions/{graph_exec_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/graphs/{graph_id}/executions/{graph_exec_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/graphs/{graph_id}/executions/{graph_exec_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_graph_run_node_execution_results(\n    graph_id: str,\n    graph_exec_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Sequence[execution_db.ExecutionResult]:\n    graph = await graph_db.get_graph(graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n\n    return await execution_db.get_execution_results(graph_exec_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_graph_run_node_execution_results",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str,\n    graph_exec_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_exec_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_exec_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Sequence[execution_db.ExecutionResult]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Sequence[execution_db.ExecutionResult]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[execution_db.ExecutionResult]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "execution_db.ExecutionResult",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "execution_db.ExecutionResult",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ExecutionResult",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "graph = await graph_db.get_graph(graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")\n\n    return await execution_db.get_execution_results(graph_exec_id)",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "graph = await graph_db.get_graph(graph_id, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph = await graph_db.get_graph(graph_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not graph:\n        raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=f\"Graph #{graph_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Graph #{graph_id} not found.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Graph #{graph_id} not found.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Graph #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{graph_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return await execution_db.get_execution_results(graph_exec_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await execution_db.get_execution_results(graph_exec_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "execution_db.get_execution_results(graph_exec_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "execution_db.get_execution_results",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_execution_results",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(graph_exec_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_exec_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "##################### Templates ########################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/templates\",\n    tags=[\"graphs\", \"templates\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_templates(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    return await graph_db.get_graphs(filter_by=\"template\", user_id=user_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/templates\",\n    tags=[\"graphs\", \"templates\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/templates\",\n    tags=[\"graphs\", \"templates\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/templates\",\n    tags=[\"graphs\", \"templates\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/templates\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/templates\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/templates",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"graphs\", \"templates\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"graphs\", \"templates\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"templates\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "templates",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_templates(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> Sequence[graph_db.GraphModel]:\n    return await graph_db.get_graphs(filter_by=\"template\", user_id=user_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_templates",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Sequence[graph_db.GraphModel]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Sequence[graph_db.GraphModel]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[graph_db.GraphModel]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "graph_db.GraphModel",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.GraphModel",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "GraphModel",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return await graph_db.get_graphs(filter_by=\"template\", user_id=user_id)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return await graph_db.get_graphs(filter_by=\"template\", user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await graph_db.get_graphs(filter_by=\"template\", user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "graph_db.get_graphs(filter_by=\"template\", user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "graph_db.get_graphs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_graphs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(filter_by=\"template\", user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "filter_by=\"template\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "filter_by",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"template\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "template",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def get_template(\n    graph_id: str, version: int | None = None\n) -> graph_db.GraphModel:\n    graph = await graph_db.get_graph(graph_id, version, template=True)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")\n    return graph",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/templates/{graph_id}\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/templates/{graph_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/templates/{graph_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/templates/{graph_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"templates\", \"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"templates\", \"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"templates\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "templates",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_template(\n    graph_id: str, version: int | None = None\n) -> graph_db.GraphModel:\n    graph = await graph_db.get_graph(graph_id, version, template=True)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")\n    return graph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_template",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    graph_id: str, version: int | None = None\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "version: int | None = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "version",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "int | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "graph_db.GraphModel",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "graph_db.GraphModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_db",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "graph = await graph_db.get_graph(graph_id, version, template=True)\n    if not graph:\n        raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")\n    return graph",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "graph = await graph_db.get_graph(graph_id, version, template=True)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph = await graph_db.get_graph(graph_id, version, template=True)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(graph_id, version, template=True)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(graph_id, version, template=True)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(graph_id, version, template=True)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "template=True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "template",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not graph:\n        raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=f\"Template #{graph_id} not found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=f\"Template #{graph_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Template #{graph_id} not found.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Template #{graph_id} not found.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Template #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{graph_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    path=\"/templates\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def create_new_template(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n) -> graph_db.GraphModel:\n    return await do_create_graph(create_graph, is_template=True, user_id=user_id)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    path=\"/templates\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    path=\"/templates\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/templates\",\n    tags=[\"templates\", \"graphs\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/templates\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/templates\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/templates",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"templates\", \"graphs\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"templates\", \"graphs\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"templates\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "templates",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"graphs\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "graphs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def create_new_template(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n) -> graph_db.GraphModel:\n    return await do_create_graph(create_graph, is_template=True, user_id=user_id)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_new_template",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    create_graph: CreateGraph, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "create_graph: CreateGraph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "create_graph",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "CreateGraph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CreateGraph",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "graph_db.GraphModel",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "graph_db.GraphModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_db",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return await do_create_graph(create_graph, is_template=True, user_id=user_id)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return await do_create_graph(create_graph, is_template=True, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await do_create_graph(create_graph, is_template=True, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "do_create_graph(create_graph, is_template=True, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "do_create_graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(create_graph, is_template=True, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "create_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "is_template=True",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "is_template",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "true",
                                                                            "label": "True",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "##################### Schedules ########################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "class_definition",
            "label": "class ScheduleCreationRequest(pydantic.BaseModel):\n    cron: str\n    input_data: dict[Any, Any]\n    graph_id: str",
            "children": [
                {
                    "type": "identifier",
                    "label": "ScheduleCreationRequest",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(pydantic.BaseModel)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pydantic.BaseModel",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "pydantic",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "BaseModel",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "cron: str\n    input_data: dict[Any, Any]\n    graph_id: str",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "cron: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "cron: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cron",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "input_data: dict[Any, Any]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "input_data: dict[Any, Any]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "input_data",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[Any, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[Any, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Any, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)\nasync def create_schedule(\n    user_id: Annotated[str, Depends(get_user_id)],\n    schedule: ScheduleCreationRequest,\n) -> scheduler.JobInfo:\n    graph = await graph_db.get_graph(schedule.graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )\n\n    return await asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/schedules\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/schedules\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/schedules",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"schedules\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"schedules\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"schedules\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def create_schedule(\n    user_id: Annotated[str, Depends(get_user_id)],\n    schedule: ScheduleCreationRequest,\n) -> scheduler.JobInfo:\n    graph = await graph_db.get_graph(schedule.graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )\n\n    return await asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_schedule",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)],\n    schedule: ScheduleCreationRequest,\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "schedule: ScheduleCreationRequest",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "schedule",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "ScheduleCreationRequest",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ScheduleCreationRequest",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "scheduler.JobInfo",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "scheduler.JobInfo",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "scheduler",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "JobInfo",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "graph = await graph_db.get_graph(schedule.graph_id, user_id=user_id)\n    if not graph:\n        raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )\n\n    return await asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "graph = await graph_db.get_graph(schedule.graph_id, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "graph = await graph_db.get_graph(schedule.graph_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await graph_db.get_graph(schedule.graph_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "graph_db.get_graph(schedule.graph_id, user_id=user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph_db.get_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_db",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(schedule.graph_id, user_id=user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "schedule.graph_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "schedule",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not graph:\n        raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            status_code=404, detail=f\"Graph #{schedule.graph_id} not found.\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=f\"Graph #{schedule.graph_id} not found.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Graph #{schedule.graph_id} not found.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Graph #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{schedule.graph_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "schedule.graph_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedule",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "graph_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return await asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "asyncio.to_thread(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "asyncio.to_thread",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "asyncio",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "to_thread",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "lambda",
                                                                    "label": "lambda: execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "execution_scheduler_client().add_execution_schedule(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "execution_scheduler_client().add_execution_schedule",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "execution_scheduler_client()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "execution_scheduler_client",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "add_execution_schedule",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n            graph_id=schedule.graph_id,\n            graph_version=graph.version,\n            cron=schedule.cron,\n            input_data=schedule.input_data,\n            user_id=user_id,\n        )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "graph_id=schedule.graph_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "schedule.graph_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedule",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "graph_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "graph_version=graph.version",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "graph.version",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "graph",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "version",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "cron=schedule.cron",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cron",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "schedule.cron",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedule",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "cron",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "input_data=schedule.input_data",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "input_data",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "schedule.input_data",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedule",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "input_data",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "user_id=user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.delete(\n    path=\"/schedules/{schedule_id}\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef delete_schedule(\n    schedule_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[Any, Any]:\n    execution_scheduler_client().delete_schedule(schedule_id, user_id=user_id)\n    return {\"id\": schedule_id}",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.delete(\n    path=\"/schedules/{schedule_id}\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.delete(\n    path=\"/schedules/{schedule_id}\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.delete",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "delete",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/schedules/{schedule_id}\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/schedules/{schedule_id}\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/schedules/{schedule_id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/schedules/{schedule_id}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"schedules\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"schedules\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"schedules\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def delete_schedule(\n    schedule_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> dict[Any, Any]:\n    execution_scheduler_client().delete_schedule(schedule_id, user_id=user_id)\n    return {\"id\": schedule_id}",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "delete_schedule",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    schedule_id: str,\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "schedule_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "schedule_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "dict[Any, Any]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "dict[Any, Any]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "dict",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[Any, Any]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "Any",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Any",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Any",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Any",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "execution_scheduler_client().delete_schedule(schedule_id, user_id=user_id)\n    return {\"id\": schedule_id}",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "execution_scheduler_client().delete_schedule(schedule_id, user_id=user_id)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "execution_scheduler_client().delete_schedule(schedule_id, user_id=user_id)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "execution_scheduler_client().delete_schedule",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "execution_scheduler_client()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_scheduler_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "delete_schedule",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(schedule_id, user_id=user_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "schedule_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "user_id=user_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return {\"id\": schedule_id}",
                                    "children": [
                                        {
                                            "type": "dictionary",
                                            "label": "{\"id\": schedule_id}",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "label": "\"id\": schedule_id",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"id\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "schedule_id",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)\ndef get_execution_schedules(\n    user_id: Annotated[str, Depends(get_user_id)],\n    graph_id: str | None = None,\n) -> list[scheduler.JobInfo]:\n    return execution_scheduler_client().get_execution_schedules(\n        user_id=user_id,\n        graph_id=graph_id,\n    )",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    path=\"/schedules\",\n    tags=[\"schedules\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "path=\"/schedules\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"/schedules\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "/schedules",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"schedules\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"schedules\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"schedules\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def get_execution_schedules(\n    user_id: Annotated[str, Depends(get_user_id)],\n    graph_id: str | None = None,\n) -> list[scheduler.JobInfo]:\n    return execution_scheduler_client().get_execution_schedules(\n        user_id=user_id,\n        graph_id=graph_id,\n    )",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_execution_schedules",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)],\n    graph_id: str | None = None,\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "graph_id: str | None = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "str | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "list[scheduler.JobInfo]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "list[scheduler.JobInfo]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[scheduler.JobInfo]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "scheduler.JobInfo",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "scheduler.JobInfo",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scheduler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "JobInfo",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return execution_scheduler_client().get_execution_schedules(\n        user_id=user_id,\n        graph_id=graph_id,\n    )",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return execution_scheduler_client().get_execution_schedules(\n        user_id=user_id,\n        graph_id=graph_id,\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "execution_scheduler_client().get_execution_schedules(\n        user_id=user_id,\n        graph_id=graph_id,\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "execution_scheduler_client().get_execution_schedules",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "execution_scheduler_client()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_scheduler_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_execution_schedules",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        user_id=user_id,\n        graph_id=graph_id,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "user_id=user_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "graph_id=graph_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "graph_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "comment",
            "label": "#####################  API KEY ##############################",
            "children": []
        },
        {
            "type": "comment",
            "label": "########################################################",
            "children": []
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    \"/api-keys\",\n    response_model=list[CreateAPIKeyResponse] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def create_api_key(\n    request: CreateAPIKeyRequest, user_id: Annotated[str, Depends(get_user_id)]\n) -> CreateAPIKeyResponse:\n    \"\"\"Create a new API key\"\"\"\n    try:\n        api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )\n        return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)\n    except APIKeyError as e:\n        logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    \"/api-keys\",\n    response_model=list[CreateAPIKeyResponse] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    \"/api-keys\",\n    response_model=list[CreateAPIKeyResponse] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    \"/api-keys\",\n    response_model=list[CreateAPIKeyResponse] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/api-keys\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/api-keys",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "response_model=list[CreateAPIKeyResponse] | dict[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response_model",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "list[CreateAPIKeyResponse] | dict[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "list[CreateAPIKeyResponse]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "CreateAPIKeyResponse",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "dict[str, str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"api-keys\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"api-keys\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"api-keys\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api-keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@feature_flag(\"api-keys-enabled\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "feature_flag(\"api-keys-enabled\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "feature_flag",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"api-keys-enabled\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"api-keys-enabled\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "api-keys-enabled",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def create_api_key(\n    request: CreateAPIKeyRequest, user_id: Annotated[str, Depends(get_user_id)]\n) -> CreateAPIKeyResponse:\n    \"\"\"Create a new API key\"\"\"\n    try:\n        api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )\n        return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)\n    except APIKeyError as e:\n        logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_api_key",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    request: CreateAPIKeyRequest, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "request: CreateAPIKeyRequest",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "CreateAPIKeyRequest",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CreateAPIKeyRequest",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "CreateAPIKeyResponse",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "CreateAPIKeyResponse",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"Create a new API key\"\"\"\n    try:\n        api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )\n        return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)\n    except APIKeyError as e:\n        logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"Create a new API key\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"Create a new API key\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Create a new API key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )\n        return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)\n    except APIKeyError as e:\n        logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )\n        return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "api_key, plain_text = await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "label": "api_key, plain_text",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "api_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "plain_text",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "await",
                                                                    "label": "await generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "generate_api_key(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "generate_api_key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n            name=request.name,\n            user_id=user_id,\n            permissions=request.permissions,\n            description=request.description,\n        )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "name=request.name",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "name",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "request.name",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "request",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "name",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "user_id=user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "permissions=request.permissions",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "permissions",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "request.permissions",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "request",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "permissions",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "description=request.description",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "description",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "request.description",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "request",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "description",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "CreateAPIKeyResponse(api_key=api_key, plain_text_key=plain_text)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "CreateAPIKeyResponse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(api_key=api_key, plain_text_key=plain_text)",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "api_key=api_key",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "api_key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "api_key",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "plain_text_key=plain_text",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "plain_text_key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "plain_text",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyError as e:\n        logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "APIKeyError as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Failed to create API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Failed to create API key: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Failed to create API key: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Failed to create API key: {str(e)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Failed to create API key: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Failed to create API key: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{str(e)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "str(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    \"/api-keys\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def get_api_keys(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> list[APIKeyWithoutHash]:\n    \"\"\"List all API keys for the user\"\"\"\n    try:\n        return await list_user_api_keys(user_id)\n    except APIKeyError as e:\n        logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    \"/api-keys\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    \"/api-keys\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    \"/api-keys\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/api-keys\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/api-keys",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "response_model=list[APIKeyWithoutHash] | dict[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response_model",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "list[APIKeyWithoutHash] | dict[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "list[APIKeyWithoutHash]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "APIKeyWithoutHash",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "dict[str, str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"api-keys\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"api-keys\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"api-keys\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api-keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@feature_flag(\"api-keys-enabled\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "feature_flag(\"api-keys-enabled\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "feature_flag",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"api-keys-enabled\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"api-keys-enabled\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "api-keys-enabled",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_api_keys(\n    user_id: Annotated[str, Depends(get_user_id)]\n) -> list[APIKeyWithoutHash]:\n    \"\"\"List all API keys for the user\"\"\"\n    try:\n        return await list_user_api_keys(user_id)\n    except APIKeyError as e:\n        logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_api_keys",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "list[APIKeyWithoutHash]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "list[APIKeyWithoutHash]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[APIKeyWithoutHash]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "APIKeyWithoutHash",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyWithoutHash",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"List all API keys for the user\"\"\"\n    try:\n        return await list_user_api_keys(user_id)\n    except APIKeyError as e:\n        logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"List all API keys for the user\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"List all API keys for the user\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "List all API keys for the user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        return await list_user_api_keys(user_id)\n    except APIKeyError as e:\n        logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "return await list_user_api_keys(user_id)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return await list_user_api_keys(user_id)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await list_user_api_keys(user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "list_user_api_keys(user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list_user_api_keys",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyError as e:\n        logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "APIKeyError as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Failed to list API keys: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Failed to list API keys: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Failed to list API keys: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Failed to list API keys: {str(e)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Failed to list API keys: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Failed to list API keys: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{str(e)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "str(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.get(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def get_api_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> APIKeyWithoutHash:\n    \"\"\"Get a specific API key\"\"\"\n    try:\n        api_key = await get_api_key_by_id(key_id, user_id)\n        if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")\n        return api_key\n    except APIKeyError as e:\n        logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.get(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.get(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/api-keys/{key_id}\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/api-keys/{key_id}",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "response_model=list[APIKeyWithoutHash] | dict[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response_model",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "list[APIKeyWithoutHash] | dict[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "list[APIKeyWithoutHash]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "APIKeyWithoutHash",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "dict[str, str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"api-keys\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"api-keys\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"api-keys\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api-keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@feature_flag(\"api-keys-enabled\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "feature_flag(\"api-keys-enabled\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "feature_flag",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"api-keys-enabled\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"api-keys-enabled\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "api-keys-enabled",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def get_api_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> APIKeyWithoutHash:\n    \"\"\"Get a specific API key\"\"\"\n    try:\n        api_key = await get_api_key_by_id(key_id, user_id)\n        if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")\n        return api_key\n    except APIKeyError as e:\n        logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_api_key",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "key_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "key_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "APIKeyWithoutHash",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "APIKeyWithoutHash",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"Get a specific API key\"\"\"\n    try:\n        api_key = await get_api_key_by_id(key_id, user_id)\n        if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")\n        return api_key\n    except APIKeyError as e:\n        logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"Get a specific API key\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"Get a specific API key\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Get a specific API key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        api_key = await get_api_key_by_id(key_id, user_id)\n        if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")\n        return api_key\n    except APIKeyError as e:\n        logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "api_key = await get_api_key_by_id(key_id, user_id)\n        if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")\n        return api_key",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "api_key = await get_api_key_by_id(key_id, user_id)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "api_key = await get_api_key_by_id(key_id, user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "api_key",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "await",
                                                                    "label": "await get_api_key_by_id(key_id, user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_api_key_by_id(key_id, user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_api_key_by_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(key_id, user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "key_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if not api_key:\n            raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not api_key",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "api_key",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "HTTPException(status_code=404, detail=\"API key not found\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "HTTPException",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(status_code=404, detail=\"API key not found\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "status_code=404",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "status_code",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "404",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "detail=\"API key not found\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "detail",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"API key not found\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "API key not found",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return api_key",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "api_key",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyError as e:\n        logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "APIKeyError as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Failed to get API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Failed to get API key: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Failed to get API key: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Failed to get API key: {str(e)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Failed to get API key: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Failed to get API key: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{str(e)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "str(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.delete(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def delete_api_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Revoke an API key\"\"\"\n    try:\n        return await revoke_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.delete(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.delete(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.delete",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "delete",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    \"/api-keys/{key_id}\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/api-keys/{key_id}\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/api-keys/{key_id}",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "response_model=list[APIKeyWithoutHash] | dict[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response_model",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "list[APIKeyWithoutHash] | dict[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "list[APIKeyWithoutHash]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "APIKeyWithoutHash",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "dict[str, str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"api-keys\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"api-keys\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"api-keys\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api-keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@feature_flag(\"api-keys-enabled\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "feature_flag(\"api-keys-enabled\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "feature_flag",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"api-keys-enabled\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"api-keys-enabled\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "api-keys-enabled",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def delete_api_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Revoke an API key\"\"\"\n    try:\n        return await revoke_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "delete_api_key",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "key_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "key_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Optional[APIKeyWithoutHash]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Optional[APIKeyWithoutHash]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Optional",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[APIKeyWithoutHash]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "APIKeyWithoutHash",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyWithoutHash",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"Revoke an API key\"\"\"\n    try:\n        return await revoke_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"Revoke an API key\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"Revoke an API key\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Revoke an API key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        return await revoke_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "return await revoke_api_key(key_id, user_id)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return await revoke_api_key(key_id, user_id)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await revoke_api_key(key_id, user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "revoke_api_key(key_id, user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "revoke_api_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(key_id, user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "APIKeyNotFoundError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=404, detail=\"API key not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=404, detail=\"API key not found\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=404",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "404",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=\"API key not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"API key not found\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "API key not found",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "APIKeyPermissionError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=403, detail=\"Permission denied\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=403, detail=\"Permission denied\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=403",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "403",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=\"Permission denied\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"Permission denied\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Permission denied",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyError as e:\n        logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "APIKeyError as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Failed to revoke API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Failed to revoke API key: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Failed to revoke API key: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Failed to revoke API key: {str(e)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Failed to revoke API key: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Failed to revoke API key: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{str(e)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "str(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.post(\n    \"/api-keys/{key_id}/suspend\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def suspend_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Suspend an API key\"\"\"\n    try:\n        return await suspend_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.post(\n    \"/api-keys/{key_id}/suspend\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.post(\n    \"/api-keys/{key_id}/suspend\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    \"/api-keys/{key_id}/suspend\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/api-keys/{key_id}/suspend\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/api-keys/{key_id}/suspend",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "response_model=list[APIKeyWithoutHash] | dict[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response_model",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "list[APIKeyWithoutHash] | dict[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "list[APIKeyWithoutHash]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "APIKeyWithoutHash",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "dict[str, str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"api-keys\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"api-keys\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"api-keys\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api-keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@feature_flag(\"api-keys-enabled\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "feature_flag(\"api-keys-enabled\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "feature_flag",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"api-keys-enabled\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"api-keys-enabled\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "api-keys-enabled",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def suspend_key(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Suspend an API key\"\"\"\n    try:\n        return await suspend_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "suspend_key",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    key_id: str, user_id: Annotated[str, Depends(get_user_id)]\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "key_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "key_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Optional[APIKeyWithoutHash]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Optional[APIKeyWithoutHash]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Optional",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[APIKeyWithoutHash]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "APIKeyWithoutHash",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyWithoutHash",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"Suspend an API key\"\"\"\n    try:\n        return await suspend_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"Suspend an API key\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"Suspend an API key\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Suspend an API key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        return await suspend_api_key(key_id, user_id)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "return await suspend_api_key(key_id, user_id)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return await suspend_api_key(key_id, user_id)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await suspend_api_key(key_id, user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "suspend_api_key(key_id, user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "suspend_api_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(key_id, user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "APIKeyNotFoundError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=404, detail=\"API key not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=404, detail=\"API key not found\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=404",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "404",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=\"API key not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"API key not found\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "API key not found",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "APIKeyPermissionError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=403, detail=\"Permission denied\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=403, detail=\"Permission denied\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=403",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "403",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=\"Permission denied\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"Permission denied\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Permission denied",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyError as e:\n        logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "APIKeyError as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Failed to suspend API key: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Failed to suspend API key: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Failed to suspend API key: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Failed to suspend API key: {str(e)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Failed to suspend API key: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Failed to suspend API key: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{str(e)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "str(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@v1_router.put(\n    \"/api-keys/{key_id}/permissions\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)\n@feature_flag(\"api-keys-enabled\")\nasync def update_permissions(\n    key_id: str,\n    request: UpdatePermissionsRequest,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Update API key permissions\"\"\"\n    try:\n        return await update_api_key_permissions(key_id, user_id, request.permissions)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
            "children": [
                {
                    "type": "decorator",
                    "label": "@v1_router.put(\n    \"/api-keys/{key_id}/permissions\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                    "children": [
                        {
                            "type": "call",
                            "label": "v1_router.put(\n    \"/api-keys/{key_id}/permissions\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "v1_router.put",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "v1_router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "put",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\n    \"/api-keys/{key_id}/permissions\",\n    response_model=list[APIKeyWithoutHash] | dict[str, str],\n    tags=[\"api-keys\"],\n    dependencies=[Depends(auth_middleware)],\n)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/api-keys/{key_id}/permissions\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/api-keys/{key_id}/permissions",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "response_model=list[APIKeyWithoutHash] | dict[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "response_model",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "list[APIKeyWithoutHash] | dict[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "list[APIKeyWithoutHash]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "APIKeyWithoutHash",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "dict[str, str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "tags=[\"api-keys\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tags",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[\"api-keys\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"api-keys\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api-keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "dependencies=[Depends(auth_middleware)]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "dependencies",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[Depends(auth_middleware)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Depends(auth_middleware)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Depends",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(auth_middleware)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "auth_middleware",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "label": "@feature_flag(\"api-keys-enabled\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "feature_flag(\"api-keys-enabled\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "feature_flag",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"api-keys-enabled\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"api-keys-enabled\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "api-keys-enabled",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def update_permissions(\n    key_id: str,\n    request: UpdatePermissionsRequest,\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Optional[APIKeyWithoutHash]:\n    \"\"\"Update API key permissions\"\"\"\n    try:\n        return await update_api_key_permissions(key_id, user_id, request.permissions)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "update_permissions",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    key_id: str,\n    request: UpdatePermissionsRequest,\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "key_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "key_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "request: UpdatePermissionsRequest",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "UpdatePermissionsRequest",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "UpdatePermissionsRequest",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Optional[APIKeyWithoutHash]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "Optional[APIKeyWithoutHash]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Optional",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[APIKeyWithoutHash]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "APIKeyWithoutHash",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyWithoutHash",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"Update API key permissions\"\"\"\n    try:\n        return await update_api_key_permissions(key_id, user_id, request.permissions)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"Update API key permissions\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"Update API key permissions\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Update API key permissions",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        return await update_api_key_permissions(key_id, user_id, request.permissions)\n    except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")\n    except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n    except APIKeyError as e:\n        logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "return await update_api_key_permissions(key_id, user_id, request.permissions)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return await update_api_key_permissions(key_id, user_id, request.permissions)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await update_api_key_permissions(key_id, user_id, request.permissions)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "update_api_key_permissions(key_id, user_id, request.permissions)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "update_api_key_permissions",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(key_id, user_id, request.permissions)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "request.permissions",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "request",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "permissions",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyNotFoundError:\n        raise HTTPException(status_code=404, detail=\"API key not found\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "APIKeyNotFoundError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=404, detail=\"API key not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=404, detail=\"API key not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=404, detail=\"API key not found\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=404",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "404",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=\"API key not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"API key not found\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "API key not found",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyPermissionError:\n        raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "APIKeyPermissionError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=403, detail=\"Permission denied\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=403, detail=\"Permission denied\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=403, detail=\"Permission denied\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=403",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "403",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=\"Permission denied\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"Permission denied\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Permission denied",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except APIKeyError as e:\n        logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "APIKeyError as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Failed to update API key permissions: {str(e)}\")\n        raise HTTPException(status_code=400, detail=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Failed to update API key permissions: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Failed to update API key permissions: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Failed to update API key permissions: {str(e)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Failed to update API key permissions: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Failed to update API key permissions: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{str(e)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "str(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(status_code=400, detail=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(status_code=400, detail=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(status_code=400, detail=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}