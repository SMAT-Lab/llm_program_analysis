{
    "type": "module",
    "label": "import pytest\nfrom ldclient import LDClient\n\nfrom autogpt_libs.feature_flag.client import feature_flag, mock_flag_variation\n\n\n@pytest.fixture\ndef ld_client(mocker):\n    client = mocker.Mock(spec=LDClient)\n    mocker.patch(\"ldclient.get\", return_value=client)\n    client.is_initialized.return_value = True\n    return client\n\n\n@pytest.mark.asyncio\nasync def test_feature_flag_enabled(ld_client):\n    ld_client.variation.return_value = True\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == \"success\"\n    ld_client.variation.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_feature_flag_unauthorized_response(ld_client):\n    ld_client.variation.return_value = False\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == {\"error\": \"disabled\"}\n\n\ndef test_mock_flag_variation(ld_client):\n    with mock_flag_variation(\"test-flag\", True):\n        assert ld_client.variation(\"test-flag\", None, False)\n\n    with mock_flag_variation(\"test-flag\", False):\n        assert ld_client.variation(\"test-flag\", None, False)\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import pytest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pytest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pytest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from ldclient import LDClient",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "ldclient",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ldclient",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "LDClient",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "LDClient",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from autogpt_libs.feature_flag.client import feature_flag, mock_flag_variation",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "autogpt_libs.feature_flag.client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "autogpt_libs",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "feature_flag",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "feature_flag",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "feature_flag",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "mock_flag_variation",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_flag_variation",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.fixture\ndef ld_client(mocker):\n    client = mocker.Mock(spec=LDClient)\n    mocker.patch(\"ldclient.get\", return_value=client)\n    client.is_initialized.return_value = True\n    return client",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.fixture",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pytest.fixture",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "pytest",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "fixture",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def ld_client(mocker):\n    client = mocker.Mock(spec=LDClient)\n    mocker.patch(\"ldclient.get\", return_value=client)\n    client.is_initialized.return_value = True\n    return client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ld_client",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(mocker)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "mocker",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "client = mocker.Mock(spec=LDClient)\n    mocker.patch(\"ldclient.get\", return_value=client)\n    client.is_initialized.return_value = True\n    return client",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "client = mocker.Mock(spec=LDClient)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "client = mocker.Mock(spec=LDClient)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "client",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "mocker.Mock(spec=LDClient)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "mocker.Mock",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "mocker",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Mock",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(spec=LDClient)",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "spec=LDClient",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "spec",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "LDClient",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mocker.patch(\"ldclient.get\", return_value=client)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "mocker.patch(\"ldclient.get\", return_value=client)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mocker.patch",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mocker",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "patch",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"ldclient.get\", return_value=client)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"ldclient.get\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "ldclient.get",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "return_value=client",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "return_value",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "client",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "client.is_initialized.return_value = True",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "client.is_initialized.return_value = True",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "client.is_initialized.return_value",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "client.is_initialized",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "is_initialized",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "return_value",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "true",
                                                    "label": "True",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return client",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "client",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.mark.asyncio\nasync def test_feature_flag_enabled(ld_client):\n    ld_client.variation.return_value = True\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == \"success\"\n    ld_client.variation.assert_called_once()",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.mark.asyncio",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pytest.mark.asyncio",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.mark",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pytest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "mark",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "label": "asyncio",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def test_feature_flag_enabled(ld_client):\n    ld_client.variation.return_value = True\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == \"success\"\n    ld_client.variation.assert_called_once()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "test_feature_flag_enabled",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(ld_client)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ld_client",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "ld_client.variation.return_value = True\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == \"success\"\n    ld_client.variation.assert_called_once()",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "ld_client.variation.return_value = True",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "ld_client.variation.return_value = True",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "ld_client.variation.return_value",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ld_client.variation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ld_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "variation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "return_value",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "true",
                                                    "label": "True",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "decorated_definition",
                                    "label": "@feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"",
                                    "children": [
                                        {
                                            "type": "decorator",
                                            "label": "@feature_flag(\"test-flag\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "feature_flag(\"test-flag\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "feature_flag",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-flag\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-flag\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "label": "async def test_function(user_id: str):\n        return \"success\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_function",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "label": "(user_id: str)",
                                                    "children": [
                                                        {
                                                            "type": "typed_parameter",
                                                            "label": "user_id: str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return \"success\"",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return \"success\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"success\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "success",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "result = test_function(user_id=\"test-user\")",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "result = test_function(user_id=\"test-user\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "test_function(user_id=\"test-user\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "test_function",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id=\"test-user\")",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert result == \"success\"",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "result == \"success\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"success\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "success",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "ld_client.variation.assert_called_once()",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "ld_client.variation.assert_called_once()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "ld_client.variation.assert_called_once",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ld_client.variation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ld_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "variation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "assert_called_once",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.mark.asyncio\nasync def test_feature_flag_unauthorized_response(ld_client):\n    ld_client.variation.return_value = False\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == {\"error\": \"disabled\"}",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.mark.asyncio",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pytest.mark.asyncio",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.mark",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pytest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "mark",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "label": "asyncio",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def test_feature_flag_unauthorized_response(ld_client):\n    ld_client.variation.return_value = False\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == {\"error\": \"disabled\"}",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "test_feature_flag_unauthorized_response",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(ld_client)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ld_client",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "ld_client.variation.return_value = False\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == {\"error\": \"disabled\"}",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "ld_client.variation.return_value = False",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "ld_client.variation.return_value = False",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "ld_client.variation.return_value",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ld_client.variation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ld_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "variation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "return_value",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "false",
                                                    "label": "False",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "decorated_definition",
                                    "label": "@feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"",
                                    "children": [
                                        {
                                            "type": "decorator",
                                            "label": "@feature_flag(\"test-flag\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "feature_flag(\"test-flag\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "feature_flag",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-flag\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-flag\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "label": "async def test_function(user_id: str):\n        return \"success\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_function",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "label": "(user_id: str)",
                                                    "children": [
                                                        {
                                                            "type": "typed_parameter",
                                                            "label": "user_id: str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return \"success\"",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return \"success\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"success\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "success",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "result = test_function(user_id=\"test-user\")",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "result = test_function(user_id=\"test-user\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "test_function(user_id=\"test-user\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "test_function",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id=\"test-user\")",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert result == {\"error\": \"disabled\"}",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "result == {\"error\": \"disabled\"}",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "label": "{\"error\": \"disabled\"}",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "label": "\"error\": \"disabled\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"error\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "error",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"disabled\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "disabled",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def test_mock_flag_variation(ld_client):\n    with mock_flag_variation(\"test-flag\", True):\n        assert ld_client.variation(\"test-flag\", None, False)\n\n    with mock_flag_variation(\"test-flag\", False):\n        assert ld_client.variation(\"test-flag\", None, False)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_mock_flag_variation",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(ld_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ld_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "with mock_flag_variation(\"test-flag\", True):\n        assert ld_client.variation(\"test-flag\", None, False)\n\n    with mock_flag_variation(\"test-flag\", False):\n        assert ld_client.variation(\"test-flag\", None, False)",
                    "children": [
                        {
                            "type": "with_statement",
                            "label": "with mock_flag_variation(\"test-flag\", True):\n        assert ld_client.variation(\"test-flag\", None, False)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "mock_flag_variation(\"test-flag\", True)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "mock_flag_variation(\"test-flag\", True)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "mock_flag_variation(\"test-flag\", True)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_flag_variation",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-flag\", True)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-flag\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "assert ld_client.variation(\"test-flag\", None, False)",
                                    "children": [
                                        {
                                            "type": "assert_statement",
                                            "label": "assert ld_client.variation(\"test-flag\", None, False)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ld_client.variation(\"test-flag\", None, False)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ld_client.variation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ld_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "variation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-flag\", None, False)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-flag\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "label": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with mock_flag_variation(\"test-flag\", False):\n        assert ld_client.variation(\"test-flag\", None, False)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "mock_flag_variation(\"test-flag\", False)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "mock_flag_variation(\"test-flag\", False)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "mock_flag_variation(\"test-flag\", False)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_flag_variation",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-flag\", False)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-flag\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "label": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "assert ld_client.variation(\"test-flag\", None, False)",
                                    "children": [
                                        {
                                            "type": "assert_statement",
                                            "label": "assert ld_client.variation(\"test-flag\", None, False)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ld_client.variation(\"test-flag\", None, False)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ld_client.variation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ld_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "variation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-flag\", None, False)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-flag\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-flag",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "label": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}