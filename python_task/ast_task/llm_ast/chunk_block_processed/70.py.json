{
    "type": "module",
    "start_token": 0,
    "end_token": 715,
    "label": "import logging\nfrom typing import TYPE_CHECKING, Annotated, Literal\n\nfrom fastapi import APIRouter, Body, Depends, HTTPException, Path, Query, Request\nfrom pydantic import BaseModel, Field, SecretStr\n\nfrom backend.data.graph import set_node_webhook\nfrom backend.data.integrations import (\n    WebhookEvent,\n    get_all_webhooks_by_creds,\n    get_webhook,\n    publish_webhook_event,\n    wait_for_webhook_event,\n)\nfrom backend.data.model import (\n    APIKeyCredentials,\n    Credentials,\n    CredentialsType,\n    OAuth2Credentials,\n)\nfrom backend.executor.manager import ExecutionManager\nfrom backend.integrations.creds_manager import IntegrationCredentialsManager\nfrom backend.integrations.oauth import HANDLERS_BY_NAME\nfrom backend.integrations.providers import ProviderName\nfrom backend.integrations.webhooks import WEBHOOK_MANAGERS_BY_NAME\nfrom backend.util.exceptions import NeedConfirmation\nfrom backend.util.service import get_service_client\nfrom backend.util.settings import Settings\n\nif TYPE_CHECKING:\n    from backend.integrations.oauth import BaseOAuthHandler\n\nfrom ..utils import get_user_id\n\nlogger = logging.getLogger(__name__)\nsettings = Settings()\nrouter = APIRouter()\n\ncreds_manager = IntegrationCredentialsManager()\n\n\nclass LoginResponse(BaseModel):\n    login_url: str\n    state_token: str\n\n\n@router.get(\"/{provider}/login\")\ndef login(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n) -> LoginResponse:\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)\n\n\nclass CredentialsMetaResponse(BaseModel):\n    id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None\n\n\n@router.post(\"/{provider}/callback\")\ndef callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )\n\n\n@router.get(\"/credentials\")\ndef list_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials\")\ndef list_credentials_by_provider(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials/{cred_id}\")\ndef get_credential(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Credentials:\n    credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential\n\n\n@router.post(\"/{provider}/credentials\", status_code=201)\ndef create_api_key_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n) -> APIKeyCredentials:\n    new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials\n\n\nclass CredentialsDeletionResponse(BaseModel):\n    deleted: Literal[True] = True\n    revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )\n\n\nclass CredentialsDeletionNeedsConfirmationResponse(BaseModel):\n    deleted: Literal[False] = False\n    need_confirmation: Literal[True] = True\n    message: str\n\n\n@router.delete(\"/{provider}/credentials/{cred_id}\")\nasync def delete_credentials(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n) -> CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse:\n    creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)\n\n\n# ------------------------- WEBHOOK STUFF -------------------------- #\n\n\n# ⚠️ Note\n# No user auth check because this endpoint is for webhook ingress and relies on\n# validation by the provider-specific `WebhooksManager`.\n@router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")\nasync def webhook_ingress_generic(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n):\n    logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"/webhooks/{webhook_id}/ping\")\nasync def webhook_ping(\n    webhook_id: Annotated[str, Path(title=\"",
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "label": "import logging",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 0,
                    "end_token": 0,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "logging",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 3,
            "end_token": 10,
            "label": "from typing import TYPE_CHECKING, Annotated, Literal",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 4,
                    "end_token": 4,
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 4,
                            "end_token": 4,
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 6,
                    "end_token": 6,
                    "label": "TYPE_CHECKING",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "Annotated",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 10,
                    "end_token": 10,
                    "label": "Literal",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 13,
            "end_token": 28,
            "label": "from fastapi import APIRouter, Body, Depends, HTTPException, Path, Query, Request",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 14,
                    "end_token": 14,
                    "label": "fastapi",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 14,
                            "end_token": 14,
                            "label": "fastapi",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 16,
                    "end_token": 16,
                    "label": "APIRouter",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 18,
                    "end_token": 18,
                    "label": "Body",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 20,
                    "end_token": 20,
                    "label": "Depends",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 22,
                    "end_token": 22,
                    "label": "HTTPException",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 24,
                    "end_token": 24,
                    "label": "Path",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 26,
                    "end_token": 26,
                    "label": "Query",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 28,
                    "end_token": 28,
                    "label": "Request",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 30,
            "end_token": 37,
            "label": "from pydantic import BaseModel, Field, SecretStr",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 31,
                    "end_token": 31,
                    "label": "pydantic",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 31,
                            "end_token": 31,
                            "label": "pydantic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 33,
                    "end_token": 33,
                    "label": "BaseModel",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 35,
                    "end_token": 35,
                    "label": "Field",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 37,
                    "end_token": 37,
                    "label": "SecretStr",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 40,
            "end_token": 47,
            "label": "from backend.data.graph import set_node_webhook",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 41,
                    "end_token": 45,
                    "label": "backend.data.graph",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 41,
                            "end_token": 41,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 43,
                            "end_token": 43,
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 45,
                            "end_token": 45,
                            "label": "graph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 47,
                    "end_token": 47,
                    "label": "set_node_webhook",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 49,
            "end_token": 73,
            "label": "from backend.data.integrations import (\n    WebhookEvent,\n    get_all_webhooks_by_creds,\n    get_webhook,\n    publish_webhook_event,\n    wait_for_webhook_event,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 50,
                    "end_token": 54,
                    "label": "backend.data.integrations",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 50,
                            "end_token": 50,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 52,
                            "end_token": 52,
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 54,
                            "end_token": 54,
                            "label": "integrations",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 56,
                    "end_token": 72,
                    "label": "(\n    WebhookEvent,\n    get_all_webhooks_by_creds,\n    get_webhook,\n    publish_webhook_event,\n    wait_for_webhook_event,\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 58,
                            "end_token": 58,
                            "label": "WebhookEvent",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 61,
                            "end_token": 61,
                            "label": "get_all_webhooks_by_creds",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 64,
                            "end_token": 64,
                            "label": "get_webhook",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 67,
                            "end_token": 67,
                            "label": "publish_webhook_event",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 70,
                            "end_token": 70,
                            "label": "wait_for_webhook_event",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 75,
            "end_token": 96,
            "label": "from backend.data.model import (\n    APIKeyCredentials,\n    Credentials,\n    CredentialsType,\n    OAuth2Credentials,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 76,
                    "end_token": 80,
                    "label": "backend.data.model",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 76,
                            "end_token": 76,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 78,
                            "end_token": 78,
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 80,
                            "end_token": 80,
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 82,
                    "end_token": 95,
                    "label": "(\n    APIKeyCredentials,\n    Credentials,\n    CredentialsType,\n    OAuth2Credentials,\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 84,
                            "end_token": 84,
                            "label": "APIKeyCredentials",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 87,
                            "end_token": 87,
                            "label": "Credentials",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 90,
                            "end_token": 90,
                            "label": "CredentialsType",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 93,
                            "end_token": 93,
                            "label": "OAuth2Credentials",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 98,
            "end_token": 105,
            "label": "from backend.executor.manager import ExecutionManager",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 99,
                    "end_token": 103,
                    "label": "backend.executor.manager",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 99,
                            "end_token": 99,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 101,
                            "end_token": 101,
                            "label": "executor",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 103,
                            "end_token": 103,
                            "label": "manager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 105,
                    "end_token": 105,
                    "label": "ExecutionManager",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 107,
            "end_token": 114,
            "label": "from backend.integrations.creds_manager import IntegrationCredentialsManager",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 108,
                    "end_token": 112,
                    "label": "backend.integrations.creds_manager",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 108,
                            "end_token": 108,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 110,
                            "end_token": 110,
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 112,
                            "end_token": 112,
                            "label": "creds_manager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 114,
                    "end_token": 114,
                    "label": "IntegrationCredentialsManager",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 116,
            "end_token": 123,
            "label": "from backend.integrations.oauth import HANDLERS_BY_NAME",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 117,
                    "end_token": 121,
                    "label": "backend.integrations.oauth",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 117,
                            "end_token": 117,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 119,
                            "end_token": 119,
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 121,
                            "end_token": 121,
                            "label": "oauth",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 123,
                    "end_token": 123,
                    "label": "HANDLERS_BY_NAME",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 125,
            "end_token": 132,
            "label": "from backend.integrations.providers import ProviderName",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 126,
                    "end_token": 130,
                    "label": "backend.integrations.providers",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 126,
                            "end_token": 126,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 128,
                            "end_token": 128,
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 130,
                            "end_token": 130,
                            "label": "providers",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 132,
                    "end_token": 132,
                    "label": "ProviderName",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 134,
            "end_token": 141,
            "label": "from backend.integrations.webhooks import WEBHOOK_MANAGERS_BY_NAME",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 135,
                    "end_token": 139,
                    "label": "backend.integrations.webhooks",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 135,
                            "end_token": 135,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 137,
                            "end_token": 137,
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 139,
                            "end_token": 139,
                            "label": "webhooks",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 141,
                    "end_token": 141,
                    "label": "WEBHOOK_MANAGERS_BY_NAME",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 143,
            "end_token": 150,
            "label": "from backend.util.exceptions import NeedConfirmation",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 144,
                    "end_token": 148,
                    "label": "backend.util.exceptions",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 144,
                            "end_token": 144,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 146,
                            "end_token": 146,
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 148,
                            "end_token": 148,
                            "label": "exceptions",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 150,
                    "end_token": 150,
                    "label": "NeedConfirmation",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 152,
            "end_token": 159,
            "label": "from backend.util.service import get_service_client",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 153,
                    "end_token": 157,
                    "label": "backend.util.service",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 153,
                            "end_token": 153,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 155,
                            "end_token": 155,
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 157,
                            "end_token": 157,
                            "label": "service",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 159,
                    "end_token": 159,
                    "label": "get_service_client",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 161,
            "end_token": 168,
            "label": "from backend.util.settings import Settings",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 162,
                    "end_token": 166,
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 162,
                            "end_token": 162,
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 164,
                            "end_token": 164,
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 166,
                            "end_token": 166,
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 168,
                    "end_token": 168,
                    "label": "Settings",
                    "children": []
                }
            ]
        },
        {
            "type": "if_statement",
            "start_token": 170,
            "end_token": 182,
            "label": "\nif TYPE_CHECKING:\n    from backend.integrations.oauth import BaseOAuthHandler",
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 170,
                    "end_token": 173,
                    "label": "\nif TYPE_CHECKING:",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 171,
                            "end_token": 171,
                            "label": "if",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 175,
                    "end_token": 182,
                    "label": "from backend.integrations.oauth import BaseOAuthHandler",
                    "children": [
                        {
                            "type": "import_from_statement",
                            "start_token": 175,
                            "end_token": 182,
                            "label": "from backend.integrations.oauth import BaseOAuthHandler",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "start_token": 176,
                                    "end_token": 180,
                                    "label": "backend.integrations.oauth",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 176,
                                            "end_token": 176,
                                            "label": "backend",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 178,
                                            "end_token": 178,
                                            "label": "integrations",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 180,
                                            "end_token": 180,
                                            "label": "oauth",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 182,
                                    "end_token": 182,
                                    "label": "BaseOAuthHandler",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 185,
            "end_token": 190,
            "label": "from ..utils import get_user_id",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 187,
                    "end_token": 188,
                    "label": ".utils",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 187,
                            "end_token": 187,
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 188,
                            "end_token": 188,
                            "label": "utils",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 190,
                    "end_token": 190,
                    "label": "get_user_id",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 193,
            "end_token": 200,
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 193,
                    "end_token": 193,
                    "label": "logger",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 195,
                    "end_token": 200,
                    "label": "logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 195,
                            "end_token": 197,
                            "label": "logging.getLogger",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 195,
                                    "end_token": 195,
                                    "label": "logging",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 197,
                                    "end_token": 197,
                                    "label": "getLogger",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "start_token": 198,
                            "end_token": 199,
                            "label": "(__name__",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 199,
                                    "end_token": 199,
                                    "label": "__name__",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 202,
            "end_token": 206,
            "label": "settings = Settings()",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 202,
                    "end_token": 202,
                    "label": "settings",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 204,
                    "end_token": 206,
                    "label": "Settings()",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 204,
                            "end_token": 204,
                            "label": "Settings",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 205,
                            "end_token": 206,
                            "label": "()",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 208,
            "end_token": 212,
            "label": "router = APIRouter()",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 208,
                    "end_token": 208,
                    "label": "router",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 210,
                    "end_token": 212,
                    "label": "APIRouter()",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 210,
                            "end_token": 210,
                            "label": "APIRouter",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 211,
                            "end_token": 212,
                            "label": "()",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 215,
            "end_token": 219,
            "label": "creds_manager = IntegrationCredentialsManager()",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 215,
                    "end_token": 215,
                    "label": "creds_manager",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 217,
                    "end_token": 219,
                    "label": "IntegrationCredentialsManager()",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 217,
                            "end_token": 217,
                            "label": "IntegrationCredentialsManager",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 218,
                            "end_token": 219,
                            "label": "()",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 223,
            "end_token": 237,
            "label": "class LoginResponse(BaseModel):\n    login_url: str\n    state_token: str\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 224,
                    "end_token": 224,
                    "label": "LoginResponse",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 225,
                    "end_token": 227,
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 226,
                            "end_token": 226,
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 229,
                    "end_token": 237,
                    "label": "\n    login_url: str\n    state_token: str\n",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 230,
                            "end_token": 232,
                            "label": "login_url: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 230,
                                    "end_token": 230,
                                    "label": "login_url",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 231,
                                    "end_token": 232,
                                    "label": ": str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 232,
                                            "end_token": 232,
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 234,
                            "end_token": 236,
                            "label": "state_token: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 234,
                                    "end_token": 234,
                                    "label": "state_token",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 235,
                                    "end_token": 236,
                                    "label": ": str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 236,
                                            "end_token": 236,
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "LoginResponse",
            "start_line": 42,
            "end_line": 44
        },
        {
            "type": "decorated_definition",
            "start_token": 240,
            "end_token": 715,
            "label": "@router.get(\"/{provider}/login\")\ndef login(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n) -> LoginResponse:\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)\n\n\nclass CredentialsMetaResponse(BaseModel):\n    id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None\n\n\n@router.post(\"/{provider}/callback\")\ndef callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )\n\n\n@router.get(\"/credentials\")\ndef list_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials\")\ndef list_credentials_by_provider(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials/{cred_id}\")\ndef get_credential(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Credentials:\n    credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential\n\n\n@router.post(\"/{provider}/credentials\", status_code=201)\ndef create_api_key_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n) -> APIKeyCredentials:\n    new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials\n\n\nclass CredentialsDeletionResponse(BaseModel):\n    deleted: Literal[True] = True\n    revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )\n\n\nclass CredentialsDeletionNeedsConfirmationResponse(BaseModel):\n    deleted: Literal[False] = False\n    need_confirmation: Literal[True] = True\n    message: str\n\n\n@router.delete(\"/{provider}/credentials/{cred_id}\")\nasync def delete_credentials(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n) -> CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse:\n    creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)\n\n\n# ------------------------- WEBHOOK STUFF -------------------------- #\n\n\n# ⚠️ Note\n# No user auth check because this endpoint is for webhook ingress and relies on\n# validation by the provider-specific `WebhooksManager`.\n@router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")\nasync def webhook_ingress_generic(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n):\n    logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"/webhooks/{webhook_id}/ping\")\nasync def webhook_ping(\n    webhook_id: Annotated[str, Path(title=\"",
            "children": [
                {
                    "type": "decorator",
                    "start_token": 240,
                    "end_token": 246,
                    "label": "@router.get(\"/{provider}/login\")",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 241,
                            "end_token": 243,
                            "label": "router.get",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 241,
                                    "end_token": 241,
                                    "label": "router",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 243,
                                    "end_token": 243,
                                    "label": "get",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "start_token": 244,
                            "end_token": 245,
                            "label": "(\"/{provider}/login\"",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 245,
                                    "end_token": 245,
                                    "label": "\"/{provider}/login\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorator",
                    "start_token": 437,
                    "end_token": 443,
                    "label": "@router.post(\"/{provider}/callback\")",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 438,
                            "end_token": 440,
                            "label": "router.post",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 438,
                                    "end_token": 438,
                                    "label": "router",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 440,
                                    "end_token": 440,
                                    "label": "post",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "start_token": 441,
                            "end_token": 443,
                            "label": "(\"/{provider}/callback\")",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 442,
                                    "end_token": 442,
                                    "label": "\"/{provider}/callback\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 248,
            "end_token": 392,
            "label": "def login(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n) -> LoginResponse:\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 249,
                    "end_token": 249,
                    "label": "login",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 250,
                    "end_token": 306,
                    "label": "(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 252,
                            "end_token": 266,
                            "label": "provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 252,
                                    "end_token": 252,
                                    "label": "provider",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 254,
                                    "end_token": 266,
                                    "label": "Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "start_token": 257,
                                            "end_token": 257,
                                            "label": "ProviderName",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 259,
                                            "end_token": 264,
                                            "label": "Path(title=\"The provider to initiate an OAuth flow for\")",
                                            "children": [
                                                {
                                                    "type": "keyword_argument",
                                                    "start_token": 261,
                                                    "end_token": 263,
                                                    "label": "title=\"The provider to initiate an OAuth flow for\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 263,
                                                            "end_token": 263,
                                                            "label": "\"The provider to initiate an OAuth flow for\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 269,
                            "end_token": 279,
                            "label": "user_id: Annotated[str, Depends(get_user_id)]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 269,
                                    "end_token": 269,
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 271,
                                    "end_token": 279,
                                    "label": "Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "start_token": 273,
                                            "end_token": 273,
                                            "label": "str",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 275,
                                            "end_token": 278,
                                            "label": "Depends(get_user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 277,
                                                    "end_token": 277,
                                                    "label": "get_user_id",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 282,
                            "end_token": 284,
                            "label": "request: Request",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 282,
                                    "end_token": 282,
                                    "label": "request",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 284,
                                    "end_token": 284,
                                    "label": "Request",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "start_token": 287,
                            "end_token": 303,
                            "label": "scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 287,
                                    "end_token": 287,
                                    "label": "scopes",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 289,
                                    "end_token": 301,
                                    "label": "Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "start_token": 292,
                                            "end_token": 292,
                                            "label": "str",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 294,
                                            "end_token": 299,
                                            "label": "Query(title=\"Comma-separated list of authorization scopes\")",
                                            "children": [
                                                {
                                                    "type": "keyword_argument",
                                                    "start_token": 296,
                                                    "end_token": 298,
                                                    "label": "title=\"Comma-separated list of authorization scopes\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 298,
                                                            "end_token": 298,
                                                            "label": "\"Comma-separated list of authorization scopes\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "start_token": 303,
                                    "end_token": 303,
                                    "label": "\"\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 310,
                    "end_token": 391,
                    "label": ":\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 312,
                            "end_token": 319,
                            "label": "handler = _get_provider_oauth_handler(request, provider)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 312,
                                    "end_token": 312,
                                    "label": "handler",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 314,
                                    "end_token": 319,
                                    "label": "_get_provider_oauth_handler(request, provider)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 314,
                                            "end_token": 314,
                                            "label": "_get_provider_oauth_handler",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 315,
                                            "end_token": 319,
                                            "label": "(request, provider)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 316,
                                                    "end_token": 316,
                                                    "label": "request",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 318,
                                                    "end_token": 318,
                                                    "label": "provider",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 322,
                            "end_token": 333,
                            "label": "requested_scopes = scopes.split(\",\") if scopes else [",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 322,
                                    "end_token": 322,
                                    "label": "requested_scopes",
                                    "children": []
                                },
                                {
                                    "type": "conditional_expression",
                                    "start_token": 324,
                                    "end_token": 333,
                                    "label": "scopes.split(\",\") if scopes else [",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 325,
                                            "end_token": 329,
                                            "label": ".split(\",\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 325,
                                                    "end_token": 326,
                                                    "label": ".split",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 328,
                                                    "end_token": 328,
                                                    "label": "\",\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_clause",
                                            "start_token": 330,
                                            "end_token": 331,
                                            "label": "if scopes",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 331,
                                                    "end_token": 331,
                                                    "label": "scopes",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "else_clause",
                                            "start_token": 332,
                                            "end_token": 333,
                                            "label": "else [",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "start_token": 333,
                                                    "end_token": 333,
                                                    "label": "[",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 337,
                            "end_token": 349,
                            "label": "# Generate and store a secure random state token along with the scopes",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 351,
                            "end_token": 366,
                            "label": "state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 351,
                                    "end_token": 351,
                                    "label": "state_token",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 353,
                                    "end_token": 366,
                                    "label": "creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 353,
                                            "end_token": 357,
                                            "label": "creds_manager.store.store_state_token",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 353,
                                                    "end_token": 355,
                                                    "label": "creds_manager.store",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 353,
                                                            "end_token": 353,
                                                            "label": "creds_manager",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 355,
                                                            "end_token": 355,
                                                            "label": "store",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 357,
                                                    "end_token": 357,
                                                    "label": "store_state_token",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 358,
                                            "end_token": 365,
                                            "label": "(\n        user_id, provider, requested_scopes\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 360,
                                                    "end_token": 360,
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 362,
                                                    "end_token": 362,
                                                    "label": "provider",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 364,
                                                    "end_token": 364,
                                                    "label": "requested_scopes",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 369,
                            "end_token": 378,
                            "label": "login_url = handler.get_login_url(requested_scopes, state_token)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 369,
                                    "end_token": 369,
                                    "label": "login_url",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 371,
                                    "end_token": 378,
                                    "label": "handler.get_login_url(requested_scopes, state_token)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 371,
                                            "end_token": 373,
                                            "label": "handler.get_login_url",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 371,
                                                    "end_token": 371,
                                                    "label": "handler",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 373,
                                                    "end_token": 373,
                                                    "label": "get_login_url",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 374,
                                            "end_token": 377,
                                            "label": "(requested_scopes, state_token",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 375,
                                                    "end_token": 375,
                                                    "label": "requested_scopes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 377,
                                                    "end_token": 377,
                                                    "label": "state_token",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 381,
                            "end_token": 391,
                            "label": "return LoginResponse(login_url=login_url, state_token=state_token)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 382,
                                    "end_token": 390,
                                    "label": "LoginResponse(login_url=login_url, state_token=state_token",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 382,
                                            "end_token": 382,
                                            "label": "LoginResponse",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 383,
                                            "end_token": 390,
                                            "label": "(login_url=login_url, state_token=state_token",
                                            "children": [
                                                {
                                                    "type": "keyword_argument",
                                                    "start_token": 384,
                                                    "end_token": 387,
                                                    "label": "login_url=login_url,",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 384,
                                                            "end_token": 384,
                                                            "label": "login_url",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 386,
                                                            "end_token": 386,
                                                            "label": "login_url",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "start_token": 388,
                                                    "end_token": 390,
                                                    "label": "state_token=state_token",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 388,
                                                            "end_token": 388,
                                                            "label": "state_token",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 390,
                                                            "end_token": 390,
                                                            "label": "state_token",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "login",
            "start_line": 48,
            "end_line": 69
        },
        {
            "type": "class_definition",
            "start_token": 395,
            "end_token": 434,
            "label": "class CredentialsMetaResponse(BaseModel):\n    id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 396,
                    "end_token": 396,
                    "label": "CredentialsMetaResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "start_token": 397,
                    "end_token": 399,
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 398,
                            "end_token": 398,
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 401,
                    "end_token": 434,
                    "label": "\n    id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None\n",
                    "children": [
                        {
                            "type": "typed_default_parameter",
                            "start_token": 402,
                            "end_token": 404,
                            "label": "id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 402,
                                    "end_token": 402,
                                    "label": "id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 404,
                                    "end_token": 404,
                                    "label": "str",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "start_token": 406,
                            "end_token": 408,
                            "label": "provider: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 406,
                                    "end_token": 406,
                                    "label": "provider",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 408,
                                    "end_token": 408,
                                    "label": "str",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "start_token": 410,
                            "end_token": 412,
                            "label": "type: CredentialsType",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 410,
                                    "end_token": 410,
                                    "label": "type",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 412,
                                    "end_token": 412,
                                    "label": "CredentialsType",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "start_token": 414,
                            "end_token": 418,
                            "label": "title: str | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 414,
                                    "end_token": 414,
                                    "label": "title",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 416,
                                    "end_token": 416,
                                    "label": "str",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "start_token": 418,
                                    "end_token": 418,
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "start_token": 420,
                            "end_token": 427,
                            "label": "scopes: list[str] | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 420,
                                    "end_token": 420,
                                    "label": "scopes",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 422,
                                    "end_token": 425,
                                    "label": "list[str]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 422,
                                            "end_token": 422,
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 424,
                                            "end_token": 424,
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "start_token": 427,
                                    "end_token": 427,
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "start_token": 429,
                            "end_token": 433,
                            "label": "username: str | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 429,
                                    "end_token": 429,
                                    "label": "username",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 431,
                                    "end_token": 431,
                                    "label": "str",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "start_token": 433,
                                    "end_token": 433,
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "CredentialsMetaResponse",
            "start_line": 72,
            "end_line": 78
        },
        {
            "type": "function_placeholder",
            "name": "callback",
            "start_line": 82,
            "end_line": 138,
            "start_token": 445,
            "end_token": 676,
            "label": "def callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )\n\n\n@router.get(\"/credentials\")\ndef list_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials\")\ndef list_credentials_by_provider(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials/{cred_id}\")\ndef get_credential(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Credentials:\n    credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential\n\n\n@router.post(\"/{provider}/credentials\", status_code=201)\ndef create_api_key_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n) -> APIKeyCredentials:\n    new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials\n\n\nclass CredentialsDeletionResponse(BaseModel):\n    deleted: Literal[True] = True\n    revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )\n\n\nclass CredentialsDeletionNeedsConfirmationResponse(BaseModel):\n    deleted: Literal[False] = False\n    need_confirmation: Literal[True] = True\n    message: str\n\n\n@router.delete(\"/{provider}/credentials/{cred_id}\")\nasync def delete_credentials(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n) -> CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse:\n    creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)\n\n\n# ------------------------- WEBHOOK STUFF -------------------------- #\n\n\n# ⚠️ Note\n# No user auth check because this endpoint is for webhook ingress and relies on\n# validation by the provider-specific `WebhooksManager`.\n@router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")\nasync def webhook_ingress_generic(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n):\n    logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn'",
            "children": [
                {
                    "type": "module",
                    "start_token": 445,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "class_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 445,
                            "end_token": 673,
                            "label": "def callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": 447,
                                    "end_token": 514,
                                    "label": "(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n)",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 449,
                                            "end_token": 463,
                                            "label": "provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ]",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 466,
                                            "end_token": 478,
                                            "label": "code: Annotated[str, Body(title=\"Authorization code acquired by user login\")]",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 481,
                                            "end_token": 493,
                                            "label": "state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")]",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 496,
                                            "end_token": 506,
                                            "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 509,
                                            "end_token": 511,
                                            "label": "request: Request",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 518,
                                    "end_token": 673,
                                    "label": ":\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "start_token": 520,
                                            "end_token": 526,
                                            "label": "logger.debug(f\"Received OAuth callback for provider: {provider}\")",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 528,
                                            "end_token": 535,
                                            "label": "handler = _get_provider_oauth_handler(request, provider)",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 544,
                                            "end_token": 578,
                                            "label": "if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 558,
                                                    "end_token": 578,
                                                    "label": ":\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 560,
                                                            "end_token": 566,
                                                            "label": "logger.warning(f\"Invalid or expired state token for user {user_id}\")",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 568,
                                                            "end_token": 578,
                                                            "label": "raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "try_statement",
                                            "start_token": 581,
                                            "end_token": 638,
                                            "label": "try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 582,
                                                    "end_token": 617,
                                                    "label": ":\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 584,
                                                            "end_token": 616,
                                                            "label": "scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "start_token": 620,
                                                    "end_token": 638,
                                                    "label": "credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "start_token": 621,
                                                            "end_token": 638,
                                                            "label": "= handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "start_token": 623,
                                                                    "end_token": 637,
                                                                    "label": ".exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 640,
                                            "end_token": 651,
                                            "label": "# Check if the granted scopes are sufficient for the requested scopes",
                                            "children": []
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 653,
                                            "end_token": 673,
                                            "label": "if not set(scopes).issubset(set(credentials.scopes)):\n            # For now",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 675,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "identifier",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "list_credentials",
            "start_line": 142,
            "end_line": 156
        },
        {
            "type": "function_placeholder",
            "name": "list_credentials_by_provider",
            "start_line": 160,
            "end_line": 177,
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "module",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "call",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "identifier",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "get_credential",
            "start_line": 181,
            "end_line": 195
        },
        {
            "type": "function_definition",
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "keyword_separator",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "parameter",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "parameter",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "if_clause",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "dotted_name",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "block",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "augmented_assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "dotted_name",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "create_api_key_credentials",
            "start_line": 199,
            "end_line": 223
        },
        {
            "type": "function_placeholder",
            "name": "delete_credentials",
            "start_line": 242,
            "end_line": 273,
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "module",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "if_clause",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "if_keyword",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "parenthesized_expression",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "colon",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "elif_clause",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "elif_keyword",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "colon",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "else_clause",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "else_keyword",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "colon",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "webhook_ingress_generic",
            "start_line": 283,
            "end_line": 323,
            "start_token": 677,
            "end_token": 706,
            "label": "t trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"",
            "children": [
                {
                    "type": "module",
                    "start_token": 677,
                    "end_token": 706,
                    "label": "t trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"",
                    "children": [
                        {
                            "type": "block",
                            "start_token": 677,
                            "end_token": 684,
                            "label": "t trigger on event {event_type}\")\n            continue\n        logger.debug(f\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 677,
                                    "end_token": 677,
                                    "label": "t",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 678,
                                    "end_token": 684,
                                    "label": "trigger on event {event_type}\")\n            continue\n        logger.debug(f\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 678,
                                            "end_token": 678,
                                            "label": "trigger",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 679,
                                            "end_token": 684,
                                            "label": "on event {event_type}\")\n            continue\n        logger.debug(f\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 679,
                                                    "end_token": 684,
                                                    "label": "on event {event_type}\")\n            continue\n        logger.debug(f\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 685,
                            "end_token": 699,
                            "label": "Executing graph #{node.graph_id} node #{node.id}",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 685,
                                    "end_token": 699,
                                    "label": "Executing graph #{node.graph_id} node #{node.id}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 685,
                                            "end_token": 685,
                                            "label": "Executing",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 686,
                                            "end_token": 699,
                                            "label": "graph #{node.graph_id} node #{node.id}",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 686,
                                                    "end_token": 687,
                                                    "label": "graph #",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 686,
                                                            "end_token": 686,
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "start_token": 687,
                                                            "end_token": 687,
                                                            "label": "#",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 688,
                                                    "end_token": 699,
                                                    "label": "{node.graph_id} node #{node.id}",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 688,
                                                            "end_token": 692,
                                                            "label": "{node.graph_id}",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 688,
                                                                    "end_token": 688,
                                                                    "label": "{",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 689,
                                                                    "end_token": 692,
                                                                    "label": "node.graph_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 689,
                                                                            "end_token": 689,
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 690,
                                                                            "end_token": 690,
                                                                            "label": ".",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 693,
                                                            "end_token": 699,
                                                            "label": "node #{node.id}",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 693,
                                                                    "end_token": 693,
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 694,
                                                                    "end_token": 699,
                                                                    "label": "#{node.id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 694,
                                                                            "end_token": 694,
                                                                            "label": "#",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 695,
                                                                            "end_token": 695,
                                                                            "label": "{",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 700,
                            "end_token": 706,
                            "label": "\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 700,
                                    "end_token": 706,
                                    "label": "\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 700,
                                            "end_token": 700,
                                            "label": "\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 701,
                                            "end_token": 705,
                                            "label": "webhook_{webhook_id}_payload",
                                            "children": [
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 701,
                                                    "end_token": 703,
                                                    "label": "webhook_{webhook_id",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 701,
                                                            "end_token": 703,
                                                            "label": "webhook_{webhook_id",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 701,
                                                                    "end_token": 701,
                                                                    "label": "webhook_",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 702,
                                                                    "end_token": 702,
                                                                    "label": "{",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "start_token": 704,
                                                    "end_token": 705,
                                                    "label": "}_payload",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 704,
                                                            "end_token": 704,
                                                            "label": "}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 705,
                                                            "end_token": 705,
                                                            "label": "_payload",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "CredentialsDeletionResponse",
            "start_line": 226,
            "end_line": 232,
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "module",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "function_definition",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 677,
            "end_token": 676,
            "label": "",
            "children": [
                {
                    "type": "identifier",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "comparison_operator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "boolean_operator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "true",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "else_clause",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "false",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "CredentialsDeletionNeedsConfirmationResponse",
            "start_line": 235,
            "end_line": 238
        },
        {
            "type": "function_placeholder",
            "name": "webhook_ping",
            "start_line": 327,
            "end_line": 347,
            "start_token": 716,
            "end_token": 728,
            "label": "Our ID for the webhook\")],\n    user_id: Annotated[str, Depends(get_user_id)],  # require auth\n):\n    webhook = await get_webhook(webhook_id)\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()\n\n    credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )\n    try:\n        await webhook_manager.trigger_ping(webhook, credentials)\n    except NotImplementedError:\n        return False\n\n    if not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10):\n        raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")\n\n    return True\n\n\n# --------------------------- UTILITIES ---------------------------- #\n\n\nasync def remove_all_webhooks_for_credentials(\n    credentials: Credentials, force: bool = False\n) -> None:\n    \"",
            "children": [
                {
                    "type": "module",
                    "start_token": 716,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "block",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "none",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "block",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "false",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "unary_operator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "true",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "parameters",
                            "start_token": 726,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "parameter",
                                    "start_token": 726,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 726,
                                            "end_token": 726,
                                            "label": "timed",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 728,
                                            "end_token": 728,
                                            "label": "\")\n\n    return True\n\n\n# --------------------------- UTILITIES ---------------------------- #\n\n\nasync def remove_all_webhooks_for_credentials(\n    credentials: Credentials, force: bool = False\n) -> None:\n    \"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 728,
                                                    "end_token": 728,
                                                    "label": "\")\n\n    return True\n\n\n# --------------------------- UTILITIES ---------------------------- #\n\n\nasync def remove_all_webhooks_for_credentials(\n    credentials: Credentials, force: bool = False\n) -> None:\n    \"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "remove_all_webhooks_for_credentials",
            "start_line": 353,
            "end_line": 390,
            "start_token": 729,
            "end_token": 868,
            "label": "\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
            "children": [
                {
                    "type": "module",
                    "start_token": 729,
                    "end_token": 868,
                    "label": "\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                    "children": [
                        {
                            "type": "string",
                            "start_token": 731,
                            "end_token": 800,
                            "label": "Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`",
                            "children": [
                                {
                                    "type": "string_content",
                                    "start_token": 731,
                                    "end_token": 743,
                                    "label": "Remove and deregister all webhooks that were registered using the given credentials.",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 746,
                                    "end_token": 748,
                                    "label": "Params:\n",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 749,
                                    "end_token": 760,
                                    "label": "credentials: The credentials for which to remove the associated webhooks.",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 762,
                                    "end_token": 776,
                                    "label": "force: Whether to proceed if any of the webhooks are still in use.",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 779,
                                    "end_token": 781,
                                    "label": "Raises:\n",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 782,
                                    "end_token": 800,
                                    "label": "NeedConfirmation: If any of the webhooks are still in use and `force` is `False`",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "start_token": 802,
                            "end_token": 867,
                            "label": "\"\"\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 803,
                                    "end_token": 803,
                                    "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 803,
                                            "end_token": 803,
                                            "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "start_token": 803,
                                            "end_token": 803,
                                            "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 803,
                                                    "end_token": 803,
                                                    "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 803,
                                                            "end_token": 803,
                                                            "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 803,
                                                            "end_token": 803,
                                                            "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 803,
                                                                    "end_token": 803,
                                                                    "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 803,
                                                                            "end_token": 803,
                                                                            "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 803,
                                                                            "end_token": 803,
                                                                            "label": "\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 804,
                                    "end_token": 828,
                                    "label": "Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 804,
                                            "end_token": 804,
                                            "label": "Credentials",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 804,
                                                    "end_token": 804,
                                                    "label": "Credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 804,
                                                            "end_token": 804,
                                                            "label": "Credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 804,
                                                            "end_token": 804,
                                                            "label": "Credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 804,
                                                    "end_token": 804,
                                                    "label": "Credentials",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 804,
                                            "end_token": 828,
                                            "label": "Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks",
                                            "children": [
                                                {
                                                    "type": "if_statement",
                                                    "start_token": 804,
                                                    "end_token": 828,
                                                    "label": "Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 804,
                                                            "end_token": 804,
                                                            "label": "Credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": 804,
                                                            "end_token": 818,
                                                            "label": "Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 805,
                                                                    "end_token": 809,
                                                                    "label": "#{credentials.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 805,
                                                                            "end_token": 805,
                                                                            "label": "#",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 806,
                                                                            "end_token": 818,
                                                                            "label": "{credentials.id} for provider {credentials.provider} \"\n                f\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "start_token": 806,
                                                                                    "end_token": 809,
                                                                                    "label": "{credentials.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_list",
                                                                                            "start_token": 807,
                                                                                            "end_token": 809,
                                                                                            "label": "credentials.id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "start_token": 810,
                                                                                    "end_token": 818,
                                                                                    "label": "} for provider {credentials.provider} \"\n                f\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_list",
                                                                                            "start_token": 813,
                                                                                            "end_token": 818,
                                                                                            "label": "{credentials.provider} \"\n                f\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 820,
                                    "end_token": 820,
                                    "label": "attached",
                                    "children": []
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 822,
                                    "end_token": 857,
                                    "label": "{len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"",
                                    "children": [
                                        {
                                            "type": "boolean_operator",
                                            "start_token": 822,
                                            "end_token": 822,
                                            "label": "{",
                                            "children": [
                                                {
                                                    "type": "any",
                                                    "start_token": 822,
                                                    "end_token": 822,
                                                    "label": "{",
                                                    "children": []
                                                },
                                                {
                                                    "type": "not",
                                                    "start_token": 826,
                                                    "end_token": 828,
                                                    "label": ")} webhooks",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 823,
                                            "end_token": 857,
                                            "label": "len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 835,
                                                    "end_token": 857,
                                                    "label": "available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 836,
                                                            "end_token": 836,
                                                            "label": "WebhooksHandler",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 840,
                                                            "end_token": 856,
                                                            "label": ".provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 844,
                                                                    "end_token": 856,
                                                                    "label": "Some webhooks linked to these credentials are still in use by an agent",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 844,
                                                                            "end_token": 856,
                                                                            "label": "Some webhooks linked to these credentials are still in use by an agent",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "for_statement",
                                    "start_token": 858,
                                    "end_token": 868,
                                    "label": "Webhook #{webhook.id} failed to prune\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 858,
                                            "end_token": 858,
                                            "label": "Webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 858,
                                            "end_token": 858,
                                            "label": "Webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 859,
                                            "end_token": 867,
                                            "label": "#{webhook.id} failed to prune",
                                            "children": [
                                                {
                                                    "type": "for_statement",
                                                    "start_token": 860,
                                                    "end_token": 863,
                                                    "label": "{webhook.id",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 860,
                                                            "end_token": 860,
                                                            "label": "{",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 860,
                                                            "end_token": 860,
                                                            "label": "{",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": 861,
                                                            "end_token": 861,
                                                            "label": "webhook",
                                                            "children": [
                                                                {
                                                                    "type": "await",
                                                                    "start_token": 861,
                                                                    "end_token": 861,
                                                                    "label": "webhook",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 861,
                                                                            "end_token": 861,
                                                                            "label": "webhook",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 861,
                                                                                    "end_token": 861,
                                                                                    "label": "webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 861,
                                                                                    "end_token": 861,
                                                                                    "label": "webhook",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "start_token": 861,
                                                                                            "end_token": 861,
                                                                                            "label": "webhook",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 861,
                                                                                                    "end_token": 861,
                                                                                                    "label": "webhook",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 861,
                                                                                                    "end_token": 861,
                                                                                                    "label": "webhook",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assignment",
                                                    "start_token": 864,
                                                    "end_token": 867,
                                                    "label": "} failed to prune",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 864,
                                                            "end_token": 864,
                                                            "label": "}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 864,
                                                                    "end_token": 864,
                                                                    "label": "}",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 864,
                                                                    "end_token": 864,
                                                                    "label": "}",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 864,
                                                            "end_token": 864,
                                                            "label": "}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 864,
                                                                    "end_token": 864,
                                                                    "label": "}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 864,
                                                                            "end_token": 864,
                                                                            "label": "}",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 864,
                                                                            "end_token": 864,
                                                                            "label": "}",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 864,
                                                                    "end_token": 864,
                                                                    "label": "}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 864,
                                                                            "end_token": 864,
                                                                            "label": "}",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 864,
                                                                            "end_token": 864,
                                                                            "label": "}",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "start_token": 868,
                                                    "end_token": 868,
                                                    "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                    "children": [
                                                        {
                                                            "type": "not",
                                                            "start_token": 868,
                                                            "end_token": 868,
                                                            "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": 868,
                                                            "end_token": 868,
                                                            "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 868,
                                                                    "end_token": 868,
                                                                    "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 868,
                                                                            "end_token": 868,
                                                                            "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 868,
                                                                            "end_token": 868,
                                                                            "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "start_token": 868,
                                                                                    "end_token": 868,
                                                                                    "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_list",
                                                                                            "start_token": 868,
                                                                                            "end_token": 868,
                                                                                            "label": "\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "_get_provider_oauth_handler",
            "start_line": 393,
            "end_line": 422,
            "start_token": 869,
            "end_token": 913,
            "label": "BaseOAuthHandler\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")\n    client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 869,
                    "end_token": 912,
                    "label": "BaseOAuthHandler\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")\n    client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": 870,
                            "end_token": 877,
                            "label": "\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "start_token": 870,
                                    "end_token": 870,
                                    "label": "\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "start_token": 870,
                                            "end_token": 870,
                                            "label": "\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "raise_statement",
                                    "start_token": 871,
                                    "end_token": 877,
                                    "label": "Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 871,
                                            "end_token": 877,
                                            "label": "Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 878,
                            "end_token": 884,
                            "label": "{provider_name.value}_client_id\")\n    client_secret = getattr(settings.secrets, f\"",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 878,
                                    "end_token": 878,
                                    "label": "{",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 885,
                            "end_token": 891,
                            "label": "{provider_name.value}_client_secret\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 885,
                                    "end_token": 885,
                                    "label": "{",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "start_token": 891,
                            "end_token": 899,
                            "label": "\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "start_token": 892,
                                    "end_token": 892,
                                    "label": "Integration",
                                    "children": []
                                },
                                {
                                    "type": "raise_statement",
                                    "start_token": 893,
                                    "end_token": 899,
                                    "label": "with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 893,
                                            "end_token": 899,
                                            "label": "with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 900,
                            "end_token": 912,
                            "label": "{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 900,
                                    "end_token": 900,
                                    "label": "{",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 900,
                                    "end_token": 912,
                                    "label": "{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}