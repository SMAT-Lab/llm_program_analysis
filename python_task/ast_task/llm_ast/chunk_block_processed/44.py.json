{
    "type": "module",
    "start_token": 0,
    "end_token": 149,
    "label": "from enum import Enum\nfrom typing import List, Literal\n\nfrom pydantic import SecretStr\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import (\n    APIKeyCredentials,\n    BlockSecret,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n    SecretField,\n)\nfrom backend.integrations.providers import ProviderName\nfrom backend.util.request import requests\n\nTEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "label": "from enum import Enum",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 0,
                    "end_token": 1,
                    "label": "from enum",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 2,
                    "end_token": 2,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 3,
                    "end_token": 3,
                    "label": "Enum",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 5,
            "end_token": 10,
            "label": "from typing import List, Literal",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 5,
                    "end_token": 6,
                    "label": "from typing",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 7,
                    "end_token": 7,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "List",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 9,
                    "end_token": 10,
                    "label": ", Literal",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 13,
            "end_token": 16,
            "label": "from pydantic import SecretStr",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 13,
                    "end_token": 14,
                    "label": "from pydantic",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 15,
                    "end_token": 15,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 16,
                    "end_token": 16,
                    "label": "SecretStr",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 19,
            "end_token": 32,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 19,
                    "end_token": 24,
                    "label": "from backend.data.block",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 25,
                    "end_token": 25,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 26,
                    "end_token": 26,
                    "label": "Block",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 27,
                    "end_token": 28,
                    "label": ", BlockCategory",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 29,
                    "end_token": 30,
                    "label": ", BlockOutput",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 31,
                    "end_token": 32,
                    "label": ", BlockSchema",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 34,
            "end_token": 61,
            "label": "from backend.data.model import (\n    APIKeyCredentials,\n    BlockSecret,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n    SecretField,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 34,
                    "end_token": 39,
                    "label": "from backend.data.model",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 40,
                    "end_token": 40,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 43,
                    "end_token": 43,
                    "label": "APIKeyCredentials",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 44,
                    "end_token": 47,
                    "label": ",\n    BlockSecret,",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 48,
                    "end_token": 50,
                    "label": "\n    CredentialsField,",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 51,
                    "end_token": 53,
                    "label": "\n    CredentialsMetaInput,",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 54,
                    "end_token": 56,
                    "label": "\n    SchemaField,",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 57,
                    "end_token": 59,
                    "label": "\n    SecretField,",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 63,
            "end_token": 70,
            "label": "from backend.integrations.providers import ProviderName",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 63,
                    "end_token": 68,
                    "label": "from backend.integrations.providers",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 69,
                    "end_token": 69,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 70,
                    "end_token": 70,
                    "label": "ProviderName",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 72,
            "end_token": 79,
            "label": "from backend.util.request import requests",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 72,
                    "end_token": 77,
                    "label": "from backend.util.request",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 78,
                    "end_token": 78,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 79,
                    "end_token": 79,
                    "label": "requests",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 82,
            "end_token": 115,
            "label": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 82,
                    "end_token": 82,
                    "label": "TEST_CREDENTIALS",
                    "children": []
                },
                {
                    "type": "KeywordSeparator",
                    "start_token": 83,
                    "end_token": 83,
                    "label": "=",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 84,
                    "end_token": 115,
                    "label": "APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 84,
                            "end_token": 84,
                            "label": "APIKeyCredentials",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 85,
                            "end_token": 115,
                            "label": "(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
                            "children": [
                                {
                                    "type": "keyword_argument",
                                    "start_token": 87,
                                    "end_token": 89,
                                    "label": "id=\"01234567-89ab-cdef-0123-456789abcdef\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 87,
                                            "end_token": 87,
                                            "label": "id",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 89,
                                            "end_token": 89,
                                            "label": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "start_token": 92,
                                    "end_token": 94,
                                    "label": "provider=\"medium\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 92,
                                            "end_token": 92,
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 94,
                                            "end_token": 94,
                                            "label": "\"medium\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "start_token": 97,
                                    "end_token": 103,
                                    "label": "api_key=SecretStr(\"mock-medium-api-key\"),",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 97,
                                            "end_token": 97,
                                            "label": "api_key",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 99,
                                            "end_token": 102,
                                            "label": "SecretStr(\"mock-medium-api-key\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 99,
                                                    "end_token": 99,
                                                    "label": "SecretStr",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 100,
                                                    "end_token": 102,
                                                    "label": "(\"mock-medium-api-key\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 101,
                                                            "end_token": 101,
                                                            "label": "\"mock-medium-api-key\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "start_token": 105,
                                    "end_token": 107,
                                    "label": "title=\"Mock Medium API key\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 105,
                                            "end_token": 105,
                                            "label": "title",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 107,
                                            "end_token": 107,
                                            "label": "\"Mock Medium API key\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "keyword_argument",
                                    "start_token": 110,
                                    "end_token": 112,
                                    "label": "expires_at=None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 110,
                                            "end_token": 110,
                                            "label": "expires_at",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "start_token": 112,
                                            "end_token": 112,
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 117,
            "end_token": 149,
            "label": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 117,
                    "end_token": 117,
                    "label": "TEST_CREDENTIALS_INPUT",
                    "children": []
                },
                {
                    "type": "KeywordSeparator",
                    "start_token": 118,
                    "end_token": 118,
                    "label": "=",
                    "children": []
                },
                {
                    "type": "dictionary",
                    "start_token": 119,
                    "end_token": 149,
                    "label": "{\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
                    "children": [
                        {
                            "type": "pair",
                            "start_token": 121,
                            "end_token": 126,
                            "label": "\"provider\": TEST_CREDENTIALS.provider,",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 121,
                                    "end_token": 121,
                                    "label": "\"provider\"",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "start_token": 123,
                                    "end_token": 125,
                                    "label": "TEST_CREDENTIALS.provider",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 123,
                                            "end_token": 123,
                                            "label": "TEST_CREDENTIALS",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 125,
                                            "end_token": 125,
                                            "label": "provider",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "pair",
                            "start_token": 128,
                            "end_token": 133,
                            "label": "\"id\": TEST_CREDENTIALS.id,",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 128,
                                    "end_token": 128,
                                    "label": "\"id\"",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "start_token": 130,
                                    "end_token": 132,
                                    "label": "TEST_CREDENTIALS.id",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 130,
                                            "end_token": 130,
                                            "label": "TEST_CREDENTIALS",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 132,
                                            "end_token": 132,
                                            "label": "id",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "pair",
                            "start_token": 135,
                            "end_token": 140,
                            "label": "\"type\": TEST_CREDENTIALS.type,",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 135,
                                    "end_token": 135,
                                    "label": "\"type\"",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "start_token": 137,
                                    "end_token": 139,
                                    "label": "TEST_CREDENTIALS.type",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 137,
                                            "end_token": 137,
                                            "label": "TEST_CREDENTIALS",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 139,
                                            "end_token": 139,
                                            "label": "type",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "pair",
                            "start_token": 142,
                            "end_token": 147,
                            "label": "\"title\": TEST_CREDENTIALS.type,",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 142,
                                    "end_token": 142,
                                    "label": "\"title\"",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "start_token": 144,
                                    "end_token": 146,
                                    "label": "TEST_CREDENTIALS.type",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 144,
                                            "end_token": 144,
                                            "label": "TEST_CREDENTIALS",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 146,
                                            "end_token": 146,
                                            "label": "type",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 153,
            "end_token": 173,
            "label": "class PublishToMediumStatus(str, Enum):\n    PUBLIC = \"public\"\n    DRAFT = \"draft\"\n    UNLISTED = \"unlisted\"\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 154,
                    "end_token": 154,
                    "label": "PublishToMediumStatus",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "start_token": 155,
                    "end_token": 159,
                    "label": "(str, Enum)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 156,
                            "end_token": 156,
                            "label": "str",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 158,
                            "end_token": 158,
                            "label": "Enum",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 161,
                    "end_token": 172,
                    "label": "\n    PUBLIC = \"public\"\n    DRAFT = \"draft\"\n    UNLISTED = \"unlisted\"",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 162,
                            "end_token": 164,
                            "label": "PUBLIC = \"public\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 162,
                                    "end_token": 162,
                                    "label": "PUBLIC",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 164,
                                    "end_token": 164,
                                    "label": "\"public\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 166,
                            "end_token": 168,
                            "label": "DRAFT = \"draft\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 166,
                                    "end_token": 166,
                                    "label": "DRAFT",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 168,
                                    "end_token": 168,
                                    "label": "\"draft\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 170,
                            "end_token": 172,
                            "label": "UNLISTED = \"unlisted\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 170,
                                    "end_token": 170,
                                    "label": "UNLISTED",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 172,
                                    "end_token": 172,
                                    "label": "\"unlisted\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "PublishToMediumStatus",
            "start_line": 33,
            "end_line": 36
        },
        {
            "type": "class_placeholder",
            "name": "PublishToMediumBlock",
            "start_line": 39,
            "end_line": 195,
            "start_token": 176,
            "end_token": 464,
            "label": "class PublishToMediumBlock(Block):\n    class Input(BlockSchema):\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on.\",\n        )\n\n    class Output(BlockSchema):\n        post_id: str = SchemaField(description=\"The ID of the created Medium post\")\n        post_url: str = SchemaField(description=\"The URL of the created Medium post\")\n        published_at: int = SchemaField(\n            description=\"The timestamp when the post was published\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the post creation failed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"3f7b2dcb-4a78-4e3f-b0f1-88132e1b89df\",\n            input_schema=PublishToMediumBlock.Input,\n            output_schema=PublishToMediumBlock.Output,\n            description=\"Publishes a post to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"author_id\": \"1234567890abcdef\",\n                \"title\": \"Test Post\",\n                \"content\": \"<h1>Test Content</h1><p>This is a test post.</p>\",\n                \"content_format\": \"html\",\n                \"tags\": [\"test\", \"automation\"],\n                \"license\": \"all-rights-reserved\",\n                \"notify_followers\": False,\n                \"publish_status\": PublishToMediumStatus.DRAFT.value,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"post_id\", \"e6f36a\"),\n                (\"post_url\", \"https://medium.com/@username/test-post-e6f36a\"),\n                (\"published_at\", 1626282600),\n            ],\n            test_mock={\n                \"create_post\": lambda *args, **kwargs: {\n                    \"data\": {\n                        \"id\": \"e6f36a\",\n                        \"url\": \"https://medium.com/@username/test-post-e6f36a\",\n                        \"authorId\": \"1234567890abcdef\",\n                        \"publishedAt\": 1626282600,\n                    }\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def create_post(\n        self,\n        api_key: SecretStr,\n        author_id,\n        title,\n        content,\n        content_format,\n        tags,\n        canonical_url,\n        publish_status,\n        license,\n        notify_followers,\n    ):\n        headers = {\n            \"Authorization\": f\"Bearer {api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        }\n\n        data = {\n            \"title\": title,\n            \"content\": content,\n            \"contentFormat\": content_format,\n            \"tags\": tags,\n            \"canonicalUrl\": canonical_url,\n            \"publishStatus\": publish_status,\n            \"license\": license,\n            \"notifyFollowers\": notify_followers,\n        }\n\n        response = requests.post(\n            f\"https://api.medium.com/v1/users/{author_id}/posts\",\n            headers=headers,\n            json=data,\n        )\n\n        return response.json()\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        response = self.create_post(\n            credentials.api_key,\n            input_data.author_id.get_secret_value(),\n            input_data.title,\n            input_data.content,\n            input_data.content_format,\n            input_data.tags,\n            input_data.canonical_url,\n            input_data.publish_status,\n            input_data.license,\n            input_data.notify_followers,\n        )\n\n        if \"data\" in response:\n            yield \"post_id\", response[\"data\"][\"id\"]\n            yield \"post_url\", response[\"data\"][\"url\"]\n            yield \"published_at\", response[\"data\"][\"publishedAt\"]\n        else:\n            error_message = response.get(\"errors\", [{}])[0].get(\n                \"message\", \"Unknown error occurred\"\n            )\n            raise RuntimeError(f\"Failed to create Medium post: {error_message}\")\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 176,
                    "end_token": 181,
                    "label": "class PublishToMediumBlock(Block):",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": 464,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "boolean_operator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "assignment_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "concatenated_string",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "string_content",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "string_content",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "if_clause",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "create_post",
                            "start_line": 133,
                            "end_line": 169
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": 464,
                            "label": "",
                            "children": [
                                {
                                    "type": "keyword_separator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "keyword_separator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_separator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "keyword_separator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "run",
                            "start_line": 171,
                            "end_line": 195
                        },
                        {
                            "type": "class_definition",
                            "start_token": 176,
                            "end_token": 181,
                            "label": "class PublishToMediumBlock(Block):",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 177,
                                    "end_token": 177,
                                    "label": "PublishToMediumBlock",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 178,
                                    "end_token": 180,
                                    "label": "(Block)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 179,
                                            "end_token": 179,
                                            "label": "Block",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 181,
                                    "end_token": 181,
                                    "label": ":",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "class_placeholder",
                            "name": "Input",
                            "start_line": 40,
                            "end_line": 85,
                            "start_token": 183,
                            "end_token": 343,
                            "label": "class Input(BlockSchema):\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on.\",\n        )\n\n    class Output(BlockSchema):\n        post_id: str = SchemaField(description=\"",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 183,
                                    "end_token": 343,
                                    "label": "class Input(BlockSchema):\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on.\",\n        )\n\n    class Output(BlockSchema):\n        post_id: str = SchemaField(description=\"",
                                    "children": [
                                        {
                                            "type": "class_definition",
                                            "start_token": -1,
                                            "end_token": 343,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "class_definition",
                                            "start_token": 183,
                                            "end_token": 341,
                                            "label": "class Input(BlockSchema):\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 183,
                                                    "end_token": 183,
                                                    "label": "class",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 184,
                                                    "end_token": 184,
                                                    "label": "Input",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 185,
                                                    "end_token": 187,
                                                    "label": "(BlockSchema)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 186,
                                                            "end_token": 186,
                                                            "label": "BlockSchema",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 188,
                                                    "end_token": 341,
                                                    "label": ":\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 190,
                                                            "end_token": 220,
                                                            "label": "author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 190,
                                                                    "end_token": 190,
                                                                    "label": "author_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 192,
                                                                    "end_token": 192,
                                                                    "label": "BlockSecret",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 192,
                                                                            "end_token": 192,
                                                                            "label": "BlockSecret",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 194,
                                                                    "end_token": 220,
                                                                    "label": "SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 194,
                                                                            "end_token": 194,
                                                                            "label": "SecretField",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 195,
                                                                            "end_token": 220,
                                                                            "label": "(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": 197,
                                                                                    "end_token": 200,
                                                                                    "label": "key=\"medium_author_id\",",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 197,
                                                                                            "end_token": 197,
                                                                                            "label": "key",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": 199,
                                                                                            "end_token": 199,
                                                                                            "label": "\"medium_author_id\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": 202,
                                                                                    "end_token": 219,
                                                                                    "label": "description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 202,
                                                                                            "end_token": 202,
                                                                                            "label": "description",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": 204,
                                                                                            "end_token": 219,
                                                                                            "label": "\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 222,
                                                            "end_token": 263,
                                                            "label": "the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 222,
                                                                    "end_token": 222,
                                                                    "label": "the",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 224,
                                                                    "end_token": 224,
                                                                    "label": "'s Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: '",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 224,
                                                                            "end_token": 224,
                                                                            "label": "'s Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: '",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 226,
                                                                    "end_token": 263,
                                                                    "label": "' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 226,
                                                                            "end_token": 226,
                                                                            "label": "' or '",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 227,
                                                                            "end_token": 263,
                                                                            "label": "markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": 228,
                                                                                    "end_token": 231,
                                                                                    "label": "'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 228,
                                                                                            "end_token": 228,
                                                                                            "label": "'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": 230,
                                                                                            "end_token": 230,
                                                                                            "label": "', '",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 265,
                                                            "end_token": 310,
                                                            "label": "40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 265,
                                                                    "end_token": 265,
                                                                    "label": "40",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 267,
                                                                    "end_token": 267,
                                                                    "label": "by",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 267,
                                                                            "end_token": 267,
                                                                            "label": "by",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 269,
                                                                    "end_token": 310,
                                                                    "label": "nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 269,
                                                                            "end_token": 269,
                                                                            "label": "nc",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 270,
                                                                            "end_token": 310,
                                                                            "label": "', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": 271,
                                                                                    "end_token": 274,
                                                                                    "label": "cc-40-",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 271,
                                                                                            "end_token": 271,
                                                                                            "label": "cc",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": 273,
                                                                                            "end_token": 273,
                                                                                            "label": "40",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": 344,
                            "end_token": 375,
                            "label": "The ID of the created Medium post\")\n        post_url: str = SchemaField(description=\"The URL of the created Medium post\")\n        published_at: int = SchemaField(\n            description=\"The timestamp when the post was published\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the post creation failed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 344,
                                    "end_token": 351,
                                    "label": "The ID of the created Medium post\")\n        post_url: str = SchemaField(description=\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "start_token": 344,
                                            "end_token": 344,
                                            "label": "The",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "start_token": 345,
                                            "end_token": 350,
                                            "label": "ID of the created Medium post",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "start_token": 351,
                                            "end_token": 351,
                                            "label": "\")\n        post_url: str = SchemaField(description=\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "start_token": 352,
                                    "end_token": 359,
                                    "label": "The URL of the created Medium post\")\n        published_at: int = SchemaField(\n            description=\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "start_token": 352,
                                            "end_token": 352,
                                            "label": "The",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "start_token": 353,
                                            "end_token": 358,
                                            "label": "URL of the created Medium post",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "start_token": 359,
                                            "end_token": 359,
                                            "label": "\")\n        published_at: int = SchemaField(\n            description=\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "start_token": 360,
                                    "end_token": 367,
                                    "label": "The timestamp when the post was published\"\n        )\n        error: str = SchemaField(\n            description=\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "start_token": 360,
                                            "end_token": 360,
                                            "label": "The",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "start_token": 361,
                                            "end_token": 366,
                                            "label": "timestamp when the post was published",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "start_token": 367,
                                            "end_token": 367,
                                            "label": "\"\n        )\n        error: str = SchemaField(\n            description=\"",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "start_token": 368,
                                    "end_token": 375,
                                    "label": "Error message if the post creation failed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "start_token": 368,
                                            "end_token": 368,
                                            "label": "Error",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "start_token": 369,
                                            "end_token": 374,
                                            "label": "message if the post creation failed",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "start_token": 375,
                                            "end_token": 375,
                                            "label": "\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ],
                            "name": "Output",
                            "start_line": 87,
                            "end_line": 95
                        },
                        {
                            "type": "function_placeholder",
                            "name": "__init__",
                            "start_line": 97,
                            "end_line": 131,
                            "start_token": 376,
                            "end_token": 464,
                            "label": "3f7b2dcb-4a78-4e3f-b0f1-88132e1b89df\",\n            input_schema=PublishToMediumBlock.Input,\n            output_schema=PublishToMediumBlock.Output,\n            description=\"Publishes a post to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"author_id\": \"1234567890abcdef\",\n                \"title\": \"Test Post\",\n                \"content\": \"<h1>Test Content</h1><p>This is a test post.</p>\",\n                \"content_format\": \"html\",\n                \"tags\": [\"test\", \"automation\"],\n                \"license\": \"all-rights-reserved\",\n                \"notify_followers\": False,\n                \"publish_status\": PublishToMediumStatus.DRAFT.value,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"post_id\", \"e6f36a\"),\n                (\"post_url\", \"https://medium.com/@username/test-post-e6f36a\"),\n                (\"published_at\", 1626282600),\n            ],\n            test_mock={\n                \"create_post\": lambda *args, **kwargs: {\n                    \"data\": {\n                        \"id\": \"e6f36a\",\n                        \"url\": \"https://medium.com/@username/test-post-e6f36a\",\n                        \"authorId\": \"1234567890abcdef\",\n                        \"publishedAt\": 1626282600,\n                    }\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def create_post(\n        self,\n        api_key: SecretStr,\n        author_id,\n        title,\n        content,\n        content_format,\n        tags,\n        canonical_url,\n        publish_status,\n        license,\n        notify_followers,\n    ):\n        headers = {\n            \"Authorization\": f\"Bearer {api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        }\n\n        data = {\n            \"title\": title,\n            \"content\": content,\n            \"contentFormat\": content_format,\n            \"tags\": tags,\n            \"canonicalUrl\": canonical_url,\n            \"publishStatus\": publish_status,\n            \"license\": license,\n            \"notifyFollowers\": notify_followers,\n        }\n\n        response = requests.post(\n            f\"https://api.medium.com/v1/users/{author_id}/posts\",\n            headers=headers,\n            json=data,\n        )\n\n        return response.json()\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        response = self.create_post(\n            credentials.api_key,\n            input_data.author_id.get_secret_value(),\n            input_data.title,\n            input_data.content,\n            input_data.content_format,\n            input_data.tags,\n            input_data.canonical_url,\n            input_data.publish_status,\n            input_data.license,\n            input_data.notify_followers,\n        )\n\n        if \"data\" in response:\n            yield \"post_id\", response[\"data\"][\"id\"]\n            yield \"post_url\", response[\"data\"][\"url\"]\n            yield \"published_at\", response[\"data\"][\"publishedAt\"]\n        else:\n            error_message = response.get(\"errors\", [{}])[0].get(\n                \"message\", \"Unknown error occurred\"\n            )\n            raise RuntimeError(f\"Failed to create Medium post: {error_message}\")\n",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 376,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "function_definition",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 376,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 376,
                                                    "end_token": 389,
                                                    "label": "3f7b2dcb-4a78-4e3f-b0f1-88132e1b89df\",\n            input_schema=PublishToMediumBlock.Input,\n            output_schema=PublishToMediumBlock.Output,\n            description=\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 376,
                                                            "end_token": 376,
                                                            "label": "3",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 377,
                                                            "end_token": 388,
                                                            "label": "f7b2dcb-4a78-4e3f-b0f1-88132e1b89df",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 390,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 390,
                                                            "end_token": 396,
                                                            "label": "Publishes a post to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 390,
                                                                    "end_token": 390,
                                                                    "label": "Publishes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 391,
                                                                    "end_token": 396,
                                                                    "label": "a post to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 391,
                                                                            "end_token": 392,
                                                                            "label": "a post",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 393,
                                                                            "end_token": 396,
                                                                            "label": "to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 397,
                                                            "end_token": 399,
                                                            "label": "author_id\": \"1234567890",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 397,
                                                                    "end_token": 397,
                                                                    "label": "author_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 398,
                                                                    "end_token": 399,
                                                                    "label": "\": \"1234567890",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 400,
                                                            "end_token": 431,
                                                            "label": "abcdef\",\n                \"title\": \"Test Post\",\n                \"content\": \"<h1>Test Content</h1><p>This is a test post.</p>\",\n                \"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 400,
                                                                    "end_token": 400,
                                                                    "label": "abcdef",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 401,
                                                                    "end_token": 431,
                                                                    "label": "\",\n                \"title\": \"Test Post\",\n                \"content\": \"<h1>Test Content</h1><p>This is a test post.</p>\",\n                \"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 432,
                                                            "end_token": 449,
                                                            "label": "content_format\": \"html\",\n                \"tags\": [\"test\", \"automation\"],\n                \"license\": \"all-rights-reserved\",\n                \"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 432,
                                                                    "end_token": 432,
                                                                    "label": "content_format",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 433,
                                                                    "end_token": 449,
                                                                    "label": "\": \"html\",\n                \"tags\": [\"test\", \"automation\"],\n                \"license\": \"all-rights-reserved\",\n                \"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 450,
                                                            "end_token": 451,
                                                            "label": "notify_followers\": False,\n                \"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 450,
                                                                    "end_token": 450,
                                                                    "label": "notify_followers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "start_token": 451,
                                                                    "end_token": 451,
                                                                    "label": "\": False,\n                \"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 452,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 452,
                                                                    "end_token": 452,
                                                                    "label": "publish_status",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 453,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 453,
                                                                            "end_token": 459,
                                                                            "label": "\": PublishToMediumStatus.DRAFT.value,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"post_id\", \"e6f36a\"),\n                (\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 460,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 460,
                                                                                    "end_token": 464,
                                                                                    "label": "post_url\", \"https://medium.com/@username/test-post-e6f36a\"),\n                (\"published_at\", 1626282600),\n            ],\n            test_mock={\n                \"create_post\": lambda *args, **kwargs: {\n                    \"data\": {\n                        \"id\": \"e6f36a\",\n                        \"url\": \"https://medium.com/@username/test-post-e6f36a\",\n                        \"authorId\": \"1234567890abcdef\",\n                        \"publishedAt\": 1626282600,\n                    }\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def create_post(\n        self,\n        api_key: SecretStr,\n        author_id,\n        title,\n        content,\n        content_format,\n        tags,\n        canonical_url,\n        publish_status,\n        license,\n        notify_followers,\n    ):\n        headers = {\n            \"Authorization\": f\"Bearer {api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        }\n\n        data = {\n            \"title\": title,\n            \"content\": content,\n            \"contentFormat\": content_format,\n            \"tags\": tags,\n            \"canonicalUrl\": canonical_url,\n            \"publishStatus\": publish_status,\n            \"license\": license,\n            \"notifyFollowers\": notify_followers,\n        }\n\n        response = requests.post(\n            f\"https://api.medium.com/v1/users/{author_id}/posts\",\n            headers=headers,\n            json=data,\n        )\n\n        return response.json()\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        response = self.create_post(\n            credentials.api_key,\n            input_data.author_id.get_secret_value(),\n            input_data.title,\n            input_data.content,\n            input_data.content_format,\n            input_data.tags,\n            input_data.canonical_url,\n            input_data.publish_status,\n            input_data.license,\n            input_data.notify_followers,\n        )\n\n        if \"data\" in response:\n            yield \"post_id\", response[\"data\"][\"id\"]\n            yield \"post_url\", response[\"data\"][\"url\"]\n            yield \"published_at\", response[\"data\"][\"publishedAt\"]\n        else:\n            error_message = response.get(\"errors\", [{}])[0].get(\n                \"message\", \"Unknown error occurred\"\n            )\n            raise RuntimeError(f\"Failed to create Medium post: {error_message}\")\n",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}