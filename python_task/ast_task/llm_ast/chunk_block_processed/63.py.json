{
    "type": "module",
    "start_token": 0,
    "end_token": 1212,
    "label": "from pathlib import Path\n\nfrom prisma.models import User\n\nfrom backend.blocks.basic import StoreValueBlock\nfrom backend.blocks.block import BlockInstallationBlock\nfrom backend.blocks.http import SendWebRequestBlock\nfrom backend.blocks.llm import AITextGeneratorBlock\nfrom backend.blocks.text import ExtractTextInformationBlock, FillTextTemplateBlock\nfrom backend.data.graph import Graph, Link, Node, create_graph\nfrom backend.data.user import get_or_create_user\nfrom backend.util.test import SpinTestServer, wait_execution\n\nsample_block_modules = {\n    \"llm\": \"Block that calls the AI model to generate text.\",\n    \"basic\": \"Block that does basic operations.\",\n    \"text\": \"Blocks that do text operations.\",\n    \"reddit\": \"Blocks that interacts with Reddit.\",\n}\nsample_block_codes = {}\nfor module, description in sample_block_modules.items():\n    current_dir = Path(__file__).parent\n    file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n    with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n        sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n\n\nasync def create_test_user() -> User:\n    test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }\n    user = await get_or_create_user(test_user_data)\n    return user\n\n\ndef create_test_graph() -> Graph:\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )\n\n\nasync def block_autogen_agent():\n    async with SpinTestServer() as server:\n        test_user = await create_test_user()\n        test_graph = await create_graph(create_test_graph(), user_id=test_user.id)\n        input_data = {\"input\": \"Write me a block that writes a string into a file.\"}\n        response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )\n        print(response)\n        result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )\n        print(result)\n\n\nif __name__ == \"__main__\":\n    import asyncio\n\n    asyncio.run(block_autogen_agent())\n",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "label": "from pathlib import Path",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "pathlib",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 3,
                    "end_token": 3,
                    "label": "Path",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 6,
            "end_token": 11,
            "label": "from prisma.models import User",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 7,
                    "end_token": 9,
                    "label": "prisma.models",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "User",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 14,
            "end_token": 21,
            "label": "from backend.blocks.basic import StoreValueBlock",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 15,
                    "end_token": 19,
                    "label": "backend.blocks.basic",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 21,
                    "end_token": 21,
                    "label": "StoreValueBlock",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 23,
            "end_token": 30,
            "label": "from backend.blocks.block import BlockInstallationBlock",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 24,
                    "end_token": 28,
                    "label": "backend.blocks.block",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 30,
                    "end_token": 30,
                    "label": "BlockInstallationBlock",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 32,
            "end_token": 39,
            "label": "from backend.blocks.http import SendWebRequestBlock",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 33,
                    "end_token": 37,
                    "label": "backend.blocks.http",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 39,
                    "end_token": 39,
                    "label": "SendWebRequestBlock",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 41,
            "end_token": 49,
            "label": "from backend.blocks.llm import AITextGeneratorBlock\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 42,
                    "end_token": 46,
                    "label": "backend.blocks.llm",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 48,
                    "end_token": 48,
                    "label": "AITextGeneratorBlock",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 50,
            "end_token": 60,
            "label": "from backend.blocks.text import ExtractTextInformationBlock, FillTextTemplateBlock\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 51,
                    "end_token": 55,
                    "label": "backend.blocks.text",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 57,
                    "end_token": 59,
                    "label": "ExtractTextInformationBlock, FillTextTemplateBlock",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 61,
            "end_token": 74,
            "label": "from backend.data.graph import Graph, Link, Node, create_graph",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 62,
                    "end_token": 66,
                    "label": "backend.data.graph",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 68,
                    "end_token": 74,
                    "label": "Graph, Link, Node, create_graph",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 76,
            "end_token": 83,
            "label": "from backend.data.user import get_or_create_user",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 77,
                    "end_token": 81,
                    "label": "backend.data.user",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 83,
                    "end_token": 83,
                    "label": "get_or_create_user",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 85,
            "end_token": 94,
            "label": "from backend.util.test import SpinTestServer, wait_execution",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 86,
                    "end_token": 90,
                    "label": "backend.util.test",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 92,
                    "end_token": 94,
                    "label": "SpinTestServer, wait_execution",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 97,
            "end_token": 121,
            "label": "sample_block_modules = {\n    \"llm\": \"Block that calls the AI model to generate text.\",\n    \"basic\": \"Block that does basic operations.\",\n    \"text\": \"Blocks that do text operations.\",\n    \"reddit\": \"Blocks that interacts with Reddit.\",\n}",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 97,
                    "end_token": 97,
                    "label": "sample_block_modules",
                    "children": []
                },
                {
                    "type": "dictionary",
                    "start_token": 99,
                    "end_token": 121,
                    "label": "{\n    \"llm\": \"Block that calls the AI model to generate text.\",\n    \"basic\": \"Block that does basic operations.\",\n    \"text\": \"Blocks that do text operations.\",\n    \"reddit\": \"Blocks that interacts with Reddit.\",\n}",
                    "children": [
                        {
                            "type": "pair",
                            "start_token": 101,
                            "end_token": 104,
                            "label": "\"llm\": \"Block that calls the AI model to generate text.\",",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 101,
                                    "end_token": 101,
                                    "label": "\"llm\"",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 103,
                                    "end_token": 104,
                                    "label": "\"Block that calls the AI model to generate text.\",",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "pair",
                            "start_token": 106,
                            "end_token": 109,
                            "label": "\"basic\": \"Block that does basic operations.\",",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 106,
                                    "end_token": 106,
                                    "label": "\"basic\"",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 108,
                                    "end_token": 109,
                                    "label": "\"Block that does basic operations.\",",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "pair",
                            "start_token": 111,
                            "end_token": 114,
                            "label": "\"text\": \"Blocks that do text operations.\",",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 111,
                                    "end_token": 111,
                                    "label": "\"text\"",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 113,
                                    "end_token": 114,
                                    "label": "\"Blocks that do text operations.\",",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "pair",
                            "start_token": 116,
                            "end_token": 119,
                            "label": "\"reddit\": \"Blocks that interacts with Reddit.\",",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 116,
                                    "end_token": 116,
                                    "label": "\"reddit\"",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 118,
                                    "end_token": 119,
                                    "label": "\"Blocks that interacts with Reddit.\",",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 123,
            "end_token": 127,
            "label": "sample_block_codes = {}\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 123,
                    "end_token": 123,
                    "label": "sample_block_codes",
                    "children": []
                },
                {
                    "type": "dictionary",
                    "start_token": 125,
                    "end_token": 127,
                    "label": "{}\n",
                    "children": []
                }
            ]
        },
        {
            "type": "for_statement",
            "start_token": 128,
            "end_token": 197,
            "label": "for module, description in sample_block_modules.items():\n    current_dir = Path(__file__).parent\n    file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n    with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n        sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n",
            "children": [
                {
                    "type": "for_in_clause",
                    "start_token": 128,
                    "end_token": 136,
                    "label": "for module, description in sample_block_modules.items(",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 129,
                            "end_token": 131,
                            "label": "module, description",
                            "children": []
                        },
                        {
                            "type": "attribute",
                            "start_token": 133,
                            "end_token": 135,
                            "label": "sample_block_modules.items",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 133,
                                    "end_token": 133,
                                    "label": "sample_block_modules",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 135,
                                    "end_token": 135,
                                    "label": "items",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 138,
                    "end_token": 197,
                    "label": ":\n    current_dir = Path(__file__).parent\n    file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n    with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n        sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 140,
                            "end_token": 148,
                            "label": "current_dir = Path(__file__).parent\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 140,
                                    "end_token": 140,
                                    "label": "current_dir",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "start_token": 142,
                                    "end_token": 147,
                                    "label": "Path(__file__).parent",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 142,
                                            "end_token": 144,
                                            "label": "Path(__file__",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 147,
                                            "end_token": 147,
                                            "label": "parent",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 149,
                            "end_token": 159,
                            "label": "file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 149,
                                    "end_token": 149,
                                    "label": "file_path",
                                    "children": []
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": 151,
                                    "end_token": 158,
                                    "label": "current_dir.parent / \"blocks\" / f\"{module}.py\"",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "start_token": 151,
                                            "end_token": 153,
                                            "label": "current_dir.parent",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 151,
                                                    "end_token": 152,
                                                    "label": "current_dir.",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 153,
                                                    "end_token": 155,
                                                    "label": "parent / \"blocks\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 158,
                                            "end_token": 158,
                                            "label": "\"{module}.py\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "start_token": 160,
                            "end_token": 189,
                            "label": "with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n",
                            "children": [
                                {
                                    "type": "with_item",
                                    "start_token": 160,
                                    "end_token": 169,
                                    "label": "with open(file_path, \"r\") as f:",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 161,
                                            "end_token": 166,
                                            "label": "open(file_path, \"r\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 161,
                                                    "end_token": 161,
                                                    "label": "open",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 162,
                                                    "end_token": 166,
                                                    "label": "(file_path, \"r\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 163,
                                                            "end_token": 163,
                                                            "label": "file_path",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 165,
                                                            "end_token": 165,
                                                            "label": "\"r\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 167,
                                            "end_token": 169,
                                            "label": "as f:",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 169,
                                    "end_token": 189,
                                    "label": ":\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 171,
                                            "end_token": 188,
                                            "label": "code = \"\\n\".join([\"```python\", f.read(), \"```\"])",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 171,
                                                    "end_token": 171,
                                                    "label": "code",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 173,
                                                    "end_token": 188,
                                                    "label": "\"\\n\".join([\"```python\", f.read(), \"```\"])",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 174,
                                                            "end_token": 175,
                                                            "label": ".join",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 174,
                                                                    "end_token": 174,
                                                                    "label": ".",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 175,
                                                                    "end_token": 175,
                                                                    "label": "join",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 176,
                                                            "end_token": 187,
                                                            "label": "([\"```python\", f.read(), \"```\"]",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 177,
                                                                    "end_token": 187,
                                                                    "label": "[\"```python\", f.read(), \"```\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 178,
                                                                            "end_token": 186,
                                                                            "label": "\"```python\", f.read(), \"```\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 190,
                            "end_token": 196,
                            "label": "sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"",
                            "children": [
                                {
                                    "type": "subscript",
                                    "start_token": 190,
                                    "end_token": 192,
                                    "label": "sample_block_codes[module",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 190,
                                            "end_token": 190,
                                            "label": "sample_block_codes",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 192,
                                            "end_token": 192,
                                            "label": "module",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "formatted_string",
                                    "start_token": 195,
                                    "end_token": 196,
                                    "label": "f\"[Example: {description}]\\n{code}\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 195,
                                            "end_token": 195,
                                            "label": "f",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 200,
            "end_token": 241,
            "label": "async def create_test_user() -> User:\n    test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }\n    user = await get_or_create_user(test_user_data)\n    return user\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 200,
                    "end_token": 200,
                    "label": "async",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 201,
                    "end_token": 201,
                    "label": "def",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 202,
                    "end_token": 202,
                    "label": "create_test_user",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 203,
                    "end_token": 204,
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "start_token": 206,
                    "end_token": 207,
                    "label": "> User",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 207,
                            "end_token": 207,
                            "label": "User",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 209,
                    "end_token": 240,
                    "label": "\n    test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }\n    user = await get_or_create_user(test_user_data)\n    return user",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 210,
                            "end_token": 229,
                            "label": "test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 210,
                                    "end_token": 210,
                                    "label": "test_user_data",
                                    "children": []
                                },
                                {
                                    "type": "dictionary",
                                    "start_token": 212,
                                    "end_token": 229,
                                    "label": "{\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }",
                                    "children": [
                                        {
                                            "type": "pair",
                                            "start_token": 214,
                                            "end_token": 216,
                                            "label": "\"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 214,
                                                    "end_token": 214,
                                                    "label": "\"sub\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 216,
                                                    "end_token": 216,
                                                    "label": "\"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 219,
                                            "end_token": 221,
                                            "label": "\"email\": \"testuser@example.com\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 219,
                                                    "end_token": 219,
                                                    "label": "\"email\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 221,
                                                    "end_token": 221,
                                                    "label": "\"testuser@example.com\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 224,
                                            "end_token": 226,
                                            "label": "\"name\": \"Test User\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 224,
                                                    "end_token": 224,
                                                    "label": "\"name\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 226,
                                                    "end_token": 226,
                                                    "label": "\"Test User\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 231,
                            "end_token": 237,
                            "label": "user = await get_or_create_user(test_user_data)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 231,
                                    "end_token": 231,
                                    "label": "user",
                                    "children": []
                                },
                                {
                                    "type": "await",
                                    "start_token": 233,
                                    "end_token": 237,
                                    "label": "await get_or_create_user(test_user_data)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 234,
                                            "end_token": 237,
                                            "label": "get_or_create_user(test_user_data)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 234,
                                                    "end_token": 234,
                                                    "label": "get_or_create_user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 235,
                                                    "end_token": 236,
                                                    "label": "(test_user_data",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 236,
                                                            "end_token": 236,
                                                            "label": "test_user_data",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 239,
                            "end_token": 240,
                            "label": "return user",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 240,
                                    "end_token": 240,
                                    "label": "user",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "create_test_user",
            "start_line": 29,
            "end_line": 36
        },
        {
            "type": "function_placeholder",
            "name": "create_test_graph",
            "start_line": 39,
            "end_line": 247,
            "start_token": 244,
            "end_token": 1074,
            "label": "def create_test_graph() -> Graph:\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 244,
                    "end_token": 1073,
                    "label": "def create_test_graph() -> Graph:\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 244,
                            "end_token": 1073,
                            "label": "def create_test_graph() -> Graph:\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 245,
                                    "end_token": 245,
                                    "label": "create_test_graph",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 246,
                                    "end_token": 247,
                                    "label": "()",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 249,
                                    "end_token": 250,
                                    "label": "> Graph",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 252,
                                    "end_token": 1073,
                                    "label": "\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )",
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 253,
                                            "end_token": 255,
                                            "label": "\"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 257,
                                            "end_token": 275,
                                            "label": "# ======= Nodes ========= #",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 277,
                                            "end_token": 288,
                                            "label": "input_data = Node(block_id=StoreValueBlock().id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 277,
                                                    "end_token": 277,
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 279,
                                                    "end_token": 288,
                                                    "label": "Node(block_id=StoreValueBlock().id)",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 279,
                                                            "end_token": 280,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 279,
                                                                    "end_token": 279,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 280,
                                                            "end_token": 288,
                                                            "label": "(block_id=StoreValueBlock().id)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 281,
                                                                    "end_token": 287,
                                                                    "label": "block_id=StoreValueBlock().id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 281,
                                                                            "end_token": 281,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 283,
                                                                            "end_token": 287,
                                                                            "label": "StoreValueBlock().id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 283,
                                                                                    "end_token": 284,
                                                                                    "label": "StoreValueBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 283,
                                                                                            "end_token": 283,
                                                                                            "label": "StoreValueBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 286,
                                                                                    "end_token": 287,
                                                                                    "label": ".id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 290,
                                            "end_token": 313,
                                            "label": "input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 290,
                                                    "end_token": 290,
                                                    "label": "input_query_constant",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 292,
                                                    "end_token": 313,
                                                    "label": "Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 292,
                                                            "end_token": 293,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 292,
                                                                    "end_token": 292,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 293,
                                                            "end_token": 313,
                                                            "label": "(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 295,
                                                                    "end_token": 297,
                                                                    "label": "block_id=StoreValueBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 295,
                                                                            "end_token": 295,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 297,
                                                                            "end_token": 298,
                                                                            "label": "StoreValueBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 297,
                                                                                    "end_token": 298,
                                                                                    "label": "StoreValueBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 297,
                                                                                            "end_token": 297,
                                                                                            "label": "StoreValueBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 304,
                                                                    "end_token": 311,
                                                                    "label": "input_default={\"data\": None},",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 307,
                                                                            "end_token": 308,
                                                                            "label": "\"data\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "start_token": 309,
                                                                            "end_token": 309,
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 315,
                                            "end_token": 341,
                                            "label": "input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 315,
                                                    "end_token": 315,
                                                    "label": "input_text_formatter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 317,
                                                    "end_token": 341,
                                                    "label": "Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 317,
                                                            "end_token": 318,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 317,
                                                                    "end_token": 317,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 318,
                                                            "end_token": 341,
                                                            "label": "(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 320,
                                                                    "end_token": 322,
                                                                    "label": "block_id=FillTextTemplateBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 320,
                                                                            "end_token": 320,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 322,
                                                                            "end_token": 323,
                                                                            "label": "FillTextTemplateBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 322,
                                                                                    "end_token": 323,
                                                                                    "label": "FillTextTemplateBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 322,
                                                                                            "end_token": 322,
                                                                                            "label": "FillTextTemplateBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 329,
                                                                    "end_token": 338,
                                                                    "label": "input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 333,
                                                                            "end_token": 334,
                                                                            "label": "\"format\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 335,
                                                                            "end_token": 336,
                                                                            "label": "\"Show me how to make a python code for this query: `{query}`\",",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 343,
                                            "end_token": 369,
                                            "label": "search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 343,
                                                    "end_token": 343,
                                                    "label": "search_http_request",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 345,
                                                    "end_token": 369,
                                                    "label": "Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 345,
                                                            "end_token": 346,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 345,
                                                                    "end_token": 345,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 346,
                                                            "end_token": 369,
                                                            "label": "(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 348,
                                                                    "end_token": 350,
                                                                    "label": "block_id=SendWebRequestBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 348,
                                                                            "end_token": 348,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 350,
                                                                            "end_token": 351,
                                                                            "label": "SendWebRequestBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 350,
                                                                                    "end_token": 351,
                                                                                    "label": "SendWebRequestBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 350,
                                                                                            "end_token": 350,
                                                                                            "label": "SendWebRequestBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 357,
                                                                    "end_token": 366,
                                                                    "label": "input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 361,
                                                                            "end_token": 362,
                                                                            "label": "\"url\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 363,
                                                                            "end_token": 364,
                                                                            "label": "\"https://osit-v2.bentlybro.com/search\",",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 371,
                                            "end_token": 397,
                                            "label": "search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 371,
                                                    "end_token": 371,
                                                    "label": "search_result_constant",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 373,
                                                    "end_token": 397,
                                                    "label": "Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 373,
                                                            "end_token": 374,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 373,
                                                                    "end_token": 373,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 374,
                                                            "end_token": 397,
                                                            "label": "(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 376,
                                                                    "end_token": 378,
                                                                    "label": "block_id=StoreValueBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 376,
                                                                            "end_token": 376,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 378,
                                                                            "end_token": 379,
                                                                            "label": "StoreValueBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 378,
                                                                                    "end_token": 379,
                                                                                    "label": "StoreValueBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 378,
                                                                                            "end_token": 378,
                                                                                            "label": "StoreValueBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 385,
                                                                    "end_token": 394,
                                                                    "label": "input_default={\n            \"data\": None,\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 389,
                                                                            "end_token": 390,
                                                                            "label": "\"data\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "start_token": 391,
                                                                            "end_token": 391,
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 399,
                                            "end_token": 432,
                                            "label": "prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 399,
                                                    "end_token": 399,
                                                    "label": "prompt_text_formatter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 401,
                                                    "end_token": 432,
                                                    "label": "Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 401,
                                                            "end_token": 402,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 401,
                                                                    "end_token": 401,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 402,
                                                            "end_token": 432,
                                                            "label": "(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 404,
                                                                    "end_token": 406,
                                                                    "label": "block_id=FillTextTemplateBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 404,
                                                                            "end_token": 404,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 406,
                                                                            "end_token": 407,
                                                                            "label": "FillTextTemplateBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 406,
                                                                                    "end_token": 407,
                                                                                    "label": "FillTextTemplateBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 406,
                                                                                            "end_token": 406,
                                                                                            "label": "FillTextTemplateBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 413,
                                                                    "end_token": 429,
                                                                    "label": "input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 417,
                                                                            "end_token": 419,
                                                                            "label": "\"format\": \"\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 420,
                                                                            "end_token": 421,
                                                                            "label": "\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 424,
                                                                    "end_token": 426,
                                                                    "label": "\"values_#_previous_attempt\": \"No previous attempt found.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 424,
                                                                            "end_token": 425,
                                                                            "label": "\"values_#_previous_attempt\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 426,
                                                                            "end_token": 426,
                                                                            "label": "\"No previous attempt found.\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 434,
                                            "end_token": 478,
                                            "label": "code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 434,
                                                    "end_token": 434,
                                                    "label": "code_gen_llm_call",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 436,
                                                    "end_token": 478,
                                                    "label": "Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 436,
                                                            "end_token": 437,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 436,
                                                                    "end_token": 436,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 437,
                                                            "end_token": 478,
                                                            "label": "(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 439,
                                                                    "end_token": 441,
                                                                    "label": "block_id=AITextGeneratorBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 439,
                                                                            "end_token": 439,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 441,
                                                                            "end_token": 442,
                                                                            "label": "AITextGeneratorBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 441,
                                                                                    "end_token": 442,
                                                                                    "label": "AITextGeneratorBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 441,
                                                                                            "end_token": 441,
                                                                                            "label": "AITextGeneratorBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 448,
                                                                    "end_token": 475,
                                                                    "label": "input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 452,
                                                                            "end_token": 453,
                                                                            "label": "\"sys_prompt\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "format_specifier",
                                                                            "start_token": 454,
                                                                            "end_token": 455,
                                                                            "label": "f\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 455,
                                                                                    "end_token": 472,
                                                                                    "label": "\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 480,
                                            "end_token": 511,
                                            "label": "code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 480,
                                                    "end_token": 480,
                                                    "label": "code_text_parser",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 482,
                                                    "end_token": 511,
                                                    "label": "Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 482,
                                                            "end_token": 483,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 482,
                                                                    "end_token": 482,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 483,
                                                            "end_token": 511,
                                                            "label": "(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 485,
                                                                    "end_token": 487,
                                                                    "label": "block_id=ExtractTextInformationBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 485,
                                                                            "end_token": 485,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 487,
                                                                            "end_token": 488,
                                                                            "label": "ExtractTextInformationBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 487,
                                                                                    "end_token": 488,
                                                                                    "label": "ExtractTextInformationBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 487,
                                                                                            "end_token": 487,
                                                                                            "label": "ExtractTextInformationBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 494,
                                                                    "end_token": 508,
                                                                    "label": "input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 498,
                                                                            "end_token": 499,
                                                                            "label": "\"pattern\":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 500,
                                                                            "end_token": 501,
                                                                            "label": "\"```python\\n(.+?)\\n```\",",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 513,
                                            "end_token": 527,
                                            "label": "block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 513,
                                                    "end_token": 513,
                                                    "label": "block_installation",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 515,
                                                    "end_token": 527,
                                                    "label": "Node(\n        block_id=BlockInstallationBlock().id,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 515,
                                                            "end_token": 516,
                                                            "label": "Node(",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 515,
                                                                    "end_token": 515,
                                                                    "label": "Node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 516,
                                                            "end_token": 527,
                                                            "label": "(\n        block_id=BlockInstallationBlock().id,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 518,
                                                                    "end_token": 520,
                                                                    "label": "block_id=BlockInstallationBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 518,
                                                                            "end_token": 518,
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 520,
                                                                            "end_token": 521,
                                                                            "label": "BlockInstallationBlock(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "start_token": 520,
                                                                                    "end_token": 521,
                                                                                    "label": "BlockInstallationBlock(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 520,
                                                                                            "end_token": 520,
                                                                                            "label": "BlockInstallationBlock",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 529,
                                            "end_token": 560,
                                            "label": "nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 529,
                                                    "end_token": 529,
                                                    "label": "nodes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "expression_list",
                                                    "start_token": 530,
                                                    "end_token": 560,
                                                    "label": "= [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 533,
                                                            "end_token": 533,
                                                            "label": "input_data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 536,
                                                            "end_token": 536,
                                                            "label": "input_query_constant",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 539,
                                                            "end_token": 539,
                                                            "label": "input_text_formatter",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 542,
                                                            "end_token": 542,
                                                            "label": "search_http_request",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 545,
                                                            "end_token": 545,
                                                            "label": "search_result_constant",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 548,
                                                            "end_token": 548,
                                                            "label": "prompt_text_formatter",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 551,
                                                            "end_token": 551,
                                                            "label": "code_gen_llm_call",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 554,
                                                            "end_token": 554,
                                                            "label": "code_text_parser",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 557,
                                                            "end_token": 557,
                                                            "label": "block_installation",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 563,
                                            "end_token": 581,
                                            "label": "# ======= Links ========= #",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 583,
                                            "end_token": 1026,
                                            "label": "links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 583,
                                                    "end_token": 583,
                                                    "label": "links",
                                                    "children": []
                                                },
                                                {
                                                    "type": "expression_list",
                                                    "start_token": 585,
                                                    "end_token": 1026,
                                                    "label": "[\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 587,
                                                            "end_token": 614,
                                                            "label": "Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "start_token": 587,
                                                                    "end_token": 588,
                                                                    "label": "Link(",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 587,
                                                                            "end_token": 587,
                                                                            "label": "Link",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 588,
                                                                    "end_token": 614,
                                                                    "label": "(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "start_token": 590,
                                                                            "end_token": 595,
                                                                            "label": "source_id=input_data.id,",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 590,
                                                                                    "end_token": 590,
                                                                                    "label": "source_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 592,
                                                                                    "end_token": 594,
                                                                                    "label": "input_data.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 592,
                                                                                            "end_token": 592,
                                                                                            "label": "input_data",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 743,
                                            "end_token": 749,
                                            "label": "block\n            source_id=search_result_constant.id",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 1049,
                            "end_token": 1073,
                            "label": "return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 1050,
                                    "end_token": 1073,
                                    "label": "Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "start_token": 1050,
                                            "end_token": 1051,
                                            "label": "Graph(",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1050,
                                                    "end_token": 1050,
                                                    "label": "Graph",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 1051,
                                            "end_token": 1073,
                                            "label": "(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "start_token": 1053,
                                                    "end_token": 1056,
                                                    "label": "name=\"BlockAutoGen\",",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 1055,
                                                            "end_token": 1055,
                                                            "label": "\"BlockAutoGen\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "start_token": 1058,
                                                    "end_token": 1061,
                                                    "label": "description=\"Block auto generation agent\",",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 1060,
                                                            "end_token": 1060,
                                                            "label": "\"Block auto generation agent\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "start_token": 1063,
                                                    "end_token": 1066,
                                                    "label": "nodes=nodes,",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 1065,
                                                            "end_token": 1065,
                                                            "label": "nodes",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "start_token": 1068,
                                                    "end_token": 1071,
                                                    "label": "links=links,",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 1070,
                                                            "end_token": 1070,
                                                            "label": "links",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 1077,
            "end_token": 1190,
            "label": "async def block_autogen_agent():\n    async with SpinTestServer() as server:\n        test_user = await create_test_user()\n        test_graph = await create_graph(create_test_graph(), user_id=test_user.id)\n        input_data = {\"input\": \"Write me a block that writes a string into a file.\"}\n        response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )\n        print(response)\n        result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )\n        print(result)\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 1079,
                    "end_token": 1079,
                    "label": "block_autogen_agent",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 1080,
                    "end_token": 1081,
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 1083,
                    "end_token": 1189,
                    "label": "\n    async with SpinTestServer() as server:\n        test_user = await create_test_user()\n        test_graph = await create_graph(create_test_graph(), user_id=test_user.id)\n        input_data = {\"input\": \"Write me a block that writes a string into a file.\"}\n        response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )\n        print(response)\n        result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )\n        print(result)",
                    "children": [
                        {
                            "type": "with_statement",
                            "start_token": 1084,
                            "end_token": 1091,
                            "label": "async with SpinTestServer() as server:",
                            "children": [
                                {
                                    "type": "with_item",
                                    "start_token": 1085,
                                    "end_token": 1090,
                                    "label": "with SpinTestServer() as server",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 1086,
                                            "end_token": 1088,
                                            "label": "SpinTestServer()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1086,
                                                    "end_token": 1086,
                                                    "label": "SpinTestServer",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 1087,
                                                    "end_token": 1088,
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "as_pattern",
                                            "start_token": 1089,
                                            "end_token": 1090,
                                            "label": "as server",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1090,
                                                    "end_token": 1090,
                                                    "label": "server",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 1093,
                            "end_token": 1098,
                            "label": "test_user = await create_test_user()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1093,
                                    "end_token": 1093,
                                    "label": "test_user",
                                    "children": []
                                },
                                {
                                    "type": "await",
                                    "start_token": 1095,
                                    "end_token": 1098,
                                    "label": "await create_test_user()",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 1096,
                                            "end_token": 1098,
                                            "label": "create_test_user()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1096,
                                                    "end_token": 1096,
                                                    "label": "create_test_user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 1097,
                                                    "end_token": 1098,
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 1100,
                            "end_token": 1114,
                            "label": "test_graph = await create_graph(create_test_graph(), user_id=test_user.id)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1100,
                                    "end_token": 1100,
                                    "label": "test_graph",
                                    "children": []
                                },
                                {
                                    "type": "await",
                                    "start_token": 1102,
                                    "end_token": 1114,
                                    "label": "await create_graph(create_test_graph(), user_id=test_user.id)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 1103,
                                            "end_token": 1114,
                                            "label": "create_graph(create_test_graph(), user_id=test_user.id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1103,
                                                    "end_token": 1103,
                                                    "label": "create_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 1104,
                                                    "end_token": 1114,
                                                    "label": "(create_test_graph(), user_id=test_user.id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 1105,
                                                            "end_token": 1107,
                                                            "label": "create_test_graph()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1105,
                                                                    "end_token": 1105,
                                                                    "label": "create_test_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 1106,
                                                                    "end_token": 1107,
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 1108,
                                                            "end_token": 1113,
                                                            "label": ", user_id=test_user.id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1109,
                                                                    "end_token": 1109,
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 1111,
                                                                    "end_token": 1113,
                                                                    "label": "test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1111,
                                                                            "end_token": 1111,
                                                                            "label": "test_user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1113,
                                                                            "end_token": 1113,
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 1116,
                            "end_token": 1122,
                            "label": "input_data = {\"input\": \"Write me a block that writes a string into a file.\"}",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1116,
                                    "end_token": 1116,
                                    "label": "input_data",
                                    "children": []
                                },
                                {
                                    "type": "dictionary",
                                    "start_token": 1118,
                                    "end_token": 1122,
                                    "label": "{\"input\": \"Write me a block that writes a string into a file.\"}",
                                    "children": [
                                        {
                                            "type": "pair",
                                            "start_token": 1119,
                                            "end_token": 1121,
                                            "label": "\"input\": \"Write me a block that writes a string into a file.\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 1119,
                                                    "end_token": 1119,
                                                    "label": "\"input\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 1121,
                                                    "end_token": 1121,
                                                    "label": "\"Write me a block that writes a string into a file.\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 1124,
                            "end_token": 1143,
                            "label": "response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1124,
                                    "end_token": 1124,
                                    "label": "response",
                                    "children": []
                                },
                                {
                                    "type": "await",
                                    "start_token": 1126,
                                    "end_token": 1143,
                                    "label": "await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 1127,
                                            "end_token": 1143,
                                            "label": "server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 1127,
                                                    "end_token": 1129,
                                                    "label": "server.agent_server",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 1127,
                                                            "end_token": 1127,
                                                            "label": "server",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 1129,
                                                            "end_token": 1129,
                                                            "label": "agent_server",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 1130,
                                                    "end_token": 1144,
                                                    "label": ".test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 1131,
                                                            "end_token": 1131,
                                                            "label": "test_execute_graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 1132,
                                                            "end_token": 1144,
                                                            "label": "(\n            test_graph.id, input_data, test_user.id\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 1134,
                                                                    "end_token": 1136,
                                                                    "label": "test_graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1134,
                                                                            "end_token": 1134,
                                                                            "label": "test_graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1136,
                                                                            "end_token": 1136,
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1138,
                                                                    "end_token": 1138,
                                                                    "label": "input_data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 1140,
                                                                    "end_token": 1142,
                                                                    "label": "test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1140,
                                                                            "end_token": 1140,
                                                                            "label": "test_user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1142,
                                                                            "end_token": 1142,
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 1146,
                            "end_token": 1149,
                            "label": "print(response)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 1146,
                                    "end_token": 1149,
                                    "label": "print(response)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 1146,
                                            "end_token": 1146,
                                            "label": "print",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 1147,
                                            "end_token": 1149,
                                            "label": "(response)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1148,
                                                    "end_token": 1148,
                                                    "label": "response",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 1151,
                            "end_token": 1182,
                            "label": "result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1151,
                                    "end_token": 1151,
                                    "label": "result",
                                    "children": []
                                },
                                {
                                    "type": "await",
                                    "start_token": 1153,
                                    "end_token": 1182,
                                    "label": "await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 1154,
                                            "end_token": 1184,
                                            "label": "wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1154,
                                                    "end_token": 1154,
                                                    "label": "wait_execution",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 1155,
                                                    "end_token": 1184,
                                                    "label": "(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 1157,
                                                            "end_token": 1161,
                                                            "label": "graph_id=test_graph.id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1157,
                                                                    "end_token": 1157,
                                                                    "label": "graph_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 1159,
                                                                    "end_token": 1161,
                                                                    "label": "test_graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1159,
                                                                            "end_token": 1159,
                                                                            "label": "test_graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1161,
                                                                            "end_token": 1161,
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 1163,
                                                            "end_token": 1169,
                                                            "label": "\n            graph_exec_id=response[\"id\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1164,
                                                                    "end_token": 1164,
                                                                    "label": "graph_exec_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 1166,
                                                                    "end_token": 1168,
                                                                    "label": "response[\"id\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 1170,
                                                            "end_token": 1175,
                                                            "label": ",\n            timeout=1200,",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1172,
                                                                    "end_token": 1172,
                                                                    "label": "timeout",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 1174,
                                                                    "end_token": 1174,
                                                                    "label": "1200",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 1176,
                                                            "end_token": 1182,
                                                            "label": "\n            user_id=test_user.id,",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1177,
                                                                    "end_token": 1177,
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 1179,
                                                                    "end_token": 1181,
                                                                    "label": "test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1179,
                                                                            "end_token": 1179,
                                                                            "label": "test_user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1181,
                                                                            "end_token": 1181,
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 1186,
                            "end_token": 1189,
                            "label": "print(result)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 1186,
                                    "end_token": 1189,
                                    "label": "print(result)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 1186,
                                            "end_token": 1186,
                                            "label": "print",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 1187,
                                            "end_token": 1189,
                                            "label": "(result)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1188,
                                                    "end_token": 1188,
                                                    "label": "result",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "block_autogen_agent",
            "start_line": 250,
            "end_line": 265
        },
        {
            "type": "if_statement",
            "start_token": 1193,
            "end_token": 1211,
            "label": "if __name__ == \"__main__\":\n    import asyncio\n\n    asyncio.run(block_autogen_agent())",
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 1193,
                    "end_token": 1197,
                    "label": "if __name__ == \"__main__\"",
                    "children": [
                        {
                            "type": "boolean_operator",
                            "start_token": 1194,
                            "end_token": 1196,
                            "label": "__name__ ==",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1194,
                                    "end_token": 1194,
                                    "label": "__name__",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 1196,
                                    "end_token": 1196,
                                    "label": "=",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 1198,
                    "end_token": 1211,
                    "label": ":\n    import asyncio\n\n    asyncio.run(block_autogen_agent())",
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 1200,
                            "end_token": 1201,
                            "label": "import asyncio",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1201,
                                    "end_token": 1201,
                                    "label": "asyncio",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 1204,
                            "end_token": 1211,
                            "label": "asyncio.run(block_autogen_agent())",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 1204,
                                    "end_token": 1211,
                                    "label": "asyncio.run(block_autogen_agent())",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 1204,
                                            "end_token": 1206,
                                            "label": "asyncio.run",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1204,
                                                    "end_token": 1204,
                                                    "label": "asyncio",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1206,
                                                    "end_token": 1206,
                                                    "label": "run",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 1207,
                                            "end_token": 1210,
                                            "label": "(block_autogen_agent()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 1208,
                                                    "end_token": 1209,
                                                    "label": "block_autogen_agent(",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 1208,
                                                            "end_token": 1208,
                                                            "label": "block_autogen_agent",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}