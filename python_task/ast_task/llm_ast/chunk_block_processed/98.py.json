{
    "type": "module",
    "start_token": 0,
    "end_token": 99,
    "label": "# -*- coding: utf-8 -*-\n\nimport unittest\n\nfrom validate.format import error_message\nfrom validate.format import get_categories_content\nfrom validate.format import check_alphabetical_order\nfrom validate.format import check_title\nfrom validate.format import check_description, max_description_length\nfrom validate.format import check_auth, auth_keys\nfrom validate.format import check_https, https_keys\nfrom validate.format import check_cors, cors_keys\nfrom validate.format import check_entry\nfrom validate.format import check_file_format, min_entries_per_category, num_segments\n",
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 11,
            "label": "# -*- coding: utf-8 -*-",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 14,
            "end_token": 15,
            "label": "import unittest",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 18,
            "end_token": 23,
            "label": "from validate.format import error_message",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 19,
                    "end_token": 21,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 22,
                    "end_token": 23,
                    "label": "import error_message",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 25,
            "end_token": 30,
            "label": "from validate.format import get_categories_content",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 26,
                    "end_token": 28,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 29,
                    "end_token": 30,
                    "label": "import get_categories_content",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 32,
            "end_token": 37,
            "label": "from validate.format import check_alphabetical_order",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 33,
                    "end_token": 35,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 36,
                    "end_token": 37,
                    "label": "import check_alphabetical_order",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 39,
            "end_token": 44,
            "label": "from validate.format import check_title",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 40,
                    "end_token": 42,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 43,
                    "end_token": 44,
                    "label": "import check_title",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 46,
            "end_token": 54,
            "label": "from validate.format import check_description, max_description_length\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 47,
                    "end_token": 49,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 51,
                    "end_token": 51,
                    "label": "check_description",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 53,
                    "end_token": 53,
                    "label": "max_description_length",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 55,
            "end_token": 63,
            "label": "from validate.format import check_auth, auth_keys\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 56,
                    "end_token": 58,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 60,
                    "end_token": 60,
                    "label": "check_auth",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 62,
                    "end_token": 62,
                    "label": "auth_keys",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 64,
            "end_token": 72,
            "label": "from validate.format import check_https, https_keys\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 65,
                    "end_token": 67,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 69,
                    "end_token": 69,
                    "label": "check_https",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 71,
                    "end_token": 71,
                    "label": "https_keys",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 73,
            "end_token": 81,
            "label": "from validate.format import check_cors, cors_keys\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 74,
                    "end_token": 76,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 78,
                    "end_token": 78,
                    "label": "check_cors",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 80,
                    "end_token": 80,
                    "label": "cors_keys",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 82,
            "end_token": 87,
            "label": "from validate.format import check_entry",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 83,
                    "end_token": 85,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 86,
                    "end_token": 87,
                    "label": "import check_entry",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 89,
            "end_token": 98,
            "label": "from validate.format import check_file_format, min_entries_per_category, num_segments",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 90,
                    "end_token": 92,
                    "label": "validate.format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 94,
                    "end_token": 94,
                    "label": "check_file_format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 96,
                    "end_token": 96,
                    "label": "min_entries_per_category",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 98,
                    "end_token": 98,
                    "label": "num_segments",
                    "children": []
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "TestValidadeFormat",
            "start_line": 17,
            "end_line": 466,
            "start_token": 102,
            "end_token": 1110,
            "label": "class TestValidadeFormat(unittest.TestCase):\n    \n    def test_error_message_return_and_return_type(self):\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')\n\n    def test_if_get_categories_content_return_correct_data_of_categories(self):\n        fake_contents = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        result = get_categories_content(fake_contents)\n        self.assertIsInstance(result, tuple)\n\n        categories, category_line_num = result\n        self.assertIsInstance(categories, dict)\n        self.assertIsInstance(category_line_num, dict)\n\n        expected_result = ({'A': ['AA', 'AB'], 'B': ['BA', 'BB']}, {'A': 0, 'B': 6})\n\n        for res, ex_res in zip(result, expected_result):\n\n            with self.subTest():\n                self.assertEqual(res, ex_res)\n\n    def test_if_check_alphabetical_order_return_correct_msg_error(self):\n        correct_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        incorrect_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n\n        err_msgs_1 = check_alphabetical_order(correct_lines)\n        err_msgs_2 = check_alphabetical_order(incorrect_lines)\n\n        self.assertIsInstance(err_msgs_1, list)\n        self.assertIsInstance(err_msgs_2, list)\n\n        self.assertEqual(len(err_msgs_1), 0)\n        self.assertEqual(len(err_msgs_2), 2)\n\n        expected_err_msgs = [\n            '(L001) A category is not alphabetical order',\n            '(L007) B category is not alphabetical order'\n        ]\n\n        for err_msg, ex_err_msg in zip(err_msgs_2, expected_err_msgs):\n\n            with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)\n    \n    def test_check_title_with_correct_title(self):\n        raw_title = '[A](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n    def test_check_title_with_markdown_syntax_incorrect(self):\n        raw_title = '[A(https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title syntax should be \"[TITLE](LINK)\"'\n\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_title_with_api_at_the_end_of_the_title(self):\n        raw_title = '[A API](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n        \n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title should not end with \"... API\". Every entry is an API here!'\n\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_description_with_correct_description(self):\n        desc = 'This is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n    \n    def test_check_description_with_first_char_is_not_capitalized(self):\n        desc = 'this is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) first character of description is not capitalized'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n    \n    def test_check_description_with_punctuation_in_the_end(self):\n        base_desc = 'This is a fake description'\n        punctuation = r\"\"\"!\"#$%&'*+,-./:;<=>?@[\\]^_`{|}~\"\"\"\n        desc_with_punc = [base_desc + punc for punc in punctuation]\n        \n        for desc in desc_with_punc:\n\n            with self.subTest():\n                err_msgs = check_description(0, desc)\n\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n        \n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) description should not end with {desc[-1]}'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_description_that_exceeds_the_character_limit(self):\n        long_desc = 'Desc' * max_description_length\n        long_desc_length = len(long_desc)\n\n        err_msgs = check_description(0, long_desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n\n        err_msg = err_msgs[0]\n        expected_err_msg = f'(L001) description should not exceed {max_description_length} characters (currently {long_desc_length})'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_valid_auth(self):\n        auth_valid = [f'`{auth}`' for auth in auth_keys if auth != 'No']\n        auth_valid.append('No')\n\n        for auth in auth_valid:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_auth_without_backtick(self):\n        auth_without_backtick = [auth for auth in auth_keys if auth != 'No']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['Yes', 'yes', 'no', 'random', 'Unknown']\n        auth_invalid_with_backtick = ['`Yes`', '`yes`', '`no`', '`random`', '`Unknown`']\n\n        for auth in auth_invalid_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 2)\n\n                err_msg_1 = err_msgs[0]\n                err_msg_2 = err_msgs[1]\n\n                expected_err_msg_1 = f'(L001) auth value is not enclosed with `backticks`'\n                expected_err_msg_2 = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg_1, str)\n                self.assertIsInstance(err_msg_2, str)\n                self.assertEqual(err_msg_1, expected_err_msg_1)\n                self.assertEqual(err_msg_2, expected_err_msg_2)\n\n        for auth in auth_invalid_with_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_https_with_valid_https(self):\n        for https in https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_https_with_invalid_https(self):\n        invalid_https_keys = ['yes', 'no', 'Unknown', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['yes', 'no', 'unknown', 'cors']\n\n        for cors in invalid_cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {cors} is not a valid CORS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_entry_with_correct_segments(self):\n        correct_segments = ['[A](https://www.ex.com)', 'Desc', '`apiKey`', 'Yes', 'Yes']\n\n        err_msgs = check_entry(0, correct_segments)\n        \n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n    def test_check_entry_with_incorrect_segments(self):\n        incorrect_segments = ['[A API](https://www.ex.com)', 'desc.', 'yes', 'yes', 'yes']\n\n        err_msgs = check_entry(0, incorrect_segments)\n        expected_err_msgs = [\n            '(L001) Title should not end with \"... API\". Every entry is an API here!',\n            '(L001) first character of description is not capitalized',\n            '(L001) description should not end with .',\n            '(L001) auth value is not enclosed with `backticks`',\n            '(L001) yes is not a valid Auth option',\n            '(L001) yes is not a valid HTTPS option',\n            '(L001) yes is not a valid CORS option'\n        ]\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 7)\n        for err_msg in err_msgs:\n            with self.subTest():\n                self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msgs, expected_err_msgs)\n\n    def test_check_file_format_with_correct_format(self):\n        correct_format = [\n            '## Index',\n            '* [A](#a)',\n            '* [B](#b)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        err_msgs = check_file_format(lines=correct_format)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n    def test_check_file_format_with_category_header_not_added_to_index(self):\n        incorrect_format = [\n            '## Index',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n        ]\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = '(L003) category header (A) not added to Index section'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_file_format_with_category_without_min_entries(self):\n        incorrect_format = [\n            '## Index',\n            '* [A](#a)',\n            '* [B](#b)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        category_with_err = 'A'\n        num_in_category = 1\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = f'(L005) {category_with_err} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_file_format_entry_without_all_necessary_columns(self):\n        incorrect_format = [\n            '## Index',\n            '* [A](#a)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` |',  # missing https and cors\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n        ]\n\n        current_segments_num = 3\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = f'(L008) entry does not have all the required columns (have {current_segments_num}, need {num_segments})'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_file_format_without_1_space_between_the_segments(self):\n        incorrect_format = [\n            '## Index',\n            '* [A](#a)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc |`apiKey`| Yes | Yes |',  # space between segment of auth column missing\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n        ]\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = f'(L007) each segment must start and end with exactly 1 space'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 102,
                    "end_token": 109,
                    "label": "class TestValidadeFormat(unittest.TestCase):",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": -1,
                            "end_token": 1110,
                            "label": "",
                            "children": [
                                {
                                    "type": "if_clause",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "comparison_operator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_entry_with_incorrect_segments",
                            "start_line": 326,
                            "end_line": 345
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_file_format_with_correct_format",
                            "start_line": 347,
                            "end_line": 372,
                            "start_token": -1,
                            "end_token": 1110,
                            "label": "",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "import_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "if_clause",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_file_format_with_category_header_not_added_to_index",
                            "start_line": 374,
                            "end_line": 392,
                            "start_token": -1,
                            "end_token": 1110,
                            "label": "",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "import_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "parameters",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "if_clause",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "else_clause",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": 1110,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "if_clause",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "boolean_operator",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "break_statement",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "else_clause",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_file_format_with_category_without_min_entries",
                            "start_line": 394,
                            "end_line": 422
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": 1110,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_file_format_entry_without_all_necessary_columns",
                            "start_line": 424,
                            "end_line": 445
                        },
                        {
                            "type": "function_definition",
                            "start_token": -1,
                            "end_token": 1110,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "if_clause",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_file_format_without_1_space_between_the_segments",
                            "start_line": 447,
                            "end_line": 466
                        },
                        {
                            "type": "class_definition",
                            "start_token": 102,
                            "end_token": 109,
                            "label": "class TestValidadeFormat(unittest.TestCase):",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 103,
                                    "end_token": 103,
                                    "label": "TestValidadeFormat",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 104,
                                    "end_token": 108,
                                    "label": "(unittest.TestCase)",
                                    "children": [
                                        {
                                            "type": "dotted_name",
                                            "start_token": 105,
                                            "end_token": 107,
                                            "label": "unittest.TestCase",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 105,
                                                    "end_token": 105,
                                                    "label": "unittest",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 107,
                                                    "end_token": 107,
                                                    "label": "TestCase",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 109,
                                    "end_token": 109,
                                    "label": ":",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 112,
                            "end_token": 250,
                            "label": "def test_error_message_return_and_return_type(self):\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 113,
                                    "end_token": 113,
                                    "label": "test_error_message_return_and_return_type",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 114,
                                    "end_token": 116,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 115,
                                            "end_token": 115,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 118,
                                    "end_token": 249,
                                    "label": "\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 119,
                                            "end_token": 121,
                                            "label": "line_num_unity = 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 119,
                                                    "end_token": 119,
                                                    "label": "line_num_unity",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 121,
                                                    "end_token": 121,
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 123,
                                            "end_token": 125,
                                            "label": "line_num_ten = 10",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 123,
                                                    "end_token": 123,
                                                    "label": "line_num_ten",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 125,
                                                    "end_token": 125,
                                                    "label": "10",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 127,
                                            "end_token": 129,
                                            "label": "line_num_hundred = 100",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 127,
                                                    "end_token": 127,
                                                    "label": "line_num_hundred",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 129,
                                                    "end_token": 129,
                                                    "label": "100",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 131,
                                            "end_token": 133,
                                            "label": "line_num_thousand = 1000",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 131,
                                                    "end_token": 131,
                                                    "label": "line_num_thousand",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 133,
                                                    "end_token": 133,
                                                    "label": "1000",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 136,
                                            "end_token": 138,
                                            "label": "msg = 'This is a unit test'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 136,
                                                    "end_token": 136,
                                                    "label": "msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 138,
                                                    "end_token": 138,
                                                    "label": "'This is a unit test'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 141,
                                            "end_token": 148,
                                            "label": "err_msg_unity = error_message(line_num_unity, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 141,
                                                    "end_token": 141,
                                                    "label": "err_msg_unity",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 143,
                                                    "end_token": 148,
                                                    "label": "error_message(line_num_unity, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 143,
                                                            "end_token": 143,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 144,
                                                            "end_token": 148,
                                                            "label": "(line_num_unity, msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 145,
                                                                    "end_token": 145,
                                                                    "label": "line_num_unity",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 147,
                                                                    "end_token": 147,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 150,
                                            "end_token": 157,
                                            "label": "err_msg_ten = error_message(line_num_ten, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 150,
                                                    "end_token": 150,
                                                    "label": "err_msg_ten",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 152,
                                                    "end_token": 157,
                                                    "label": "error_message(line_num_ten, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 152,
                                                            "end_token": 152,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 153,
                                                            "end_token": 157,
                                                            "label": "(line_num_ten, msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 154,
                                                                    "end_token": 154,
                                                                    "label": "line_num_ten",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 156,
                                                                    "end_token": 156,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 159,
                                            "end_token": 166,
                                            "label": "err_msg_hundred = error_message(line_num_hundred, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 159,
                                                    "end_token": 159,
                                                    "label": "err_msg_hundred",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 161,
                                                    "end_token": 166,
                                                    "label": "error_message(line_num_hundred, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 161,
                                                            "end_token": 161,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 162,
                                                            "end_token": 166,
                                                            "label": "(line_num_hundred, msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 163,
                                                                    "end_token": 163,
                                                                    "label": "line_num_hundred",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 165,
                                                                    "end_token": 165,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 168,
                                            "end_token": 175,
                                            "label": "err_msg_thousand = error_message(line_num_thousand, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 168,
                                                    "end_token": 168,
                                                    "label": "err_msg_thousand",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 170,
                                                    "end_token": 175,
                                                    "label": "error_message(line_num_thousand, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 170,
                                                            "end_token": 170,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 171,
                                                            "end_token": 175,
                                                            "label": "(line_num_thousand, msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 172,
                                                                    "end_token": 172,
                                                                    "label": "line_num_thousand",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 174,
                                                                    "end_token": 174,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 178,
                                            "end_token": 185,
                                            "label": "self.assertIsInstance(err_msg_unity, str)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 178,
                                                    "end_token": 185,
                                                    "label": "self.assertIsInstance(err_msg_unity, str)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 178,
                                                            "end_token": 180,
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 178,
                                                                    "end_token": 178,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 180,
                                                                    "end_token": 180,
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 181,
                                                            "end_token": 185,
                                                            "label": "(err_msg_unity, str)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 182,
                                                                    "end_token": 182,
                                                                    "label": "err_msg_unity",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 184,
                                                                    "end_token": 184,
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 187,
                                            "end_token": 194,
                                            "label": "self.assertIsInstance(err_msg_ten, str)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 187,
                                                    "end_token": 194,
                                                    "label": "self.assertIsInstance(err_msg_ten, str)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 187,
                                                            "end_token": 189,
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 187,
                                                                    "end_token": 187,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 189,
                                                                    "end_token": 189,
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 190,
                                                            "end_token": 194,
                                                            "label": "(err_msg_ten, str)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 191,
                                                                    "end_token": 191,
                                                                    "label": "err_msg_ten",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 193,
                                                                    "end_token": 193,
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 196,
                                            "end_token": 203,
                                            "label": "self.assertIsInstance(err_msg_hundred, str)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 196,
                                                    "end_token": 203,
                                                    "label": "self.assertIsInstance(err_msg_hundred, str)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 196,
                                                            "end_token": 198,
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 196,
                                                                    "end_token": 196,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 198,
                                                                    "end_token": 198,
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 199,
                                                            "end_token": 203,
                                                            "label": "(err_msg_hundred, str)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 200,
                                                                    "end_token": 200,
                                                                    "label": "err_msg_hundred",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 202,
                                                                    "end_token": 202,
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 205,
                                            "end_token": 212,
                                            "label": "self.assertIsInstance(err_msg_thousand, str)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 205,
                                                    "end_token": 212,
                                                    "label": "self.assertIsInstance(err_msg_thousand, str)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 205,
                                                            "end_token": 207,
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 205,
                                                                    "end_token": 205,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 207,
                                                                    "end_token": 207,
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 208,
                                                            "end_token": 212,
                                                            "label": "(err_msg_thousand, str)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 209,
                                                                    "end_token": 209,
                                                                    "label": "err_msg_thousand",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 211,
                                                                    "end_token": 211,
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 215,
                                            "end_token": 222,
                                            "label": "self.assertEqual(err_msg_unity, '(L002) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 215,
                                                    "end_token": 222,
                                                    "label": "self.assertEqual(err_msg_unity, '(L002) This is a unit test')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 215,
                                                            "end_token": 217,
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 215,
                                                                    "end_token": 215,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 217,
                                                                    "end_token": 217,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 218,
                                                            "end_token": 222,
                                                            "label": "(err_msg_unity, '(L002) This is a unit test')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 219,
                                                                    "end_token": 219,
                                                                    "label": "err_msg_unity",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 221,
                                                                    "end_token": 221,
                                                                    "label": "'(L002) This is a unit test'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 224,
                                            "end_token": 231,
                                            "label": "self.assertEqual(err_msg_ten, '(L011) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 224,
                                                    "end_token": 231,
                                                    "label": "self.assertEqual(err_msg_ten, '(L011) This is a unit test')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 224,
                                                            "end_token": 226,
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 224,
                                                                    "end_token": 224,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 226,
                                                                    "end_token": 226,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 227,
                                                            "end_token": 231,
                                                            "label": "(err_msg_ten, '(L011) This is a unit test')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 228,
                                                                    "end_token": 228,
                                                                    "label": "err_msg_ten",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 230,
                                                                    "end_token": 230,
                                                                    "label": "'(L011) This is a unit test'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 233,
                                            "end_token": 240,
                                            "label": "self.assertEqual(err_msg_hundred, '(L101) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 233,
                                                    "end_token": 240,
                                                    "label": "self.assertEqual(err_msg_hundred, '(L101) This is a unit test')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 233,
                                                            "end_token": 235,
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 233,
                                                                    "end_token": 233,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 235,
                                                                    "end_token": 235,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 236,
                                                            "end_token": 240,
                                                            "label": "(err_msg_hundred, '(L101) This is a unit test')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 237,
                                                                    "end_token": 237,
                                                                    "label": "err_msg_hundred",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 239,
                                                                    "end_token": 239,
                                                                    "label": "'(L101) This is a unit test'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 242,
                                            "end_token": 249,
                                            "label": "self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 242,
                                                    "end_token": 249,
                                                    "label": "self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 242,
                                                            "end_token": 244,
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 242,
                                                                    "end_token": 242,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 244,
                                                                    "end_token": 244,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 245,
                                                            "end_token": 249,
                                                            "label": "(err_msg_thousand, '(L1001) This is a unit test')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 246,
                                                                    "end_token": 246,
                                                                    "label": "err_msg_thousand",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 248,
                                                                    "end_token": 248,
                                                                    "label": "'(L1001) This is a unit test'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_error_message_return_and_return_type",
                            "start_line": 19,
                            "end_line": 40
                        },
                        {
                            "type": "function_definition",
                            "start_token": 252,
                            "end_token": 404,
                            "label": "def test_if_get_categories_content_return_correct_data_of_categories(self):\n        fake_contents = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        result = get_categories_content(fake_contents)\n        self.assertIsInstance(result, tuple)\n\n        categories, category_line_num = result\n        self.assertIsInstance(categories, dict)\n        self.assertIsInstance(category_line_num, dict)\n\n        expected_result = ({'A': ['AA', 'AB'], 'B': ['BA', 'BB']}, {'A': 0, 'B': 6})\n\n        for res, ex_res in zip(result, expected_result):\n\n            with self.subTest():\n                self.assertEqual(res, ex_res)\n\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 253,
                                    "end_token": 253,
                                    "label": "test_if_get_categories_content_return_correct_data_of_categories",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 254,
                                    "end_token": 256,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 255,
                                            "end_token": 255,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 258,
                                    "end_token": 403,
                                    "label": "\n        fake_contents = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        result = get_categories_content(fake_contents)\n        self.assertIsInstance(result, tuple)\n\n        categories, category_line_num = result\n        self.assertIsInstance(categories, dict)\n        self.assertIsInstance(category_line_num, dict)\n\n        expected_result = ({'A': ['AA', 'AB'], 'B': ['BA', 'BB']}, {'A': 0, 'B': 6})\n\n        for res, ex_res in zip(result, expected_result):\n\n            with self.subTest():\n                self.assertEqual(res, ex_res)\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 259,
                                            "end_token": 295,
                                            "label": "fake_contents = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 259,
                                                    "end_token": 259,
                                                    "label": "fake_contents",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 261,
                                                    "end_token": 295,
                                                    "label": "[\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 263,
                                                            "end_token": 263,
                                                            "label": "'### A'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 266,
                                                            "end_token": 266,
                                                            "label": "'API | Description | Auth | HTTPS | CORS |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 269,
                                                            "end_token": 269,
                                                            "label": "'|---|---|---|---|---|'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 272,
                                                            "end_token": 272,
                                                            "label": "'| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 275,
                                                            "end_token": 275,
                                                            "label": "'| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 278,
                                                            "end_token": 278,
                                                            "label": "''",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 281,
                                                            "end_token": 281,
                                                            "label": "'### B'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 284,
                                                            "end_token": 284,
                                                            "label": "'API | Description | Auth | HTTPS | CORS |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 287,
                                                            "end_token": 287,
                                                            "label": "'|---|---|---|---|---|'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 290,
                                                            "end_token": 290,
                                                            "label": "'| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 293,
                                                            "end_token": 293,
                                                            "label": "'| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 298,
                                            "end_token": 303,
                                            "label": "result = get_categories_content(fake_contents)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 298,
                                                    "end_token": 298,
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 300,
                                                    "end_token": 303,
                                                    "label": "get_categories_content(fake_contents)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 300,
                                                            "end_token": 300,
                                                            "label": "get_categories_content",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 301,
                                                            "end_token": 303,
                                                            "label": "(fake_contents)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 302,
                                                                    "end_token": 302,
                                                                    "label": "fake_contents",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 305,
                                            "end_token": 312,
                                            "label": "self.assertIsInstance(result, tuple)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 307,
                                                    "end_token": 312,
                                                    "label": "assertIsInstance(result, tuple)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 307,
                                                            "end_token": 307,
                                                            "label": "assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 305,
                                                                    "end_token": 305,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 306,
                                                                    "end_token": 306,
                                                                    "label": ".",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 308,
                                                            "end_token": 312,
                                                            "label": "(result, tuple)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 309,
                                                                    "end_token": 309,
                                                                    "label": "result",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 311,
                                                                    "end_token": 311,
                                                                    "label": "tuple",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 315,
                                            "end_token": 320,
                                            "label": "categories, category_line_num = result\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 315,
                                                    "end_token": 317,
                                                    "label": "categories, category_line_num",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 319,
                                                    "end_token": 319,
                                                    "label": "result",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 321,
                                            "end_token": 328,
                                            "label": "self.assertIsInstance(categories, dict)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 323,
                                                    "end_token": 328,
                                                    "label": "assertIsInstance(categories, dict)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 323,
                                                            "end_token": 323,
                                                            "label": "assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 321,
                                                                    "end_token": 321,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 322,
                                                                    "end_token": 322,
                                                                    "label": ".",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 324,
                                                            "end_token": 328,
                                                            "label": "(categories, dict)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 325,
                                                                    "end_token": 325,
                                                                    "label": "categories",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 327,
                                                                    "end_token": 327,
                                                                    "label": "dict",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 330,
                                            "end_token": 337,
                                            "label": "self.assertIsInstance(category_line_num, dict)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 332,
                                                    "end_token": 337,
                                                    "label": "assertIsInstance(category_line_num, dict)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 332,
                                                            "end_token": 332,
                                                            "label": "assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 330,
                                                                    "end_token": 330,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 331,
                                                                    "end_token": 331,
                                                                    "label": ".",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 333,
                                                            "end_token": 337,
                                                            "label": "(category_line_num, dict)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 334,
                                                                    "end_token": 334,
                                                                    "label": "category_line_num",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 336,
                                                                    "end_token": 336,
                                                                    "label": "dict",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 340,
                                            "end_token": 370,
                                            "label": "expected_result = ({'A': ['AA', 'AB'], 'B': ['BA', 'BB']}, {'A': 0, 'B': 6})",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 340,
                                                    "end_token": 340,
                                                    "label": "expected_result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "tuple",
                                                    "start_token": 342,
                                                    "end_token": 370,
                                                    "label": "({'A': ['AA', 'AB'], 'B': ['BA', 'BB']}, {'A': 0, 'B': 6})",
                                                    "children": [
                                                        {
                                                            "type": "dictionary",
                                                            "start_token": 343,
                                                            "end_token": 359,
                                                            "label": "{'A': ['AA', 'AB'], 'B': ['BA', 'BB']}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 344,
                                                                    "end_token": 350,
                                                                    "label": "'A': ['AA', 'AB']",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 344,
                                                                            "end_token": 344,
                                                                            "label": "'A'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "start_token": 346,
                                                                            "end_token": 350,
                                                                            "label": "['AA', 'AB']",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 347,
                                                                                    "end_token": 347,
                                                                                    "label": "'AA'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 349,
                                                                                    "end_token": 349,
                                                                                    "label": "'AB'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 352,
                                                                    "end_token": 358,
                                                                    "label": "'B': ['BA', 'BB']",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 352,
                                                                            "end_token": 352,
                                                                            "label": "'B'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "start_token": 354,
                                                                            "end_token": 358,
                                                                            "label": "['BA', 'BB']",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 355,
                                                                                    "end_token": 355,
                                                                                    "label": "'BA'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 357,
                                                                                    "end_token": 357,
                                                                                    "label": "'BB'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "dictionary",
                                                            "start_token": 361,
                                                            "end_token": 369,
                                                            "label": "{'A': 0, 'B': 6}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 362,
                                                                    "end_token": 365,
                                                                    "label": "'A': 0,",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 362,
                                                                            "end_token": 362,
                                                                            "label": "'A'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 364,
                                                                            "end_token": 364,
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 366,
                                                                    "end_token": 368,
                                                                    "label": "'B': 6",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 366,
                                                                            "end_token": 366,
                                                                            "label": "'B'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 368,
                                                                            "end_token": 368,
                                                                            "label": "6",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 373,
                                            "end_token": 402,
                                            "label": "for res, ex_res in zip(result, expected_result):\n\n            with self.subTest():\n                self.assertEqual(res, ex_res)",
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": 373,
                                                    "end_token": 383,
                                                    "label": "for res, ex_res in zip(result, expected_result)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 374,
                                                            "end_token": 376,
                                                            "label": "res, ex_res",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 378,
                                                            "end_token": 383,
                                                            "label": "zip(result, expected_result)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 378,
                                                                    "end_token": 378,
                                                                    "label": "zip",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 379,
                                                                    "end_token": 383,
                                                                    "label": "(result, expected_result)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 380,
                                                                            "end_token": 380,
                                                                            "label": "result",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 382,
                                                                            "end_token": 382,
                                                                            "label": "expected_result",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 385,
                                                    "end_token": 402,
                                                    "label": "\n\n            with self.subTest():\n                self.assertEqual(res, ex_res)",
                                                    "children": [
                                                        {
                                                            "type": "with_statement",
                                                            "start_token": 387,
                                                            "end_token": 401,
                                                            "label": "with self.subTest():\n                self.assertEqual(res, ex_res",
                                                            "children": [
                                                                {
                                                                    "type": "with_clause",
                                                                    "start_token": 387,
                                                                    "end_token": 392,
                                                                    "label": "with self.subTest()",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 393,
                                                                    "end_token": 401,
                                                                    "label": ":\n                self.assertEqual(res, ex_res",
                                                                    "children": [
                                                                        {
                                                                            "type": "assert_statement",
                                                                            "start_token": 395,
                                                                            "end_token": 401,
                                                                            "label": "self.assertEqual(res, ex_res",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 397,
                                                                                    "end_token": 401,
                                                                                    "label": "assertEqual(res, ex_res",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "start_token": 397,
                                                                                            "end_token": 397,
                                                                                            "label": "assertEqual",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 395,
                                                                                                    "end_token": 395,
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 396,
                                                                                                    "end_token": 396,
                                                                                                    "label": ".",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 398,
                                                                                            "end_token": 401,
                                                                                            "label": "(res, ex_res",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 399,
                                                                                                    "end_token": 399,
                                                                                                    "label": "res",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 401,
                                                                                                    "end_token": 401,
                                                                                                    "label": "ex_res",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_if_get_categories_content_return_correct_data_of_categories",
                            "start_line": 42,
                            "end_line": 70
                        },
                        {
                            "type": "function_definition",
                            "start_token": 405,
                            "end_token": 593,
                            "label": "def test_if_check_alphabetical_order_return_correct_msg_error(self):\n        correct_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        incorrect_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n\n        err_msgs_1 = check_alphabetical_order(correct_lines)\n        err_msgs_2 = check_alphabetical_order(incorrect_lines)\n\n        self.assertIsInstance(err_msgs_1, list)\n        self.assertIsInstance(err_msgs_2, list)\n\n        self.assertEqual(len(err_msgs_1), 0)\n        self.assertEqual(len(err_msgs_2), 2)\n\n        expected_err_msgs = [\n            '(L001) A category is not alphabetical order',\n            '(L007) B category is not alphabetical order'\n        ]\n\n        for err_msg, ex_err_msg in zip(err_msgs_2, expected_err_msgs):\n\n            with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)\n    \n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 406,
                                    "end_token": 406,
                                    "label": "test_if_check_alphabetical_order_return_correct_msg_error",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 407,
                                    "end_token": 409,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 408,
                                            "end_token": 408,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 411,
                                    "end_token": 592,
                                    "label": "\n        correct_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        incorrect_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n\n        err_msgs_1 = check_alphabetical_order(correct_lines)\n        err_msgs_2 = check_alphabetical_order(incorrect_lines)\n\n        self.assertIsInstance(err_msgs_1, list)\n        self.assertIsInstance(err_msgs_2, list)\n\n        self.assertEqual(len(err_msgs_1), 0)\n        self.assertEqual(len(err_msgs_2), 2)\n\n        expected_err_msgs = [\n            '(L001) A category is not alphabetical order',\n            '(L007) B category is not alphabetical order'\n        ]\n\n        for err_msg, ex_err_msg in zip(err_msgs_2, expected_err_msgs):\n\n            with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 412,
                                            "end_token": 448,
                                            "label": "correct_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 412,
                                                    "end_token": 412,
                                                    "label": "correct_lines",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 414,
                                                    "end_token": 448,
                                                    "label": "[\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 416,
                                                            "end_token": 416,
                                                            "label": "'### A'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 419,
                                                            "end_token": 419,
                                                            "label": "'API | Description | Auth | HTTPS | CORS |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 422,
                                                            "end_token": 422,
                                                            "label": "'|---|---|---|---|---|'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 425,
                                                            "end_token": 425,
                                                            "label": "'| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 428,
                                                            "end_token": 428,
                                                            "label": "'| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 431,
                                                            "end_token": 431,
                                                            "label": "''",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 434,
                                                            "end_token": 434,
                                                            "label": "'### B'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 437,
                                                            "end_token": 437,
                                                            "label": "'API | Description | Auth | HTTPS | CORS |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 440,
                                                            "end_token": 440,
                                                            "label": "'|---|---|---|---|---|'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 443,
                                                            "end_token": 443,
                                                            "label": "'| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 446,
                                                            "end_token": 446,
                                                            "label": "'| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 451,
                                            "end_token": 487,
                                            "label": "incorrect_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 451,
                                                    "end_token": 451,
                                                    "label": "incorrect_lines",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 453,
                                                    "end_token": 487,
                                                    "label": "[\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 455,
                                                            "end_token": 455,
                                                            "label": "'### A'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 458,
                                                            "end_token": 458,
                                                            "label": "'API | Description | Auth | HTTPS | CORS |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 461,
                                                            "end_token": 461,
                                                            "label": "'|---|---|---|---|---|'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 464,
                                                            "end_token": 464,
                                                            "label": "'| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 467,
                                                            "end_token": 467,
                                                            "label": "'| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 470,
                                                            "end_token": 470,
                                                            "label": "''",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 473,
                                                            "end_token": 473,
                                                            "label": "'### B'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 476,
                                                            "end_token": 476,
                                                            "label": "'API | Description | Auth | HTTPS | CORS |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 479,
                                                            "end_token": 479,
                                                            "label": "'|---|---|---|---|---|'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 482,
                                                            "end_token": 482,
                                                            "label": "'| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 485,
                                                            "end_token": 485,
                                                            "label": "'| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 491,
                                            "end_token": 496,
                                            "label": "err_msgs_1 = check_alphabetical_order(correct_lines)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 491,
                                                    "end_token": 491,
                                                    "label": "err_msgs_1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 493,
                                                    "end_token": 496,
                                                    "label": "check_alphabetical_order(correct_lines)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 493,
                                                            "end_token": 493,
                                                            "label": "check_alphabetical_order",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 494,
                                                            "end_token": 496,
                                                            "label": "(correct_lines)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 495,
                                                                    "end_token": 495,
                                                                    "label": "correct_lines",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 498,
                                            "end_token": 503,
                                            "label": "err_msgs_2 = check_alphabetical_order(incorrect_lines)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 498,
                                                    "end_token": 498,
                                                    "label": "err_msgs_2",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 500,
                                                    "end_token": 503,
                                                    "label": "check_alphabetical_order(incorrect_lines)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 500,
                                                            "end_token": 500,
                                                            "label": "check_alphabetical_order",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 501,
                                                            "end_token": 503,
                                                            "label": "(incorrect_lines)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 502,
                                                                    "end_token": 502,
                                                                    "label": "incorrect_lines",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 506,
                                            "end_token": 513,
                                            "label": "self.assertIsInstance(err_msgs_1, list)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 506,
                                                    "end_token": 508,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 506,
                                                            "end_token": 506,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 508,
                                                            "end_token": 508,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 509,
                                                    "end_token": 513,
                                                    "label": "(err_msgs_1, list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 510,
                                                            "end_token": 510,
                                                            "label": "err_msgs_1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 512,
                                                            "end_token": 512,
                                                            "label": "list",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 515,
                                            "end_token": 522,
                                            "label": "self.assertIsInstance(err_msgs_2, list)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 515,
                                                    "end_token": 517,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 515,
                                                            "end_token": 515,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 517,
                                                            "end_token": 517,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 518,
                                                    "end_token": 522,
                                                    "label": "(err_msgs_2, list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 519,
                                                            "end_token": 519,
                                                            "label": "err_msgs_2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 521,
                                                            "end_token": 521,
                                                            "label": "list",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 525,
                                            "end_token": 535,
                                            "label": "self.assertEqual(len(err_msgs_1), 0)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 525,
                                                    "end_token": 527,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 525,
                                                            "end_token": 525,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 527,
                                                            "end_token": 527,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 528,
                                                    "end_token": 535,
                                                    "label": "(len(err_msgs_1), 0)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 529,
                                                            "end_token": 532,
                                                            "label": "len(err_msgs_1)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 529,
                                                                    "end_token": 529,
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 530,
                                                                    "end_token": 532,
                                                                    "label": "(err_msgs_1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 531,
                                                                            "end_token": 531,
                                                                            "label": "err_msgs_1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 534,
                                                            "end_token": 534,
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 537,
                                            "end_token": 547,
                                            "label": "self.assertEqual(len(err_msgs_2), 2)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 537,
                                                    "end_token": 539,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 537,
                                                            "end_token": 537,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 539,
                                                            "end_token": 539,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 540,
                                                    "end_token": 547,
                                                    "label": "(len(err_msgs_2), 2)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 541,
                                                            "end_token": 544,
                                                            "label": "len(err_msgs_2)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 541,
                                                                    "end_token": 541,
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 542,
                                                                    "end_token": 544,
                                                                    "label": "(err_msgs_2)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 543,
                                                                            "end_token": 543,
                                                                            "label": "err_msgs_2",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 546,
                                                            "end_token": 546,
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 550,
                                            "end_token": 559,
                                            "label": "expected_err_msgs = [\n            '(L001) A category is not alphabetical order',\n            '(L007) B category is not alphabetical order'\n        ]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 550,
                                                    "end_token": 550,
                                                    "label": "expected_err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 552,
                                                    "end_token": 559,
                                                    "label": "[\n            '(L001) A category is not alphabetical order',\n            '(L007) B category is not alphabetical order'\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 554,
                                                            "end_token": 554,
                                                            "label": "'(L001) A category is not alphabetical order'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 557,
                                                            "end_token": 557,
                                                            "label": "'(L007) B category is not alphabetical order'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 562,
                                            "end_token": 591,
                                            "label": "for err_msg, ex_err_msg in zip(err_msgs_2, expected_err_msgs):\n\n            with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)",
                                            "children": [
                                                {
                                                    "type": "pattern_list",
                                                    "start_token": 563,
                                                    "end_token": 565,
                                                    "label": "err_msg, ex_err_msg",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 563,
                                                            "end_token": 563,
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 565,
                                                            "end_token": 565,
                                                            "label": "ex_err_msg",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 566,
                                                    "end_token": 572,
                                                    "label": "in zip(err_msgs_2, expected_err_msgs)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 567,
                                                            "end_token": 571,
                                                            "label": "zip(err_msgs_2, expected_err_msgs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 567,
                                                                    "end_token": 567,
                                                                    "label": "zip",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 568,
                                                                    "end_token": 571,
                                                                    "label": "(err_msgs_2, expected_err_msgs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 569,
                                                                            "end_token": 569,
                                                                            "label": "err_msgs_2",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 571,
                                                                            "end_token": 571,
                                                                            "label": "expected_err_msgs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 573,
                                                    "end_token": 591,
                                                    "label": ":\n\n            with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "with_statement",
                                                            "start_token": 576,
                                                            "end_token": 591,
                                                            "label": "with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "with_item",
                                                                    "start_token": 577,
                                                                    "end_token": 577,
                                                                    "label": "self",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 577,
                                                                            "end_token": 577,
                                                                            "label": "self",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 578,
                                                                    "end_token": 591,
                                                                    "label": ".subTest():\n                self.assertEqual(err_msg, ex_err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 584,
                                                                            "end_token": 591,
                                                                            "label": "self.assertEqual(err_msg, ex_err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 584,
                                                                                    "end_token": 586,
                                                                                    "label": "self.assertEqual",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 584,
                                                                                            "end_token": 584,
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 586,
                                                                                            "end_token": 586,
                                                                                            "label": "assertEqual",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 587,
                                                                                    "end_token": 591,
                                                                                    "label": "(err_msg, ex_err_msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 588,
                                                                                            "end_token": 588,
                                                                                            "label": "err_msg",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 590,
                                                                                            "end_token": 590,
                                                                                            "label": "ex_err_msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_if_check_alphabetical_order_return_correct_msg_error",
                            "start_line": 71,
                            "end_line": 119
                        },
                        {
                            "type": "function_definition",
                            "start_token": 594,
                            "end_token": 647,
                            "label": "def test_check_title_with_correct_title(self):\n        raw_title = '[A](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 595,
                                    "end_token": 595,
                                    "label": "test_check_title_with_correct_title",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 596,
                                    "end_token": 598,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 597,
                                            "end_token": 597,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 600,
                                    "end_token": 645,
                                    "label": "\n        raw_title = '[A](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 601,
                                            "end_token": 603,
                                            "label": "raw_title = '[A](https://www.ex.com)'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 601,
                                                    "end_token": 601,
                                                    "label": "raw_title",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 603,
                                                    "end_token": 603,
                                                    "label": "'[A](https://www.ex.com)'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 606,
                                            "end_token": 613,
                                            "label": "err_msgs = check_title(0, raw_title)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 606,
                                                    "end_token": 606,
                                                    "label": "err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 608,
                                                    "end_token": 613,
                                                    "label": "check_title(0, raw_title)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 608,
                                                            "end_token": 608,
                                                            "label": "check_title",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 609,
                                                            "end_token": 613,
                                                            "label": "(0, raw_title)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 610,
                                                                    "end_token": 610,
                                                                    "label": "0",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 612,
                                                                    "end_token": 612,
                                                                    "label": "raw_title",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 616,
                                            "end_token": 623,
                                            "label": "self.assertIsInstance(err_msgs, list)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 618,
                                                    "end_token": 623,
                                                    "label": "assertIsInstance(err_msgs, list)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 616,
                                                            "end_token": 618,
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 616,
                                                                    "end_token": 616,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 618,
                                                                    "end_token": 618,
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 619,
                                                            "end_token": 623,
                                                            "label": "(err_msgs, list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 620,
                                                                    "end_token": 620,
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 622,
                                                                    "end_token": 622,
                                                                    "label": "list",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 625,
                                            "end_token": 635,
                                            "label": "self.assertEqual(len(err_msgs), 0)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 627,
                                                    "end_token": 635,
                                                    "label": "assertEqual(len(err_msgs), 0)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 625,
                                                            "end_token": 627,
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 625,
                                                                    "end_token": 625,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 627,
                                                                    "end_token": 627,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 628,
                                                            "end_token": 635,
                                                            "label": "(len(err_msgs), 0)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 629,
                                                                    "end_token": 632,
                                                                    "label": "len(err_msgs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 629,
                                                                            "end_token": 629,
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 630,
                                                                            "end_token": 632,
                                                                            "label": "(err_msgs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 631,
                                                                                    "end_token": 631,
                                                                                    "label": "err_msgs",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 634,
                                                                    "end_token": 634,
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 637,
                                            "end_token": 645,
                                            "label": "self.assertEqual(err_msgs, [])",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 639,
                                                    "end_token": 645,
                                                    "label": "assertEqual(err_msgs, [])",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 637,
                                                            "end_token": 639,
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 637,
                                                                    "end_token": 637,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 639,
                                                                    "end_token": 639,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 640,
                                                            "end_token": 645,
                                                            "label": "(err_msgs, [])",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 641,
                                                                    "end_token": 641,
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 643,
                                                                    "end_token": 644,
                                                                    "label": "[]",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_title_with_correct_title",
                            "start_line": 120,
                            "end_line": 128
                        },
                        {
                            "type": "function_definition",
                            "start_token": 648,
                            "end_token": 712,
                            "label": "def test_check_title_with_markdown_syntax_incorrect(self):\n        raw_title = '[A(https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title syntax should be \"[TITLE](LINK)\"'\n\n        self.assertEqual(err_msg, expected_err_msg)\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 649,
                                    "end_token": 649,
                                    "label": "test_check_title_with_markdown_syntax_incorrect",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 650,
                                    "end_token": 652,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 651,
                                            "end_token": 651,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 654,
                                    "end_token": 711,
                                    "label": "\n        raw_title = '[A(https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title syntax should be \"[TITLE](LINK)\"'\n\n        self.assertEqual(err_msg, expected_err_msg)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 655,
                                            "end_token": 657,
                                            "label": "raw_title = '[A(https://www.ex.com)'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 655,
                                                    "end_token": 655,
                                                    "label": "raw_title",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 657,
                                                    "end_token": 657,
                                                    "label": "'[A(https://www.ex.com)'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 660,
                                            "end_token": 667,
                                            "label": "err_msgs = check_title(0, raw_title)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 660,
                                                    "end_token": 660,
                                                    "label": "err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 662,
                                                    "end_token": 667,
                                                    "label": "check_title(0, raw_title)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 662,
                                                            "end_token": 662,
                                                            "label": "check_title",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 663,
                                                            "end_token": 667,
                                                            "label": "(0, raw_title)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 664,
                                                                    "end_token": 664,
                                                                    "label": "0",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 666,
                                                                    "end_token": 666,
                                                                    "label": "raw_title",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 670,
                                            "end_token": 677,
                                            "label": "self.assertIsInstance(err_msgs, list)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 672,
                                                    "end_token": 677,
                                                    "label": "assertIsInstance(err_msgs, list)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 670,
                                                            "end_token": 671,
                                                            "label": "self.",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 670,
                                                                    "end_token": 670,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 672,
                                                                    "end_token": 672,
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 673,
                                                            "end_token": 677,
                                                            "label": "(err_msgs, list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 674,
                                                                    "end_token": 674,
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 676,
                                                                    "end_token": 676,
                                                                    "label": "list",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 679,
                                            "end_token": 689,
                                            "label": "self.assertEqual(len(err_msgs), 1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 681,
                                                    "end_token": 689,
                                                    "label": "assertEqual(len(err_msgs), 1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 679,
                                                            "end_token": 680,
                                                            "label": "self.",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 679,
                                                                    "end_token": 679,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 681,
                                                                    "end_token": 681,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 682,
                                                            "end_token": 689,
                                                            "label": "(len(err_msgs), 1)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 683,
                                                                    "end_token": 686,
                                                                    "label": "len(err_msgs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 683,
                                                                            "end_token": 683,
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 684,
                                                                            "end_token": 686,
                                                                            "label": "(err_msgs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 685,
                                                                                    "end_token": 685,
                                                                                    "label": "err_msgs",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 688,
                                                                    "end_token": 688,
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 692,
                                            "end_token": 697,
                                            "label": "err_msg = err_msgs[0]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 692,
                                                    "end_token": 692,
                                                    "label": "err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "subscript",
                                                    "start_token": 694,
                                                    "end_token": 697,
                                                    "label": "err_msgs[0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 694,
                                                            "end_token": 694,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 696,
                                                            "end_token": 696,
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 699,
                                            "end_token": 701,
                                            "label": "expected_err_msg = '(L001) Title syntax should be \"[TITLE](LINK)\"'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 699,
                                                    "end_token": 699,
                                                    "label": "expected_err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 701,
                                                    "end_token": 701,
                                                    "label": "'(L001) Title syntax should be \"[TITLE](LINK)\"'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 704,
                                            "end_token": 711,
                                            "label": "self.assertEqual(err_msg, expected_err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 706,
                                                    "end_token": 711,
                                                    "label": "assertEqual(err_msg, expected_err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 704,
                                                            "end_token": 705,
                                                            "label": "self.",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 704,
                                                                    "end_token": 704,
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 706,
                                                                    "end_token": 706,
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 707,
                                                            "end_token": 711,
                                                            "label": "(err_msg, expected_err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 708,
                                                                    "end_token": 708,
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 710,
                                                                    "end_token": 710,
                                                                    "label": "expected_err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_title_with_markdown_syntax_incorrect",
                            "start_line": 129,
                            "end_line": 140
                        },
                        {
                            "type": "function_definition",
                            "start_token": 714,
                            "end_token": 778,
                            "label": "def test_check_title_with_api_at_the_end_of_the_title(self):\n        raw_title = '[A API](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n        \n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title should not end with \"... API\". Every entry is an API here!'\n\n        self.assertEqual(err_msg, expected_err_msg)\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 715,
                                    "end_token": 715,
                                    "label": "test_check_title_with_api_at_the_end_of_the_title",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 716,
                                    "end_token": 718,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 717,
                                            "end_token": 717,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 720,
                                    "end_token": 777,
                                    "label": "\n        raw_title = '[A API](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n        \n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title should not end with \"... API\". Every entry is an API here!'\n\n        self.assertEqual(err_msg, expected_err_msg)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 721,
                                            "end_token": 723,
                                            "label": "raw_title = '[A API](https://www.ex.com)'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 721,
                                                    "end_token": 721,
                                                    "label": "raw_title",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 723,
                                                    "end_token": 723,
                                                    "label": "'[A API](https://www.ex.com)'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 726,
                                            "end_token": 733,
                                            "label": "err_msgs = check_title(0, raw_title)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 726,
                                                    "end_token": 726,
                                                    "label": "err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 728,
                                                    "end_token": 733,
                                                    "label": "check_title(0, raw_title)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 728,
                                                            "end_token": 728,
                                                            "label": "check_title",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 729,
                                                            "end_token": 733,
                                                            "label": "(0, raw_title)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 730,
                                                                    "end_token": 730,
                                                                    "label": "0",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 732,
                                                                    "end_token": 732,
                                                                    "label": "raw_title",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 736,
                                            "end_token": 743,
                                            "label": "self.assertIsInstance(err_msgs, list)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 736,
                                                    "end_token": 738,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 736,
                                                            "end_token": 736,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 738,
                                                            "end_token": 738,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 739,
                                                    "end_token": 743,
                                                    "label": "(err_msgs, list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 740,
                                                            "end_token": 740,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 742,
                                                            "end_token": 742,
                                                            "label": "list",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 745,
                                            "end_token": 755,
                                            "label": "self.assertEqual(len(err_msgs), 1)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 745,
                                                    "end_token": 747,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 745,
                                                            "end_token": 745,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 747,
                                                            "end_token": 747,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 748,
                                                    "end_token": 755,
                                                    "label": "(len(err_msgs), 1)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 749,
                                                            "end_token": 752,
                                                            "label": "len(err_msgs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 749,
                                                                    "end_token": 749,
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 750,
                                                                    "end_token": 752,
                                                                    "label": "(err_msgs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 751,
                                                                            "end_token": 751,
                                                                            "label": "err_msgs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 754,
                                                            "end_token": 754,
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 758,
                                            "end_token": 763,
                                            "label": "err_msg = err_msgs[0]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 758,
                                                    "end_token": 758,
                                                    "label": "err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "subscript",
                                                    "start_token": 760,
                                                    "end_token": 763,
                                                    "label": "err_msgs[0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 760,
                                                            "end_token": 760,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 762,
                                                            "end_token": 762,
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 765,
                                            "end_token": 767,
                                            "label": "expected_err_msg = '(L001) Title should not end with \"... API\". Every entry is an API here!'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 765,
                                                    "end_token": 765,
                                                    "label": "expected_err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 767,
                                                    "end_token": 767,
                                                    "label": "'(L001) Title should not end with \"... API\". Every entry is an API here!'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 770,
                                            "end_token": 777,
                                            "label": "self.assertEqual(err_msg, expected_err_msg)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 770,
                                                    "end_token": 772,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 770,
                                                            "end_token": 770,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 772,
                                                            "end_token": 772,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 773,
                                                    "end_token": 777,
                                                    "label": "(err_msg, expected_err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 774,
                                                            "end_token": 774,
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 776,
                                                            "end_token": 776,
                                                            "label": "expected_err_msg",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_title_with_api_at_the_end_of_the_title",
                            "start_line": 142,
                            "end_line": 153
                        },
                        {
                            "type": "function_definition",
                            "start_token": 780,
                            "end_token": 832,
                            "label": "def test_check_description_with_correct_description(self):\n        desc = 'This is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 781,
                                    "end_token": 781,
                                    "label": "test_check_description_with_correct_description",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 782,
                                    "end_token": 784,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 783,
                                            "end_token": 783,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 786,
                                    "end_token": 832,
                                    "label": "\n        desc = 'This is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 787,
                                            "end_token": 789,
                                            "label": "desc = 'This is a fake description'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 787,
                                                    "end_token": 787,
                                                    "label": "desc",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 789,
                                                    "end_token": 789,
                                                    "label": "'This is a fake description'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 792,
                                            "end_token": 799,
                                            "label": "err_msgs = check_description(0, desc)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 792,
                                                    "end_token": 792,
                                                    "label": "err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 794,
                                                    "end_token": 799,
                                                    "label": "check_description(0, desc)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 794,
                                                            "end_token": 794,
                                                            "label": "check_description",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 795,
                                                            "end_token": 799,
                                                            "label": "(0, desc)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 796,
                                                                    "end_token": 796,
                                                                    "label": "0",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 798,
                                                                    "end_token": 798,
                                                                    "label": "desc",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 802,
                                            "end_token": 809,
                                            "label": "self.assertIsInstance(err_msgs, list)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 802,
                                                    "end_token": 804,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 802,
                                                            "end_token": 802,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 804,
                                                            "end_token": 804,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 805,
                                                    "end_token": 809,
                                                    "label": "(err_msgs, list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 806,
                                                            "end_token": 806,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 808,
                                                            "end_token": 808,
                                                            "label": "list",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 811,
                                            "end_token": 821,
                                            "label": "self.assertEqual(len(err_msgs), 0)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 811,
                                                    "end_token": 813,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 811,
                                                            "end_token": 811,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 813,
                                                            "end_token": 813,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 814,
                                                    "end_token": 821,
                                                    "label": "(len(err_msgs), 0)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 815,
                                                            "end_token": 818,
                                                            "label": "len(err_msgs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 815,
                                                                    "end_token": 815,
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 816,
                                                                    "end_token": 818,
                                                                    "label": "(err_msgs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 817,
                                                                            "end_token": 817,
                                                                            "label": "err_msgs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 820,
                                                            "end_token": 820,
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 823,
                                            "end_token": 831,
                                            "label": "self.assertEqual(err_msgs, [])",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 823,
                                                    "end_token": 825,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 823,
                                                            "end_token": 823,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 825,
                                                            "end_token": 825,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 826,
                                                    "end_token": 831,
                                                    "label": "(err_msgs, [])",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 827,
                                                            "end_token": 827,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list",
                                                            "start_token": 829,
                                                            "end_token": 830,
                                                            "label": "[]",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_description_with_correct_description",
                            "start_line": 155,
                            "end_line": 162
                        },
                        {
                            "type": "function_definition",
                            "start_token": 834,
                            "end_token": 907,
                            "label": "def test_check_description_with_first_char_is_not_capitalized(self):\n        desc = 'this is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) first character of description is not capitalized'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 835,
                                    "end_token": 835,
                                    "label": "test_check_description_with_first_char_is_not_capitalized",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 836,
                                    "end_token": 838,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 837,
                                            "end_token": 837,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 839,
                                    "end_token": 906,
                                    "label": ":\n        desc = 'this is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) first character of description is not capitalized'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 841,
                                            "end_token": 843,
                                            "label": "desc = 'this is a fake description'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 841,
                                                    "end_token": 841,
                                                    "label": "desc",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 843,
                                                    "end_token": 843,
                                                    "label": "'this is a fake description'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 846,
                                            "end_token": 853,
                                            "label": "err_msgs = check_description(0, desc)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 846,
                                                    "end_token": 846,
                                                    "label": "err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 848,
                                                    "end_token": 853,
                                                    "label": "check_description(0, desc)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 848,
                                                            "end_token": 848,
                                                            "label": "check_description",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 849,
                                                            "end_token": 853,
                                                            "label": "(0, desc)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 850,
                                                                    "end_token": 850,
                                                                    "label": "0",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 852,
                                                                    "end_token": 852,
                                                                    "label": "desc",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 856,
                                            "end_token": 863,
                                            "label": "self.assertIsInstance(err_msgs, list)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 856,
                                                    "end_token": 858,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 856,
                                                            "end_token": 856,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 858,
                                                            "end_token": 858,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 859,
                                                    "end_token": 863,
                                                    "label": "(err_msgs, list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 860,
                                                            "end_token": 860,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 862,
                                                            "end_token": 862,
                                                            "label": "list",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 865,
                                            "end_token": 875,
                                            "label": "self.assertEqual(len(err_msgs), 1)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 865,
                                                    "end_token": 867,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 865,
                                                            "end_token": 865,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 867,
                                                            "end_token": 867,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 868,
                                                    "end_token": 875,
                                                    "label": "(len(err_msgs), 1)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 869,
                                                            "end_token": 872,
                                                            "label": "len(err_msgs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 869,
                                                                    "end_token": 869,
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 870,
                                                                    "end_token": 872,
                                                                    "label": "(err_msgs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 871,
                                                                            "end_token": 871,
                                                                            "label": "err_msgs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 874,
                                                            "end_token": 874,
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 878,
                                            "end_token": 883,
                                            "label": "err_msg = err_msgs[0]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 878,
                                                    "end_token": 878,
                                                    "label": "err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "subscript",
                                                    "start_token": 880,
                                                    "end_token": 883,
                                                    "label": "err_msgs[0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 880,
                                                            "end_token": 880,
                                                            "label": "err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 882,
                                                            "end_token": 882,
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 885,
                                            "end_token": 887,
                                            "label": "expected_err_msg = '(L001) first character of description is not capitalized'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 885,
                                                    "end_token": 885,
                                                    "label": "expected_err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 887,
                                                    "end_token": 887,
                                                    "label": "'(L001) first character of description is not capitalized'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 890,
                                            "end_token": 897,
                                            "label": "self.assertIsInstance(err_msg, str)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 890,
                                                    "end_token": 892,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 890,
                                                            "end_token": 890,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 892,
                                                            "end_token": 892,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 893,
                                                    "end_token": 897,
                                                    "label": "(err_msg, str)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 894,
                                                            "end_token": 894,
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 896,
                                                            "end_token": 896,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 899,
                                            "end_token": 906,
                                            "label": "self.assertEqual(err_msg, expected_err_msg)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 899,
                                                    "end_token": 901,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 899,
                                                            "end_token": 899,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 901,
                                                            "end_token": 901,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 902,
                                                    "end_token": 906,
                                                    "label": "(err_msg, expected_err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 903,
                                                            "end_token": 903,
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 905,
                                                            "end_token": 905,
                                                            "label": "expected_err_msg",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_description_with_first_char_is_not_capitalized",
                            "start_line": 164,
                            "end_line": 176
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_description_with_punctuation_in_the_end",
                            "start_line": 178,
                            "end_line": 195,
                            "start_token": 909,
                            "end_token": 945,
                            "label": "def test_check_description_with_punctuation_in_the_end(self):\n        base_desc = 'This is a fake description'\n        punctuation = r\"\"\"!\"#$%&'*+,-./:;<=>?@[\\]^_`{|}~\"\"\"\n        desc_with_punc = [base_desc + punc for punc in punctuation]\n        \n        for desc in desc_with_punc:\n\n            with self.subTest():\n                err_msgs = check_description(0, desc)\n\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n        \n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) description should not end with {desc[-1]}'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_description_that_exceeds_the_character_limit(self):\n        long_desc = '",
                            "children": [
                                {
                                    "stmt": [
                                        {
                                            "type": "def",
                                            "name": "test_check_description_with_punctuation_in_the_end",
                                            "args": [
                                                {
                                                    "type": "self"
                                                }
                                            ],
                                            "body": [
                                                {
                                                    "type": "assignment",
                                                    "targets": [
                                                        {
                                                            "type": "name",
                                                            "value": "base_desc"
                                                        }
                                                    ],
                                                    "value": {
                                                        "type": "string",
                                                        "value": "This is a fake description"
                                                    }
                                                },
                                                {
                                                    "type": "assignment",
                                                    "targets": [
                                                        {
                                                            "type": "name",
                                                            "value": "punctuation"
                                                        }
                                                    ],
                                                    "value": {
                                                        "type": "string_raw",
                                                        "value": "r\"!#$%&'*+,-./:;<=>?@[\\]^_`{|}~\""
                                                    }
                                                },
                                                {
                                                    "type": "for_stmt",
                                                    "target": {
                                                        "type": "name",
                                                        "value": "desc"
                                                    },
                                                    "iter": {
                                                        "type": "list_comp",
                                                        "elt": {
                                                            "type": "bin_op",
                                                            "left": {
                                                                "type": "name",
                                                                "value": "base_desc"
                                                            },
                                                            "op": "+",
                                                            "right": {
                                                                "type": "name",
                                                                "value": "punc"
                                                            }
                                                        },
                                                        "generators": [
                                                            {
                                                                "target": {
                                                                    "type": "name",
                                                                    "value": "punc"
                                                                },
                                                                "iter": {
                                                                    "type": "name",
                                                                    "value": "punctuation"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "body": [
                                                        {
                                                            "type": "with",
                                                            "items": [
                                                                {
                                                                    "expr": {
                                                                        "type": "call",
                                                                        "func": {
                                                                            "type": "attribute",
                                                                            "value": {
                                                                                "type": "name",
                                                                                "value": "self"
                                                                            },
                                                                            "attr": "subTest"
                                                                        },
                                                                        "args": [],
                                                                        "keywords": []
                                                                    }
                                                                }
                                                            ],
                                                            "body": [
                                                                {
                                                                    "type": "assignment",
                                                                    "targets": [
                                                                        {
                                                                            "type": "name",
                                                                            "value": "err_msgs"
                                                                        }
                                                                    ],
                                                                    "value": {
                                                                        "type": "call",
                                                                        "func": {
                                                                            "type": "name",
                                                                            "value": "check_description"
                                                                        },
                                                                        "args": [
                                                                            {
                                                                                "type": "number",
                                                                                "value": 0
                                                                            },
                                                                            {
                                                                                "type": "name",
                                                                                "value": "desc"
                                                                            }
                                                                        ],
                                                                        "keywords": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "assert",
                                                                    "test": {
                                                                        "type": "call",
                                                                        "func": {
                                                                            "type": "attribute",
                                                                            "value": {
                                                                                "type": "name",
                                                                                "value": "self"
                                                                            },
                                                                            "attr": "assertIsInstance"
                                                                        },
                                                                        "args": [
                                                                            {
                                                                                "type": "name",
                                                                                "value": "err_msgs"
                                                                            },
                                                                            {
                                                                                "type": "name",
                                                                                "value": "list"
                                                                            }
                                                                        ],
                                                                        "keywords": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "assert",
                                                                    "test": {
                                                                        "type": "call",
                                                                        "func": {
                                                                            "type": "attribute",
                                                                            "value": {
                                                                                "type": "name",
                                                                                "value": "self"
                                                                            },
                                                                            "attr": "assertEqual"
                                                                        },
                                                                        "args": [
                                                                            {
                                                                                "type": "call",
                                                                                "func": {
                                                                                    "type": "attribute",
                                                                                    "value": {
                                                                                        "type": "name",
                                                                                        "value": "len"
                                                                                    },
                                                                                    "attr": "__call__"
                                                                                },
                                                                                "args": [
                                                                                    {
                                                                                        "type": "name",
                                                                                        "value": "err_msgs"
                                                                                    }
                                                                                ],
                                                                                "keywords": []
                                                                            },
                                                                            {
                                                                                "type": "number",
                                                                                "value": 1
                                                                            }
                                                                        ],
                                                                        "keywords": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "assignment",
                                                                    "targets": [
                                                                        {
                                                                            "type": "name",
                                                                            "value": "err_msg"
                                                                        }
                                                                    ],
                                                                    "value": {
                                                                        "type": "subscript",
                                                                        "value": {
                                                                            "type": "name",
                                                                            "value": "err_msgs"
                                                                        },
                                                                        "slice": {
                                                                            "type": "number",
                                                                            "value": 0
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "assignment",
                                                                    "targets": [
                                                                        {
                                                                            "type": "name",
                                                                            "value": "expected_err_msg"
                                                                        }
                                                                    ],
                                                                    "value": {
                                                                        "type": "formatted_string",
                                                                        "values": [
                                                                            {
                                                                                "type": "string",
                                                                                "value": "(L001) description should not end with {"
                                                                            },
                                                                            {
                                                                                "type": "name",
                                                                                "value": "desc"
                                                                            },
                                                                            {
                                                                                "type": "string",
                                                                                "value": "[-1]}"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "assert",
                                                                    "test": {
                                                                        "type": "call",
                                                                        "func": {
                                                                            "type": "attribute",
                                                                            "value": {
                                                                                "type": "name",
                                                                                "value": "self"
                                                                            },
                                                                            "attr": "assertIsInstance"
                                                                        },
                                                                        "args": [
                                                                            {
                                                                                "type": "name",
                                                                                "value": "err_msg"
                                                                            },
                                                                            {
                                                                                "type": "name",
                                                                                "value": "str"
                                                                            }
                                                                        ],
                                                                        "keywords": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "assert",
                                                                    "test": {
                                                                        "type": "call",
                                                                        "func": {
                                                                            "type": "attribute",
                                                                            "value": {
                                                                                "type": "name",
                                                                                "value": "self"
                                                                            },
                                                                            "attr": "assertEqual"
                                                                        },
                                                                        "args": [
                                                                            {
                                                                                "type": "name",
                                                                                "value": "err_msg"
                                                                            },
                                                                            {
                                                                                "type": "name",
                                                                                "value": "expected_err_msg"
                                                                            }
                                                                        ],
                                                                        "keywords": []
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "def",
                                            "name": "test_check_description_that_exceeds_the_character_limit",
                                            "args": [],
                                            "body": [
                                                {
                                                    "type": "assignment",
                                                    "targets": [
                                                        {
                                                            "type": "name",
                                                            "value": "long_desc"
                                                        }
                                                    ],
                                                    "value": {
                                                        "type": "string",
                                                        "value": "Create a JSON-based AST with these fields:..."
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_description_that_exceeds_the_character_limit",
                            "start_line": 197,
                            "end_line": 210,
                            "start_token": 946,
                            "end_token": 965,
                            "label": "Desc' * max_description_length\n        long_desc_length = len(long_desc)\n\n        err_msgs = check_description(0, long_desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n\n        err_msg = err_msgs[0]\n        expected_err_msg = f'(L001) description should not exceed {max_description_length} characters (currently {long_desc_length})'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_valid_auth(self):\n        auth_valid = [f'",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 946,
                                    "end_token": 965,
                                    "label": "Desc' * max_description_length\n        long_desc_length = len(long_desc)\n\n        err_msgs = check_description(0, long_desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n\n        err_msg = err_msgs[0]\n        expected_err_msg = f'(L001) description should not exceed {max_description_length} characters (currently {long_desc_length})'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_valid_auth(self):\n        auth_valid = [f'",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 946,
                                            "end_token": 947,
                                            "label": "Desc' * max_description_length\n        long_desc_length = len(long_desc)\n\n        err_msgs = check_description(0, long_desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n\n        err_msg = err_msgs[0]\n        expected_err_msg = f'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 946,
                                                    "end_token": 946,
                                                    "label": "Desc",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 948,
                                            "end_token": 963,
                                            "label": "(L001) description should not exceed {max_description_length} characters (currently {long_desc_length}",
                                            "children": [
                                                {
                                                    "type": "interpolation",
                                                    "start_token": 948,
                                                    "end_token": 965,
                                                    "label": "(L001) description should not exceed {max_description_length} characters (currently {long_desc_length})'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_valid_auth(self):\n        auth_valid = [f'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "start_token": 948,
                                                            "end_token": 948,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "start_token": 949,
                                                            "end_token": 964,
                                                            "label": "L001) description should not exceed {max_description_length} characters (currently {long_desc_length})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 949,
                                                                    "end_token": 949,
                                                                    "label": "L001",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 951,
                                                                    "end_token": 958,
                                                                    "label": "description should not exceed {max_description_length} characters",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 960,
                                                                    "end_token": 963,
                                                                    "label": "currently {long_desc_length}",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "start_token": 965,
                                                            "end_token": 965,
                                                            "label": "'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_valid_auth(self):\n        auth_valid = [f'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_auth_with_valid_auth",
                            "start_line": 212,
                            "end_line": 221,
                            "start_token": 966,
                            "end_token": 975,
                            "label": "`{auth}`' for auth in auth_keys if auth != 'No']\n        auth_valid.append('No')\n\n        for auth in auth_valid:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_auth_without_backtick(self):\n        auth_without_backtick = [auth for auth in auth_keys if auth != '",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 966,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 966,
                                            "end_token": 972,
                                            "label": "`{auth}`' for auth in auth_keys if auth != 'No",
                                            "children": [
                                                {
                                                    "type": "set_comprehension",
                                                    "start_token": 967,
                                                    "end_token": 971,
                                                    "label": "{auth}`' for auth in auth_keys if auth != '",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 966,
                                                            "end_token": 966,
                                                            "label": "`",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 968,
                                                            "end_token": 971,
                                                            "label": "auth}`' for auth in auth_keys if auth != '",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 968,
                                                                    "end_token": 968,
                                                                    "label": "auth",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 971,
                                                                    "end_token": 971,
                                                                    "label": "' for auth in auth_keys if auth != '",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "start_token": 972,
                                                                    "end_token": 972,
                                                                    "label": "No",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 972,
                                                                    "end_token": 972,
                                                                    "label": "No",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 973,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "start_token": 973,
                                                    "end_token": 974,
                                                    "label": "']\n        auth_valid.append('No",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 973,
                                                            "end_token": 973,
                                                            "label": "']\n        auth_valid.append('",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 974,
                                                            "end_token": 974,
                                                            "label": "No",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_statement",
                                                    "start_token": 975,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 975,
                                                            "end_token": 975,
                                                            "label": "')\n\n        for auth in auth_valid:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_auth_without_backtick(self):\n        auth_without_backtick = [auth for auth in auth_keys if auth != '",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 975,
                                                                    "end_token": 975,
                                                                    "label": "')\n\n        for auth in auth_valid:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_auth_without_backtick(self):\n        auth_without_backtick = [auth for auth in auth_keys if auth != '",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "with_statement",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "with_clause",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "function_definition",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "start_token": 976,
                            "end_token": 990,
                            "label": "No']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                            "children": [
                                {
                                    "type": "for_in_clause",
                                    "start_token": 976,
                                    "end_token": 976,
                                    "label": "No",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 976,
                                            "end_token": 976,
                                            "label": "No",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "start_token": 977,
                                    "end_token": 990,
                                    "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 977,
                                            "end_token": 977,
                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 977,
                                            "end_token": 990,
                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "start_token": 978,
                                                    "end_token": 978,
                                                    "label": "(",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 981,
                                                    "end_token": 981,
                                                    "label": "auth",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 977,
                                    "end_token": 990,
                                    "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 977,
                                            "end_token": 990,
                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 977,
                                                    "end_token": 977,
                                                    "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 977,
                                                    "end_token": 990,
                                                    "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 981,
                                                            "end_token": 981,
                                                            "label": "auth",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "start_token": 977,
                                            "end_token": 990,
                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 977,
                                                    "end_token": 990,
                                                    "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 977,
                                                            "end_token": 977,
                                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 977,
                                                            "end_token": 990,
                                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 977,
                                                                    "end_token": 990,
                                                                    "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 977,
                                                                            "end_token": 977,
                                                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 977,
                                                                            "end_token": 990,
                                                                            "label": "']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 981,
                                                                                    "end_token": 981,
                                                                                    "label": "auth",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_auth_without_backtick",
                            "start_line": 223,
                            "end_line": 236
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_auth_with_invalid_auth",
                            "start_line": 238,
                            "end_line": 269,
                            "start_token": 991,
                            "end_token": 1059,
                            "label": "Yes', 'yes', 'no', 'random', 'Unknown']\n        auth_invalid_with_backtick = ['`Yes`', '`yes`', '`no`', '`random`', '`Unknown`']\n\n        for auth in auth_invalid_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 2)\n\n                err_msg_1 = err_msgs[0]\n                err_msg_2 = err_msgs[1]\n\n                expected_err_msg_1 = f'(L001) auth value is not enclosed with `backticks`'\n                expected_err_msg_2 = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg_1, str)\n                self.assertIsInstance(err_msg_2, str)\n                self.assertEqual(err_msg_1, expected_err_msg_1)\n                self.assertEqual(err_msg_2, expected_err_msg_2)\n\n        for auth in auth_invalid_with_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_https_with_valid_https(self):\n        for https in https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_https_with_invalid_https(self):\n        invalid_https_keys = ['",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 991,
                                    "end_token": 1059,
                                    "label": "Yes', 'yes', 'no', 'random', 'Unknown']\n        auth_invalid_with_backtick = ['`Yes`', '`yes`', '`no`', '`random`', '`Unknown`']\n\n        for auth in auth_invalid_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 2)\n\n                err_msg_1 = err_msgs[0]\n                err_msg_2 = err_msgs[1]\n\n                expected_err_msg_1 = f'(L001) auth value is not enclosed with `backticks`'\n                expected_err_msg_2 = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg_1, str)\n                self.assertIsInstance(err_msg_2, str)\n                self.assertEqual(err_msg_1, expected_err_msg_1)\n                self.assertEqual(err_msg_2, expected_err_msg_2)\n\n        for auth in auth_invalid_with_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_https_with_valid_https(self):\n        for https in https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_https_with_invalid_https(self):\n        invalid_https_keys = ['",
                                    "children": [
                                        {
                                            "type": "list",
                                            "start_token": 991,
                                            "end_token": 999,
                                            "label": "Yes', 'yes', 'no', 'random', 'Unknown",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 991,
                                                    "end_token": 991,
                                                    "label": "Yes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 993,
                                                    "end_token": 993,
                                                    "label": "yes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 995,
                                                    "end_token": 995,
                                                    "label": "no",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 997,
                                                    "end_token": 997,
                                                    "label": "random",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 999,
                                                    "end_token": 999,
                                                    "label": "Unknown",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "start_token": 1000,
                                            "end_token": 1020,
                                            "label": "']\n        auth_invalid_with_backtick = ['`Yes`', '`yes`', '`no`', '`random`', '`Unknown`']\n\n        for auth in auth_invalid_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 2)\n\n                err_msg_1 = err_msgs[0]\n                err_msg_2 = err_msgs[1]\n\n                expected_err_msg_1 = f'",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 1002,
                                                    "end_token": 1002,
                                                    "label": "Yes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 1006,
                                                    "end_token": 1006,
                                                    "label": "yes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 1010,
                                                    "end_token": 1010,
                                                    "label": "no",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 1014,
                                                    "end_token": 1014,
                                                    "label": "random",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 1018,
                                                    "end_token": 1018,
                                                    "label": "Unknown",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 1020,
                                            "end_token": 1046,
                                            "label": "']\n\n        for auth in auth_invalid_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 2)\n\n                err_msg_1 = err_msgs[0]\n                err_msg_2 = err_msgs[1]\n\n                expected_err_msg_1 = f'(L001) auth value is not enclosed with `backticks`'\n                expected_err_msg_2 = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg_1, str)\n                self.assertIsInstance(err_msg_2, str)\n                self.assertEqual(err_msg_1, expected_err_msg_1)\n                self.assertEqual(err_msg_2, expected_err_msg_2)\n\n        for auth in auth_invalid_with_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 1021,
                                                    "end_token": 1032,
                                                    "label": "(L001) auth value is not enclosed with `backticks`",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 1034,
                                                    "end_token": 1045,
                                                    "label": "(L001) {auth} is not a valid Auth option",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 1047,
                                            "end_token": 1059,
                                            "label": "(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_https_with_valid_https(self):\n        for https in https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_https_with_invalid_https(self):\n        invalid_https_keys = ['",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 1047,
                                                    "end_token": 1058,
                                                    "label": "(L001) {auth} is not a valid Auth option",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_https_with_valid_https",
                            "start_line": 271,
                            "end_line": 277,
                            "start_token": 1060,
                            "end_token": 1059,
                            "label": "",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "import_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "import_prefix",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dotted_name",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "decorated_definition",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "decorator",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "function_definition",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": [
                                                                {
                                                                    "type": "if_clause",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "boolean_operator",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dotted_name",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "else_clause",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "label": "",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "label": "",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dotted_name",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "label": "",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "label": "",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "label": "",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "label": "",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "concatenated_string",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "label": "",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "start_token": -1,
                                                                                                            "end_token": -1,
                                                                                                            "label": "",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "plus operator",
                                                                                                            "start_token": -1,
                                                                                                            "end_token": -1,
                                                                                                            "label": "",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "start_token": -1,
                                                                                                            "end_token": -1,
                                                                                                            "label": "",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_https_with_invalid_https",
                            "start_line": 279,
                            "end_line": 292,
                            "start_token": 1060,
                            "end_token": 1082,
                            "label": "yes', 'no', 'Unknown', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 1060,
                                    "end_token": 1082,
                                    "label": "yes', 'no', 'Unknown', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "start_token": 1068,
                                            "end_token": 1082,
                                            "label": "http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1068,
                                                    "end_token": 1068,
                                                    "label": "http",
                                                    "children": []
                                                },
                                                {
                                                    "type": "in",
                                                    "start_token": 1069,
                                                    "end_token": 1060,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1064,
                                                    "end_token": 1064,
                                                    "label": "Unknown",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 1065,
                                                    "end_token": 1082,
                                                    "label": "', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 1060,
                                                            "end_token": 1081,
                                                            "label": "yes', 'no', 'Unknown', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1066,
                                                                    "end_token": 1066,
                                                                    "label": "https",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 1069,
                                                                    "end_token": 1081,
                                                                    "label": "']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 1067,
                                                                            "end_token": 1067,
                                                                            "label": "', '",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1065,
                                                                            "end_token": 1065,
                                                                            "label": "', '",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assert_statement",
                                                            "start_token": 1066,
                                                            "end_token": 1081,
                                                            "label": "https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 1062,
                                                                    "end_token": 1080,
                                                                    "label": "no', 'Unknown', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1067,
                                                                            "end_token": 1067,
                                                                            "label": "', '",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 1071,
                                                                            "end_token": 1081,
                                                                            "label": "L001) {https} is not a valid HTTPS option",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 1068,
                                                                    "end_token": 1072,
                                                                    "label": "http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1069,
                                                                            "end_token": 1069,
                                                                            "label": "']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 1073,
                                                                            "end_token": 1073,
                                                                            "label": "{",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 1070,
                                                                                    "end_token": 1070,
                                                                                    "label": "(",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 1071,
                                                                    "end_token": 1082,
                                                                    "label": "L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 1068,
                                                                            "end_token": 1068,
                                                                            "label": "http",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 1071,
                                                                            "end_token": 1080,
                                                                            "label": "L001) {https} is not a valid HTTPS",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "start_token": 1071,
                                            "end_token": 1078,
                                            "label": "L001) {https} is not a",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1071,
                                                    "end_token": 1071,
                                                    "label": "L001",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 1072,
                                                    "end_token": 1078,
                                                    "label": ") {https} is not a",
                                                    "children": [
                                                        {
                                                            "type": "for_statement",
                                                            "start_token": 1073,
                                                            "end_token": 1082,
                                                            "label": "{https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1077,
                                                                    "end_token": 1082,
                                                                    "label": "not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "in",
                                                                    "start_token": 1075,
                                                                    "end_token": 1076,
                                                                    "label": "} is",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 1079,
                                                                    "end_token": 1079,
                                                                    "label": "valid",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 1077,
                                                                    "end_token": 1078,
                                                                    "label": "not a",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 1083,
                            "end_token": 1082,
                            "label": "",
                            "children": [
                                {
                                    "type": "keyword",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "colon",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "equals",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "plus",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "keyword",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_cors_with_valid_cors",
                            "start_line": 294,
                            "end_line": 300
                        },
                        {
                            "type": "block",
                            "start_token": 1083,
                            "end_token": 1103,
                            "label": "yes', 'no', 'unknown', 'cors']\n\n        for cors in invalid_cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {cors} is not a valid CORS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_entry_with_correct_segments(self):\n        correct_segments = ['",
                            "children": [
                                {
                                    "type": "for_statement",
                                    "start_token": 1089,
                                    "end_token": 1094,
                                    "label": "cors']\n\n        for cors in invalid_cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 1089,
                                            "end_token": 1089,
                                            "label": "cors",
                                            "children": []
                                        },
                                        {
                                            "type": "in_operator",
                                            "start_token": 1090,
                                            "end_token": 1094,
                                            "label": "']\n\n        for cors in invalid_cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 1095,
                                            "end_token": 1095,
                                            "label": "cors",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "with_statement",
                                    "start_token": 1096,
                                    "end_token": 1101,
                                    "label": "} is not a valid CORS",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "start_token": 1096,
                                            "end_token": 1098,
                                            "label": "} is not",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 1096,
                                                    "end_token": 1096,
                                                    "label": "}",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "start_token": 1102,
                                    "end_token": 1103,
                                    "label": "option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_entry_with_correct_segments(self):\n        correct_segments = ['",
                                    "children": [
                                        {
                                            "type": "assert_statement",
                                            "start_token": 1102,
                                            "end_token": 1103,
                                            "label": "option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_entry_with_correct_segments(self):\n        correct_segments = ['",
                                            "children": []
                                        }
                                    ]
                                }
                            ],
                            "name": "test_check_cors_with_invalid_cors",
                            "start_line": 302,
                            "end_line": 315
                        },
                        {
                            "type": "function_placeholder",
                            "name": "test_check_entry_with_correct_segments",
                            "start_line": 317,
                            "end_line": 324,
                            "start_token": 1104,
                            "end_token": 1110,
                            "label": "[A](https://www.ex.com)', 'Desc', '`apiKey`', 'Yes', 'Yes']\n\n        err_msgs = check_entry(0, correct_segments)\n        \n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n    def test_check_entry_with_incorrect_segments(self):\n        incorrect_segments = ['[A API](https://www.ex.com)', 'desc.', 'yes', 'yes', 'yes']\n\n        err_msgs = check_entry(0, incorrect_segments)\n        expected_err_msgs = [\n            '(L001) Title should not end with \"... API\". Every entry is an API here!',\n            '(L001) first character of description is not capitalized',\n            '(L001) description should not end with .',\n            '(L001) auth value is not enclosed with `backticks`',\n            '(L001) yes is not a valid Auth option',\n            '(L001) yes is not a valid HTTPS option',\n            '(L001) yes is not a valid CORS option'\n        ]\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 7)\n        for err_msg in err_msgs:\n            with self.subTest():\n                self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msgs, expected_err_msgs)\n\n    def test_check_file_format_with_correct_format(self):\n        correct_format = [\n            '## Index',\n            '* [A](#a)',\n            '* [B](#b)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        err_msgs = check_file_format(lines=correct_format)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n    def test_check_file_format_with_category_header_not_added_to_index(self):\n        incorrect_format = [\n            '## Index',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n        ]\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = '(L003) category header (A) not added to Index section'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_file_format_with_category_without_min_entries(self):\n        incorrect_format = [\n            '## Index',\n            '* [A](#a)',\n            '* [B](#b)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        category_with_err = 'A'\n        num_in_category = 1\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = f'(L005) {category_with_err} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_file_format_entry_without_all_necessary_columns(self):\n        incorrect_format = [\n            '## Index',\n            '* [A](#a)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` |',  # missing https and cors\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n        ]\n\n        current_segments_num = 3\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = f'(L008) entry does not have all the required columns (have {current_segments_num}, need {num_segments})'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_file_format_without_1_space_between_the_segments(self):\n        incorrect_format = [\n            '## Index',\n            '* [A](#a)',\n            '',\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc |`apiKey`| Yes | Yes |',  # space between segment of auth column missing\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AC](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n        ]\n\n        err_msgs = check_file_format(lines=incorrect_format)\n        expected_err_msg = f'(L007) each segment must start and end with exactly 1 space'\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        err_msg = err_msgs[0]\n        self.assertEqual(err_msg, expected_err_msg)\n",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 1104,
                                    "end_token": 1109,
                                    "label": "[A](https:",
                                    "children": [
                                        {
                                            "type": "list",
                                            "start_token": 1104,
                                            "end_token": 1106,
                                            "label": "[A]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1105,
                                                    "end_token": 1105,
                                                    "label": "A",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 1107,
                                            "end_token": 1109,
                                            "label": "(https:",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 1108,
                                                    "end_token": 1108,
                                                    "label": "https",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}