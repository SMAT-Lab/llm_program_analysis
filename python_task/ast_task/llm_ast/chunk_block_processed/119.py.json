{
    "type": "module",
    "start_token": 0,
    "end_token": 256,
    "label": "from timeit import timeit\n\n\ndef get_set_bits_count_using_brian_kernighans_algorithm(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        number &= number - 1\n        result += 1\n    return result\n\n\ndef get_set_bits_count_using_modulo_operator(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n    return result\n\n\ndef benchmark() -> None:\n    \"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"\n\n    def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n\n    for number in (25, 37, 58, 0):\n        do_benchmark(number)\n        print()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    benchmark()",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "label": "from timeit import timeit",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 0,
                    "end_token": 1,
                    "label": "from timeit",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 2,
                    "end_token": 2,
                    "label": "import",
                    "children": []
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 7,
            "end_token": 57,
            "label": "def get_set_bits_count_using_brian_kernighans_algorithm(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        number &= number - 1\n        result += 1\n    return result\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "get_set_bits_count_using_brian_kernighans_algorithm",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 9,
                    "end_token": 13,
                    "label": "(number: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 10,
                            "end_token": 12,
                            "label": "number: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 10,
                                    "end_token": 10,
                                    "label": "number",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 12,
                                    "end_token": 12,
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "start_token": 15,
                    "end_token": 16,
                    "label": "> int",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 17,
                    "end_token": 56,
                    "label": ":\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        number &= number - 1\n        result += 1\n    return result",
                    "children": [
                        {
                            "type": "string",
                            "start_token": 19,
                            "end_token": 21,
                            "label": "\"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "start_token": 23,
                            "end_token": 33,
                            "label": "if number < 0:\n        raise ValueError(\"the value of input must not be negative\")",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "start_token": 24,
                                    "end_token": 26,
                                    "label": "number < 0",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 24,
                                            "end_token": 24,
                                            "label": "number",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": 26,
                                            "end_token": 26,
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "raise_statement",
                                    "start_token": 29,
                                    "end_token": 33,
                                    "label": "raise ValueError(\"the value of input must not be negative\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 30,
                                            "end_token": 33,
                                            "label": "ValueError(\"the value of input must not be negative\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 30,
                                                    "end_token": 30,
                                                    "label": "ValueError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 31,
                                                    "end_token": 32,
                                                    "label": "(\"the value of input must not be negative\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 32,
                                                            "end_token": 32,
                                                            "label": "\"the value of input must not be negative\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 35,
                            "end_token": 37,
                            "label": "result = 0",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 35,
                                    "end_token": 35,
                                    "label": "result",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "start_token": 37,
                                    "end_token": 37,
                                    "label": "0",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "while_statement",
                            "start_token": 39,
                            "end_token": 53,
                            "label": "while number:\n        number &= number - 1\n        result += 1",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 40,
                                    "end_token": 40,
                                    "label": "number",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 41,
                                    "end_token": 53,
                                    "label": ":\n        number &= number - 1\n        result += 1",
                                    "children": [
                                        {
                                            "type": "augmented_assignment",
                                            "start_token": 43,
                                            "end_token": 48,
                                            "label": "number &= number - 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 43,
                                                    "end_token": 43,
                                                    "label": "number",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 46,
                                                    "end_token": 48,
                                                    "label": "number - 1",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 46,
                                                            "end_token": 46,
                                                            "label": "number",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 48,
                                                            "end_token": 48,
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "augmented_assignment",
                                            "start_token": 50,
                                            "end_token": 53,
                                            "label": "result += 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 50,
                                                    "end_token": 50,
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 53,
                                                    "end_token": 53,
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 55,
                            "end_token": 56,
                            "label": "return result",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 56,
                                    "end_token": 56,
                                    "label": "result",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "get_set_bits_count_using_brian_kernighans_algorithm",
            "start_line": 4,
            "end_line": 30
        },
        {
            "type": "function_definition",
            "start_token": 60,
            "end_token": 118,
            "label": "def get_set_bits_count_using_modulo_operator(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n    return result\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 61,
                    "end_token": 61,
                    "label": "get_set_bits_count_using_modulo_operator",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 62,
                    "end_token": 66,
                    "label": "(number: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 63,
                            "end_token": 65,
                            "label": "number: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 63,
                                    "end_token": 63,
                                    "label": "number",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 65,
                                    "end_token": 65,
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "start_token": 68,
                    "end_token": 69,
                    "label": "> int",
                    "children": []
                },
                {
                    "type": "string",
                    "start_token": 72,
                    "end_token": 74,
                    "label": "\"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"",
                    "children": [
                        {
                            "type": "string_content",
                            "start_token": 72,
                            "end_token": 74,
                            "label": "\"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 76,
                    "end_token": 117,
                    "label": "if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n    return result",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": 76,
                            "end_token": 86,
                            "label": "if number < 0:\n        raise ValueError(\"the value of input must not be negative\")",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "start_token": 77,
                                    "end_token": 79,
                                    "label": "number < 0",
                                    "children": []
                                },
                                {
                                    "type": "raise_statement",
                                    "start_token": 82,
                                    "end_token": 86,
                                    "label": "raise ValueError(\"the value of input must not be negative\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 83,
                                            "end_token": 83,
                                            "label": "ValueError",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 84,
                                            "end_token": 86,
                                            "label": "(\"the value of input must not be negative\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 85,
                                                    "end_token": 85,
                                                    "label": "\"the value of input must not be negative\"",
                                                    "children": [
                                                        {
                                                            "type": "string_content",
                                                            "start_token": 85,
                                                            "end_token": 85,
                                                            "label": "\"the value of input must not be negative\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 88,
                            "end_token": 90,
                            "label": "result = 0",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 88,
                                    "end_token": 88,
                                    "label": "result",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "start_token": 90,
                                    "end_token": 90,
                                    "label": "0",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "while_statement",
                            "start_token": 92,
                            "end_token": 115,
                            "label": "while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 93,
                                    "end_token": 93,
                                    "label": "number",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 94,
                                    "end_token": 115,
                                    "label": ":\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 96,
                                            "end_token": 108,
                                            "label": "if number % 2 == 1:\n            result += 1",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 97,
                                                    "end_token": 102,
                                                    "label": "number % 2 == 1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "augmented_assignment",
                                                    "start_token": 105,
                                                    "end_token": 108,
                                                    "label": "result += 1",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 105,
                                                            "end_token": 105,
                                                            "label": "result",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 108,
                                                            "end_token": 108,
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "augmented_assignment",
                                            "start_token": 110,
                                            "end_token": 114,
                                            "label": "number >>= 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 110,
                                                    "end_token": 110,
                                                    "label": "number",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 114,
                                                    "end_token": 114,
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 116,
                            "end_token": 117,
                            "label": "return result",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 117,
                                    "end_token": 117,
                                    "label": "result",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "get_set_bits_count_using_modulo_operator",
            "start_line": 33,
            "end_line": 60
        },
        {
            "type": "function_placeholder",
            "name": "benchmark",
            "start_line": 63,
            "end_line": 86,
            "start_token": 121,
            "end_token": 234,
            "label": "def benchmark() -> None:\n    \"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"\n\n    def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n\n    for number in (25, 37, 58, 0):\n        do_benchmark(number)\n        print()\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 121,
                    "end_token": 234,
                    "label": "def benchmark() -> None:\n    \"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"\n\n    def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n\n    for number in (25, 37, 58, 0):\n        do_benchmark(number)\n        print()\n",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 121,
                            "end_token": 129,
                            "label": "def benchmark() -> None:\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 122,
                                    "end_token": 122,
                                    "label": "benchmark",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 123,
                                    "end_token": 124,
                                    "label": "()",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "start_token": 126,
                                    "end_token": 127,
                                    "label": "> None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "string",
                            "start_token": 130,
                            "end_token": 132,
                            "label": "\"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "start_token": 130,
                                    "end_token": 130,
                                    "label": "\"\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 131,
                                    "end_token": 131,
                                    "label": "\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "start_token": 132,
                                    "end_token": 132,
                                    "label": "\"\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 135,
                            "end_token": 210,
                            "label": "def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 136,
                                    "end_token": 136,
                                    "label": "do_benchmark",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 137,
                                    "end_token": 141,
                                    "label": "(number: int)",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 138,
                                            "end_token": 140,
                                            "label": "number: int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 138,
                                                    "end_token": 138,
                                                    "label": "number",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 140,
                                                    "end_token": 140,
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "start_token": 144,
                                    "end_token": 144,
                                    "label": "None",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 145,
                                    "end_token": 210,
                                    "label": ":\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 147,
                                            "end_token": 149,
                                            "label": "setup = \"import __main__ as z\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 147,
                                                    "end_token": 147,
                                                    "label": "setup",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 149,
                                                    "end_token": 149,
                                                    "label": "\"import __main__ as z\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 151,
                                            "end_token": 155,
                                            "label": "print(f\"Benchmark when {number = }:\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 151,
                                                    "end_token": 155,
                                                    "label": "print(f\"Benchmark when {number = }:\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 151,
                                                            "end_token": 151,
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 152,
                                                            "end_token": 154,
                                                            "label": "(f\"Benchmark when {number = }:\"",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 153,
                                                                    "end_token": 154,
                                                                    "label": "f\"Benchmark when {number = }:\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 154,
                                                                            "end_token": 154,
                                                                            "label": "\"Benchmark when {number = }:\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 157,
                                            "end_token": 161,
                                            "label": "print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 157,
                                                    "end_token": 161,
                                                    "label": "print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 157,
                                                            "end_token": 157,
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 158,
                                                            "end_token": 160,
                                                            "label": "(f\"{get_set_bits_count_using_modulo_operator(number) = }\"",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 159,
                                                                    "end_token": 160,
                                                                    "label": "f\"{get_set_bits_count_using_modulo_operator(number) = }\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 160,
                                                                            "end_token": 160,
                                                                            "label": "\"{get_set_bits_count_using_modulo_operator(number) = }\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 163,
                                            "end_token": 175,
                                            "label": "timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 163,
                                                    "end_token": 163,
                                                    "label": "timing",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 165,
                                                    "end_token": 175,
                                                    "label": "timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 165,
                                                            "end_token": 165,
                                                            "label": "timeit",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 166,
                                                            "end_token": 174,
                                                            "label": "(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 168,
                                                                    "end_token": 169,
                                                                    "label": "f\"z.get_set_bits_count_using_modulo_operator({number})\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 169,
                                                                            "end_token": 169,
                                                                            "label": "\"z.get_set_bits_count_using_modulo_operator({number})\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 171,
                                                                    "end_token": 173,
                                                                    "label": "setup=setup",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 171,
                                                                            "end_token": 171,
                                                                            "label": "setup",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 173,
                                                                            "end_token": 173,
                                                                            "label": "setup",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 177,
                                            "end_token": 181,
                                            "label": "print(f\"timeit() runs in {timing} seconds\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 177,
                                                    "end_token": 181,
                                                    "label": "print(f\"timeit() runs in {timing} seconds\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 177,
                                                            "end_token": 177,
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 178,
                                                            "end_token": 180,
                                                            "label": "(f\"timeit() runs in {timing} seconds\"",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 179,
                                                                    "end_token": 180,
                                                                    "label": "f\"timeit() runs in {timing} seconds\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 180,
                                                                            "end_token": 180,
                                                                            "label": "\"timeit() runs in {timing} seconds\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 183,
                                            "end_token": 187,
                                            "label": "print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 183,
                                                    "end_token": 187,
                                                    "label": "print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 183,
                                                            "end_token": 183,
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 184,
                                                            "end_token": 186,
                                                            "label": "(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\"",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 185,
                                                                    "end_token": 186,
                                                                    "label": "f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 186,
                                                                            "end_token": 186,
                                                                            "label": "\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 189,
                                            "end_token": 203,
                                            "label": "timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 189,
                                                    "end_token": 189,
                                                    "label": "timing",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 191,
                                                    "end_token": 203,
                                                    "label": "timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 191,
                                                            "end_token": 191,
                                                            "label": "timeit",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 192,
                                                            "end_token": 202,
                                                            "label": "(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 194,
                                                                    "end_token": 195,
                                                                    "label": "f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 195,
                                                                            "end_token": 195,
                                                                            "label": "\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 198,
                                                                    "end_token": 200,
                                                                    "label": "setup=setup",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 198,
                                                                            "end_token": 198,
                                                                            "label": "setup",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 200,
                                                                            "end_token": 200,
                                                                            "label": "setup",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 205,
                                            "end_token": 209,
                                            "label": "print(f\"timeit() runs in {timing} seconds\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 205,
                                                    "end_token": 209,
                                                    "label": "print(f\"timeit() runs in {timing} seconds\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 205,
                                                            "end_token": 205,
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 206,
                                                            "end_token": 208,
                                                            "label": "(f\"timeit() runs in {timing} seconds\"",
                                                            "children": [
                                                                {
                                                                    "type": "interpolation",
                                                                    "start_token": 207,
                                                                    "end_token": 208,
                                                                    "label": "f\"timeit() runs in {timing} seconds\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 208,
                                                                            "end_token": 208,
                                                                            "label": "\"timeit() runs in {timing} seconds\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "do_benchmark",
                            "start_line": 69,
                            "end_line": 82
                        },
                        {
                            "type": "for_statement",
                            "start_token": 212,
                            "end_token": 230,
                            "label": "for number in (25, 37, 58, 0):\n        do_benchmark(number)\n",
                            "children": [
                                {
                                    "type": "for_in_clause",
                                    "start_token": 212,
                                    "end_token": 223,
                                    "label": "for number in (25, 37, 58, 0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 213,
                                            "end_token": 213,
                                            "label": "number",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "start_token": 215,
                                            "end_token": 223,
                                            "label": "(25, 37, 58, 0)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "start_token": 216,
                                                    "end_token": 216,
                                                    "label": "25",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 218,
                                                    "end_token": 218,
                                                    "label": "37",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 220,
                                                    "end_token": 220,
                                                    "label": "58",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 222,
                                                    "end_token": 222,
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 224,
                                    "end_token": 230,
                                    "label": ":\n        do_benchmark(number)\n",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 226,
                                            "end_token": 229,
                                            "label": "do_benchmark(number)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 226,
                                                    "end_token": 226,
                                                    "label": "do_benchmark",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 227,
                                                    "end_token": 229,
                                                    "label": "(number)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 228,
                                                            "end_token": 228,
                                                            "label": "number",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 231,
                            "end_token": 233,
                            "label": "print()",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 231,
                                    "end_token": 233,
                                    "label": "print()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 231,
                                            "end_token": 231,
                                            "label": "print",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 232,
                                            "end_token": 233,
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "block",
            "start_token": 237,
            "end_token": 256,
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    benchmark()",
            "children": [
                {
                    "type": "if_statement",
                    "start_token": 237,
                    "end_token": 252,
                    "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 238,
                            "end_token": 241,
                            "label": "__name__ == \"__main__\"",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 243,
                            "end_token": 252,
                            "label": "\n    import doctest\n\n    doctest.testmod()",
                            "children": [
                                {
                                    "type": "import_statement",
                                    "start_token": 244,
                                    "end_token": 245,
                                    "label": "import doctest",
                                    "children": []
                                },
                                {
                                    "type": "expression_statement",
                                    "start_token": 248,
                                    "end_token": 252,
                                    "label": "doctest.testmod()",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 248,
                                            "end_token": 252,
                                            "label": "doctest.testmod()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 248,
                                                    "end_token": 250,
                                                    "label": "doctest.testmod",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 251,
                                                    "end_token": 252,
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "expression_statement",
                    "start_token": 254,
                    "end_token": 256,
                    "label": "benchmark()",
                    "children": [
                        {
                            "type": "call",
                            "start_token": 254,
                            "end_token": 256,
                            "label": "benchmark()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 254,
                                    "end_token": 254,
                                    "label": "benchmark",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 255,
                                    "end_token": 256,
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}