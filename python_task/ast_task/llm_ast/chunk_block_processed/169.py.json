{
    "type": "module",
    "start_token": 0,
    "end_token": 27,
    "label": "import re\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n",
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "label": "import re",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 4,
            "end_token": 17,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 5,
                    "end_token": 9,
                    "label": "backend.data.block",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "Block",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 13,
                    "end_token": 13,
                    "label": "BlockCategory",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 15,
                    "end_token": 15,
                    "label": "BlockOutput",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 17,
                    "end_token": 17,
                    "label": "BlockSchema",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 19,
            "end_token": 26,
            "label": "from backend.data.model import SchemaField",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 20,
                    "end_token": 24,
                    "label": "backend.data.model",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 26,
                    "end_token": 26,
                    "label": "SchemaField",
                    "children": []
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "CodeExtractionBlock",
            "start_line": 7,
            "end_line": 110,
            "start_token": 30,
            "end_token": 730,
            "label": "class CodeExtractionBlock(Block):\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )\n\n    class Output(BlockSchema):\n        html: str = SchemaField(description=\"Extracted HTML code\")\n        css: str = SchemaField(description=\"Extracted CSS code\")\n        javascript: str = SchemaField(description=\"Extracted JavaScript code\")\n        python: str = SchemaField(description=\"Extracted Python code\")\n        sql: str = SchemaField(description=\"Extracted SQL code\")\n        java: str = SchemaField(description=\"Extracted Java code\")\n        cpp: str = SchemaField(description=\"Extracted C++ code\")\n        csharp: str = SchemaField(description=\"Extracted C# code\")\n        json_code: str = SchemaField(description=\"Extracted JSON code\")\n        bash: str = SchemaField(description=\"Extracted Bash code\")\n        php: str = SchemaField(description=\"Extracted PHP code\")\n        ruby: str = SchemaField(description=\"Extracted Ruby code\")\n        yaml: str = SchemaField(description=\"Extracted YAML code\")\n        markdown: str = SchemaField(description=\"Extracted Markdown code\")\n        typescript: str = SchemaField(description=\"Extracted TypeScript code\")\n        xml: str = SchemaField(description=\"Extracted XML code\")\n        remaining_text: str = SchemaField(\n            description=\"Remaining text after code extraction\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\n            description=\"Extracts code blocks from text and identifies their programming languages\",\n            categories={BlockCategory.TEXT},\n            input_schema=CodeExtractionBlock.Input,\n            output_schema=CodeExtractionBlock.Output,\n            test_input={\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            },\n            test_output=[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        # List of supported programming languages with mapped aliases\n        language_aliases = {\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }\n\n        # Extract code for each language\n        for canonical_name, aliases in language_aliases.items():\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text\n\n    def extract_code(self, text: str, language: str) -> str:\n        # Escape special regex characters in the language string\n        language = re.escape(language)\n        # Extract all code blocks enclosed in ```language``` blocks\n        pattern = re.compile(rf\"```{language}\\s+(.*?)```\", re.DOTALL | re.IGNORECASE)\n        matches = pattern.finditer(text)\n        # Combine all code blocks for this language with newlines between them\n        code_blocks = [match.group(1).strip() for match in matches]\n        return \"\\n\\n\".join(code_blocks) if code_blocks else \"\"\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 30,
                    "end_token": 606,
                    "label": "class CodeExtractionBlock(Block):\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )\n\n    class Output(BlockSchema):\n        html: str = SchemaField(description=\"Extracted HTML code\")\n        css: str = SchemaField(description=\"Extracted CSS code\")\n        javascript: str = SchemaField(description=\"Extracted JavaScript code\")\n        python: str = SchemaField(description=\"Extracted Python code\")\n        sql: str = SchemaField(description=\"Extracted SQL code\")\n        java: str = SchemaField(description=\"Extracted Java code\")\n        cpp: str = SchemaField(description=\"Extracted C++ code\")\n        csharp: str = SchemaField(description=\"Extracted C# code\")\n        json_code: str = SchemaField(description=\"Extracted JSON code\")\n        bash: str = SchemaField(description=\"Extracted Bash code\")\n        php: str = SchemaField(description=\"Extracted PHP code\")\n        ruby: str = SchemaField(description=\"Extracted Ruby code\")\n        yaml: str = SchemaField(description=\"Extracted YAML code\")\n        markdown: str = SchemaField(description=\"Extracted Markdown code\")\n        typescript: str = SchemaField(description=\"Extracted TypeScript code\")\n        xml: str = SchemaField(description=\"Extracted XML code\")\n        remaining_text: str = SchemaField(\n            description=\"Remaining text after code extraction\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\n            description=\"Extracts code blocks from text and identifies their programming languages\",\n            categories={BlockCategory.TEXT},\n            input_schema=CodeExtractionBlock.Input,\n            output_schema=CodeExtractionBlock.Output,\n            test_input={\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            },\n            test_output=[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        # List of supported programming languages with mapped aliases\n        language_aliases = {\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }\n\n        # Extract code for each language\n        for canonical_name, aliases in language_aliases.items():\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text\n\n",
                    "children": [
                        {
                            "type": "class_definition",
                            "start_token": 30,
                            "end_token": 36,
                            "label": "class CodeExtractionBlock(Block):\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 30,
                                    "end_token": 30,
                                    "label": "class",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 31,
                                    "end_token": 31,
                                    "label": "CodeExtractionBlock",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 32,
                                    "end_token": 34,
                                    "label": "(Block)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 33,
                                            "end_token": 33,
                                            "label": "Block",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 35,
                                    "end_token": 606,
                                    "label": ":\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )\n\n    class Output(BlockSchema):\n        html: str = SchemaField(description=\"Extracted HTML code\")\n        css: str = SchemaField(description=\"Extracted CSS code\")\n        javascript: str = SchemaField(description=\"Extracted JavaScript code\")\n        python: str = SchemaField(description=\"Extracted Python code\")\n        sql: str = SchemaField(description=\"Extracted SQL code\")\n        java: str = SchemaField(description=\"Extracted Java code\")\n        cpp: str = SchemaField(description=\"Extracted C++ code\")\n        csharp: str = SchemaField(description=\"Extracted C# code\")\n        json_code: str = SchemaField(description=\"Extracted JSON code\")\n        bash: str = SchemaField(description=\"Extracted Bash code\")\n        php: str = SchemaField(description=\"Extracted PHP code\")\n        ruby: str = SchemaField(description=\"Extracted Ruby code\")\n        yaml: str = SchemaField(description=\"Extracted YAML code\")\n        markdown: str = SchemaField(description=\"Extracted Markdown code\")\n        typescript: str = SchemaField(description=\"Extracted TypeScript code\")\n        xml: str = SchemaField(description=\"Extracted XML code\")\n        remaining_text: str = SchemaField(\n            description=\"Remaining text after code extraction\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\n            description=\"Extracts code blocks from text and identifies their programming languages\",\n            categories={BlockCategory.TEXT},\n            input_schema=CodeExtractionBlock.Input,\n            output_schema=CodeExtractionBlock.Output,\n            test_input={\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            },\n            test_output=[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        # List of supported programming languages with mapped aliases\n        language_aliases = {\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }\n\n        # Extract code for each language\n        for canonical_name, aliases in language_aliases.items():\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text\n\n",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "class_placeholder",
                            "name": "Input",
                            "start_line": 8,
                            "end_line": 12,
                            "start_token": 37,
                            "end_token": 62,
                            "label": "class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )\n",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 37,
                                    "end_token": 62,
                                    "label": "class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )\n",
                                    "children": [
                                        {
                                            "type": "class_definition",
                                            "start_token": 37,
                                            "end_token": 41,
                                            "label": "class Input(BlockSchema)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 37,
                                                    "end_token": 37,
                                                    "label": "class",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 38,
                                                    "end_token": 38,
                                                    "label": "Input",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "start_token": 39,
                                                    "end_token": 41,
                                                    "label": "(BlockSchema)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 40,
                                                            "end_token": 40,
                                                            "label": "BlockSchema",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 42,
                                            "end_token": 62,
                                            "label": ":\n        text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )\n",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "start_token": 44,
                                                    "end_token": 61,
                                                    "label": "text: str = SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 44,
                                                            "end_token": 44,
                                                            "label": "text",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 46,
                                                            "end_token": 46,
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 46,
                                                                    "end_token": 46,
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 48,
                                                            "end_token": 61,
                                                            "label": "SchemaField(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 48,
                                                                    "end_token": 48,
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 49,
                                                                    "end_token": 61,
                                                                    "label": "(\n            description=\"Text containing code blocks to extract (e.g., AI response)\",\n            placeholder=\"Enter text containing code blocks\",\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 51,
                                                                            "end_token": 54,
                                                                            "label": "description=\"Text containing code blocks to extract (e.g., AI response)\",",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 51,
                                                                                    "end_token": 51,
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 53,
                                                                                    "end_token": 53,
                                                                                    "label": "\"Text containing code blocks to extract (e.g., AI response)\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 56,
                                                                            "end_token": 59,
                                                                            "label": "placeholder=\"Enter text containing code blocks\",",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 56,
                                                                                    "end_token": 56,
                                                                                    "label": "placeholder",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 58,
                                                                                    "end_token": 58,
                                                                                    "label": "\"Enter text containing code blocks\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": 64,
                            "end_token": 259,
                            "label": "class Output(BlockSchema):\n        html: str = SchemaField(description=\"Extracted HTML code\")\n        css: str = SchemaField(description=\"Extracted CSS code\")\n        javascript: str = SchemaField(description=\"Extracted JavaScript code\")\n        python: str = SchemaField(description=\"Extracted Python code\")\n        sql: str = SchemaField(description=\"Extracted SQL code\")\n        java: str = SchemaField(description=\"Extracted Java code\")\n        cpp: str = SchemaField(description=\"Extracted C++ code\")\n        csharp: str = SchemaField(description=\"Extracted C# code\")\n        json_code: str = SchemaField(description=\"Extracted JSON code\")\n        bash: str = SchemaField(description=\"Extracted Bash code\")\n        php: str = SchemaField(description=\"Extracted PHP code\")\n        ruby: str = SchemaField(description=\"Extracted Ruby code\")\n        yaml: str = SchemaField(description=\"Extracted YAML code\")\n        markdown: str = SchemaField(description=\"Extracted Markdown code\")\n        typescript: str = SchemaField(description=\"Extracted TypeScript code\")\n        xml: str = SchemaField(description=\"Extracted XML code\")\n        remaining_text: str = SchemaField(\n            description=\"Remaining text after code extraction\"\n        )\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 65,
                                    "end_token": 65,
                                    "label": "Output",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 70,
                                    "end_token": 258,
                                    "label": "\n        html: str = SchemaField(description=\"Extracted HTML code\")\n        css: str = SchemaField(description=\"Extracted CSS code\")\n        javascript: str = SchemaField(description=\"Extracted JavaScript code\")\n        python: str = SchemaField(description=\"Extracted Python code\")\n        sql: str = SchemaField(description=\"Extracted SQL code\")\n        java: str = SchemaField(description=\"Extracted Java code\")\n        cpp: str = SchemaField(description=\"Extracted C++ code\")\n        csharp: str = SchemaField(description=\"Extracted C# code\")\n        json_code: str = SchemaField(description=\"Extracted JSON code\")\n        bash: str = SchemaField(description=\"Extracted Bash code\")\n        php: str = SchemaField(description=\"Extracted PHP code\")\n        ruby: str = SchemaField(description=\"Extracted Ruby code\")\n        yaml: str = SchemaField(description=\"Extracted YAML code\")\n        markdown: str = SchemaField(description=\"Extracted Markdown code\")\n        typescript: str = SchemaField(description=\"Extracted TypeScript code\")\n        xml: str = SchemaField(description=\"Extracted XML code\")\n        remaining_text: str = SchemaField(\n            description=\"Remaining text after code extraction\"\n        )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 71,
                                            "end_token": 80,
                                            "label": "html: str = SchemaField(description=\"Extracted HTML code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 71,
                                                    "end_token": 73,
                                                    "label": "html: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 75,
                                                    "end_token": 80,
                                                    "label": "SchemaField(description=\"Extracted HTML code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 77,
                                                            "end_token": 79,
                                                            "label": "description=\"Extracted HTML code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 77,
                                                                    "end_token": 79,
                                                                    "label": "description=\"Extracted HTML code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 79,
                                                                            "end_token": 79,
                                                                            "label": "\"Extracted HTML code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 82,
                                            "end_token": 91,
                                            "label": "css: str = SchemaField(description=\"Extracted CSS code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 82,
                                                    "end_token": 84,
                                                    "label": "css: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 86,
                                                    "end_token": 91,
                                                    "label": "SchemaField(description=\"Extracted CSS code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 88,
                                                            "end_token": 90,
                                                            "label": "description=\"Extracted CSS code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 88,
                                                                    "end_token": 90,
                                                                    "label": "description=\"Extracted CSS code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 90,
                                                                            "end_token": 90,
                                                                            "label": "\"Extracted CSS code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 93,
                                            "end_token": 102,
                                            "label": "javascript: str = SchemaField(description=\"Extracted JavaScript code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 93,
                                                    "end_token": 95,
                                                    "label": "javascript: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 97,
                                                    "end_token": 102,
                                                    "label": "SchemaField(description=\"Extracted JavaScript code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 99,
                                                            "end_token": 101,
                                                            "label": "description=\"Extracted JavaScript code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 99,
                                                                    "end_token": 101,
                                                                    "label": "description=\"Extracted JavaScript code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 101,
                                                                            "end_token": 101,
                                                                            "label": "\"Extracted JavaScript code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 104,
                                            "end_token": 113,
                                            "label": "python: str = SchemaField(description=\"Extracted Python code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 104,
                                                    "end_token": 106,
                                                    "label": "python: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 108,
                                                    "end_token": 113,
                                                    "label": "SchemaField(description=\"Extracted Python code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 110,
                                                            "end_token": 112,
                                                            "label": "description=\"Extracted Python code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 110,
                                                                    "end_token": 112,
                                                                    "label": "description=\"Extracted Python code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 112,
                                                                            "end_token": 112,
                                                                            "label": "\"Extracted Python code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 115,
                                            "end_token": 124,
                                            "label": "sql: str = SchemaField(description=\"Extracted SQL code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 115,
                                                    "end_token": 117,
                                                    "label": "sql: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 119,
                                                    "end_token": 124,
                                                    "label": "SchemaField(description=\"Extracted SQL code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 121,
                                                            "end_token": 123,
                                                            "label": "description=\"Extracted SQL code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 121,
                                                                    "end_token": 123,
                                                                    "label": "description=\"Extracted SQL code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 123,
                                                                            "end_token": 123,
                                                                            "label": "\"Extracted SQL code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 126,
                                            "end_token": 135,
                                            "label": "java: str = SchemaField(description=\"Extracted Java code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 126,
                                                    "end_token": 128,
                                                    "label": "java: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 130,
                                                    "end_token": 135,
                                                    "label": "SchemaField(description=\"Extracted Java code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 132,
                                                            "end_token": 134,
                                                            "label": "description=\"Extracted Java code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 132,
                                                                    "end_token": 134,
                                                                    "label": "description=\"Extracted Java code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 134,
                                                                            "end_token": 134,
                                                                            "label": "\"Extracted Java code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 137,
                                            "end_token": 146,
                                            "label": "cpp: str = SchemaField(description=\"Extracted C++ code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 137,
                                                    "end_token": 139,
                                                    "label": "cpp: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 141,
                                                    "end_token": 146,
                                                    "label": "SchemaField(description=\"Extracted C++ code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 143,
                                                            "end_token": 145,
                                                            "label": "description=\"Extracted C++ code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 143,
                                                                    "end_token": 145,
                                                                    "label": "description=\"Extracted C++ code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 145,
                                                                            "end_token": 145,
                                                                            "label": "\"Extracted C++ code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 148,
                                            "end_token": 157,
                                            "label": "csharp: str = SchemaField(description=\"Extracted C# code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 148,
                                                    "end_token": 150,
                                                    "label": "csharp: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 152,
                                                    "end_token": 157,
                                                    "label": "SchemaField(description=\"Extracted C# code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 154,
                                                            "end_token": 156,
                                                            "label": "description=\"Extracted C# code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 154,
                                                                    "end_token": 156,
                                                                    "label": "description=\"Extracted C# code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 156,
                                                                            "end_token": 156,
                                                                            "label": "\"Extracted C# code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 159,
                                            "end_token": 168,
                                            "label": "json_code: str = SchemaField(description=\"Extracted JSON code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 159,
                                                    "end_token": 161,
                                                    "label": "json_code: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 163,
                                                    "end_token": 168,
                                                    "label": "SchemaField(description=\"Extracted JSON code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 165,
                                                            "end_token": 167,
                                                            "label": "description=\"Extracted JSON code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 165,
                                                                    "end_token": 167,
                                                                    "label": "description=\"Extracted JSON code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 167,
                                                                            "end_token": 167,
                                                                            "label": "\"Extracted JSON code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 170,
                                            "end_token": 179,
                                            "label": "bash: str = SchemaField(description=\"Extracted Bash code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 170,
                                                    "end_token": 172,
                                                    "label": "bash: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 174,
                                                    "end_token": 179,
                                                    "label": "SchemaField(description=\"Extracted Bash code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 176,
                                                            "end_token": 178,
                                                            "label": "description=\"Extracted Bash code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 176,
                                                                    "end_token": 178,
                                                                    "label": "description=\"Extracted Bash code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 178,
                                                                            "end_token": 178,
                                                                            "label": "\"Extracted Bash code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 181,
                                            "end_token": 190,
                                            "label": "php: str = SchemaField(description=\"Extracted PHP code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 181,
                                                    "end_token": 183,
                                                    "label": "php: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 185,
                                                    "end_token": 190,
                                                    "label": "SchemaField(description=\"Extracted PHP code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 187,
                                                            "end_token": 189,
                                                            "label": "description=\"Extracted PHP code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 187,
                                                                    "end_token": 189,
                                                                    "label": "description=\"Extracted PHP code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 189,
                                                                            "end_token": 189,
                                                                            "label": "\"Extracted PHP code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 192,
                                            "end_token": 201,
                                            "label": "ruby: str = SchemaField(description=\"Extracted Ruby code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 192,
                                                    "end_token": 194,
                                                    "label": "ruby: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 196,
                                                    "end_token": 201,
                                                    "label": "SchemaField(description=\"Extracted Ruby code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 198,
                                                            "end_token": 200,
                                                            "label": "description=\"Extracted Ruby code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 198,
                                                                    "end_token": 200,
                                                                    "label": "description=\"Extracted Ruby code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 200,
                                                                            "end_token": 200,
                                                                            "label": "\"Extracted Ruby code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 203,
                                            "end_token": 212,
                                            "label": "yaml: str = SchemaField(description=\"Extracted YAML code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 203,
                                                    "end_token": 205,
                                                    "label": "yaml: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 207,
                                                    "end_token": 212,
                                                    "label": "SchemaField(description=\"Extracted YAML code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 209,
                                                            "end_token": 211,
                                                            "label": "description=\"Extracted YAML code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 209,
                                                                    "end_token": 211,
                                                                    "label": "description=\"Extracted YAML code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 211,
                                                                            "end_token": 211,
                                                                            "label": "\"Extracted YAML code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 214,
                                            "end_token": 223,
                                            "label": "markdown: str = SchemaField(description=\"Extracted Markdown code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 214,
                                                    "end_token": 216,
                                                    "label": "markdown: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 218,
                                                    "end_token": 223,
                                                    "label": "SchemaField(description=\"Extracted Markdown code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 220,
                                                            "end_token": 222,
                                                            "label": "description=\"Extracted Markdown code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 220,
                                                                    "end_token": 222,
                                                                    "label": "description=\"Extracted Markdown code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 222,
                                                                            "end_token": 222,
                                                                            "label": "\"Extracted Markdown code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 225,
                                            "end_token": 234,
                                            "label": "typescript: str = SchemaField(description=\"Extracted TypeScript code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 225,
                                                    "end_token": 227,
                                                    "label": "typescript: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 229,
                                                    "end_token": 234,
                                                    "label": "SchemaField(description=\"Extracted TypeScript code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 231,
                                                            "end_token": 233,
                                                            "label": "description=\"Extracted TypeScript code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 231,
                                                                    "end_token": 233,
                                                                    "label": "description=\"Extracted TypeScript code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 233,
                                                                            "end_token": 233,
                                                                            "label": "\"Extracted TypeScript code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 236,
                                            "end_token": 245,
                                            "label": "xml: str = SchemaField(description=\"Extracted XML code\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 236,
                                                    "end_token": 238,
                                                    "label": "xml: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 240,
                                                    "end_token": 245,
                                                    "label": "SchemaField(description=\"Extracted XML code\")",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 242,
                                                            "end_token": 244,
                                                            "label": "description=\"Extracted XML code\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 242,
                                                                    "end_token": 244,
                                                                    "label": "description=\"Extracted XML code\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 244,
                                                                            "end_token": 244,
                                                                            "label": "\"Extracted XML code\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 247,
                                            "end_token": 258,
                                            "label": "remaining_text: str = SchemaField(\n            description=\"Remaining text after code extraction\"\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 247,
                                                    "end_token": 249,
                                                    "label": "remaining_text: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 251,
                                                    "end_token": 258,
                                                    "label": "SchemaField(\n            description=\"Remaining text after code extraction\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 253,
                                                            "end_token": 256,
                                                            "label": "\n            description=\"Remaining text after code extraction\"",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "start_token": 253,
                                                                    "end_token": 256,
                                                                    "label": "\n            description=\"Remaining text after code extraction\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 256,
                                                                            "end_token": 256,
                                                                            "label": "\"Remaining text after code extraction\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "Output",
                            "start_line": 14,
                            "end_line": 33
                        },
                        {
                            "type": "function_definition",
                            "start_token": 261,
                            "end_token": 348,
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\n            description=\"Extracts code blocks from text and identifies their programming languages\",\n            categories={BlockCategory.TEXT},\n            input_schema=CodeExtractionBlock.Input,\n            output_schema=CodeExtractionBlock.Output,\n            test_input={\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            },\n            test_output=[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ],\n        )\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 262,
                                    "end_token": 262,
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 263,
                                    "end_token": 265,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 264,
                                            "end_token": 264,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 267,
                                    "end_token": 347,
                                    "label": "\n        super().__init__(\n            id=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\n            description=\"Extracts code blocks from text and identifies their programming languages\",\n            categories={BlockCategory.TEXT},\n            input_schema=CodeExtractionBlock.Input,\n            output_schema=CodeExtractionBlock.Output,\n            test_input={\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            },\n            test_output=[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 268,
                                            "end_token": 274,
                                            "label": "super().__init__(\n",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 268,
                                                    "end_token": 272,
                                                    "label": "super().__init__",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 268,
                                                            "end_token": 268,
                                                            "label": "super",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 272,
                                                            "end_token": 272,
                                                            "label": "__init__",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 273,
                                                    "end_token": 274,
                                                    "label": "(\n",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 275,
                                            "end_token": 278,
                                            "label": "id=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 275,
                                                    "end_token": 275,
                                                    "label": "id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 277,
                                                    "end_token": 277,
                                                    "label": "\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 280,
                                            "end_token": 284,
                                            "label": "description=\"Extracts code blocks from text and identifies their programming languages\",\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 280,
                                                    "end_token": 280,
                                                    "label": "description",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 282,
                                                    "end_token": 282,
                                                    "label": "\"Extracts code blocks from text and identifies their programming languages\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 285,
                                            "end_token": 292,
                                            "label": "categories={BlockCategory.TEXT},",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 285,
                                                    "end_token": 285,
                                                    "label": "categories",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 287,
                                                    "end_token": 291,
                                                    "label": "{BlockCategory.TEXT}",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 288,
                                                            "end_token": 290,
                                                            "label": "BlockCategory.TEXT",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 288,
                                                                    "end_token": 288,
                                                                    "label": "BlockCategory",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 290,
                                                                    "end_token": 290,
                                                                    "label": "TEXT",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 294,
                                            "end_token": 299,
                                            "label": "input_schema=CodeExtractionBlock.Input,",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 294,
                                                    "end_token": 294,
                                                    "label": "input_schema",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 296,
                                                    "end_token": 298,
                                                    "label": "CodeExtractionBlock.Input",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 296,
                                                            "end_token": 296,
                                                            "label": "CodeExtractionBlock",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 298,
                                                            "end_token": 298,
                                                            "label": "Input",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 301,
                                            "end_token": 306,
                                            "label": "output_schema=CodeExtractionBlock.Output,",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 301,
                                                    "end_token": 301,
                                                    "label": "output_schema",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 303,
                                                    "end_token": 305,
                                                    "label": "CodeExtractionBlock.Output",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 303,
                                                            "end_token": 303,
                                                            "label": "CodeExtractionBlock",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 305,
                                                            "end_token": 305,
                                                            "label": "Output",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 308,
                                            "end_token": 317,
                                            "label": "test_input={\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            },",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 308,
                                                    "end_token": 308,
                                                    "label": "test_input",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 310,
                                                    "end_token": 316,
                                                    "label": "{\n                \"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n            }",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 312,
                                                            "end_token": 315,
                                                            "label": "\"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 312,
                                                                    "end_token": 312,
                                                                    "label": "\"text\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 314,
                                                                    "end_token": 314,
                                                                    "label": "\"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 319,
                                            "end_token": 345,
                                            "label": "test_output=[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ],",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 319,
                                                    "end_token": 319,
                                                    "label": "test_output",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 321,
                                                    "end_token": 344,
                                                    "label": "[\n                (\"html\", \"<h1>Title</h1>\"),\n                (\"python\", \"print('Hello World')\"),\n                (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\"),\n            ]",
                                                    "children": [
                                                        {
                                                            "type": "tuple",
                                                            "start_token": 323,
                                                            "end_token": 327,
                                                            "label": "(\"html\", \"<h1>Title</h1>\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 324,
                                                                    "end_token": 324,
                                                                    "label": "\"html\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 326,
                                                                    "end_token": 326,
                                                                    "label": "\"<h1>Title</h1>\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "tuple",
                                                            "start_token": 330,
                                                            "end_token": 334,
                                                            "label": "(\"python\", \"print('Hello World')\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 331,
                                                                    "end_token": 331,
                                                                    "label": "\"python\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 333,
                                                                    "end_token": 333,
                                                                    "label": "\"print('Hello World')\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "tuple",
                                                            "start_token": 337,
                                                            "end_token": 341,
                                                            "label": "(\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 338,
                                                                    "end_token": 338,
                                                                    "label": "\"remaining_text\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 340,
                                                                    "end_token": 340,
                                                                    "label": "\"Here's a Python example:\\nAnd some HTML:\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "__init__",
                            "start_line": 35,
                            "end_line": 50
                        },
                        {
                            "type": "function_definition",
                            "start_token": 350,
                            "end_token": 605,
                            "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        # List of supported programming languages with mapped aliases\n        language_aliases = {\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }\n\n        # Extract code for each language\n        for canonical_name, aliases in language_aliases.items():\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 351,
                                    "end_token": 351,
                                    "label": "run",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 352,
                                    "end_token": 362,
                                    "label": "(self, input_data: Input, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 353,
                                            "end_token": 353,
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 355,
                                            "end_token": 355,
                                            "label": "input_data",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 361,
                                            "end_token": 361,
                                            "label": "kwargs",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "start_token": 365,
                                    "end_token": 365,
                                    "label": "BlockOutput",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 366,
                                    "end_token": 604,
                                    "label": ":\n        # List of supported programming languages with mapped aliases\n        language_aliases = {\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }\n\n        # Extract code for each language\n        for canonical_name, aliases in language_aliases.items():\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text",
                                    "children": [
                                        {
                                            "type": "comment",
                                            "start_token": 368,
                                            "end_token": 377,
                                            "label": "# List of supported programming languages with mapped aliases\n",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 378,
                                            "end_token": 518,
                                            "label": "language_aliases = {\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 378,
                                                    "end_token": 378,
                                                    "label": "language_aliases",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 380,
                                                    "end_token": 518,
                                                    "label": "{\n            \"html\": [\"html\", \"htm\"],\n            \"css\": [\"css\"],\n            \"javascript\": [\"javascript\", \"js\"],\n            \"python\": [\"python\", \"py\"],\n            \"sql\": [\"sql\"],\n            \"java\": [\"java\"],\n            \"cpp\": [\"cpp\", \"c++\"],\n            \"csharp\": [\"csharp\", \"c#\", \"cs\"],\n            \"json_code\": [\"json\"],\n            \"bash\": [\"bash\", \"shell\", \"sh\"],\n            \"php\": [\"php\"],\n            \"ruby\": [\"ruby\", \"rb\"],\n            \"yaml\": [\"yaml\", \"yml\"],\n            \"markdown\": [\"markdown\", \"md\"],\n            \"typescript\": [\"typescript\", \"ts\"],\n            \"xml\": [\"xml\"],\n        }",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 382,
                                                            "end_token": 388,
                                                            "label": "\"html\": [\"html\", \"htm\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 382,
                                                                    "end_token": 382,
                                                                    "label": "\"html\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 384,
                                                                    "end_token": 388,
                                                                    "label": "[\"html\", \"htm\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 385,
                                                                            "end_token": 385,
                                                                            "label": "\"html\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 387,
                                                                            "end_token": 387,
                                                                            "label": "\"htm\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 391,
                                                            "end_token": 395,
                                                            "label": "\"css\": [\"css\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 391,
                                                                    "end_token": 391,
                                                                    "label": "\"css\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 393,
                                                                    "end_token": 395,
                                                                    "label": "[\"css\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 394,
                                                                            "end_token": 394,
                                                                            "label": "\"css\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 398,
                                                            "end_token": 404,
                                                            "label": "\"javascript\": [\"javascript\", \"js\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 398,
                                                                    "end_token": 398,
                                                                    "label": "\"javascript\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 400,
                                                                    "end_token": 404,
                                                                    "label": "[\"javascript\", \"js\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 401,
                                                                            "end_token": 401,
                                                                            "label": "\"javascript\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 403,
                                                                            "end_token": 403,
                                                                            "label": "\"js\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 407,
                                                            "end_token": 413,
                                                            "label": "\"python\": [\"python\", \"py\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 407,
                                                                    "end_token": 407,
                                                                    "label": "\"python\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 409,
                                                                    "end_token": 413,
                                                                    "label": "[\"python\", \"py\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 410,
                                                                            "end_token": 410,
                                                                            "label": "\"python\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 412,
                                                                            "end_token": 412,
                                                                            "label": "\"py\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 416,
                                                            "end_token": 420,
                                                            "label": "\"sql\": [\"sql\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 416,
                                                                    "end_token": 416,
                                                                    "label": "\"sql\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 418,
                                                                    "end_token": 420,
                                                                    "label": "[\"sql\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 419,
                                                                            "end_token": 419,
                                                                            "label": "\"sql\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 423,
                                                            "end_token": 427,
                                                            "label": "\"java\": [\"java\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 423,
                                                                    "end_token": 423,
                                                                    "label": "\"java\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 425,
                                                                    "end_token": 427,
                                                                    "label": "[\"java\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 426,
                                                                            "end_token": 426,
                                                                            "label": "\"java\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 430,
                                                            "end_token": 436,
                                                            "label": "\"cpp\": [\"cpp\", \"c++\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 430,
                                                                    "end_token": 430,
                                                                    "label": "\"cpp\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 432,
                                                                    "end_token": 436,
                                                                    "label": "[\"cpp\", \"c++\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 433,
                                                                            "end_token": 433,
                                                                            "label": "\"cpp\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 435,
                                                                            "end_token": 435,
                                                                            "label": "\"c++\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 439,
                                                            "end_token": 447,
                                                            "label": "\"csharp\": [\"csharp\", \"c#\", \"cs\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 439,
                                                                    "end_token": 439,
                                                                    "label": "\"csharp\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 441,
                                                                    "end_token": 447,
                                                                    "label": "[\"csharp\", \"c#\", \"cs\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 442,
                                                                            "end_token": 442,
                                                                            "label": "\"csharp\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 444,
                                                                            "end_token": 444,
                                                                            "label": "\"c#\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 446,
                                                                            "end_token": 446,
                                                                            "label": "\"cs\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 450,
                                                            "end_token": 454,
                                                            "label": "\"json_code\": [\"json\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 450,
                                                                    "end_token": 450,
                                                                    "label": "\"json_code\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 452,
                                                                    "end_token": 454,
                                                                    "label": "[\"json\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 453,
                                                                            "end_token": 453,
                                                                            "label": "\"json\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 457,
                                                            "end_token": 465,
                                                            "label": "\"bash\": [\"bash\", \"shell\", \"sh\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 457,
                                                                    "end_token": 457,
                                                                    "label": "\"bash\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 459,
                                                                    "end_token": 465,
                                                                    "label": "[\"bash\", \"shell\", \"sh\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 460,
                                                                            "end_token": 460,
                                                                            "label": "\"bash\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 462,
                                                                            "end_token": 462,
                                                                            "label": "\"shell\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 464,
                                                                            "end_token": 464,
                                                                            "label": "\"sh\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 468,
                                                            "end_token": 472,
                                                            "label": "\"php\": [\"php\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 468,
                                                                    "end_token": 468,
                                                                    "label": "\"php\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 470,
                                                                    "end_token": 472,
                                                                    "label": "[\"php\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 471,
                                                                            "end_token": 471,
                                                                            "label": "\"php\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 475,
                                                            "end_token": 481,
                                                            "label": "\"ruby\": [\"ruby\", \"rb\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 475,
                                                                    "end_token": 475,
                                                                    "label": "\"ruby\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 477,
                                                                    "end_token": 481,
                                                                    "label": "[\"ruby\", \"rb\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 478,
                                                                            "end_token": 478,
                                                                            "label": "\"ruby\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 480,
                                                                            "end_token": 480,
                                                                            "label": "\"rb\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 484,
                                                            "end_token": 490,
                                                            "label": "\"yaml\": [\"yaml\", \"yml\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 484,
                                                                    "end_token": 484,
                                                                    "label": "\"yaml\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 486,
                                                                    "end_token": 490,
                                                                    "label": "[\"yaml\", \"yml\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 487,
                                                                            "end_token": 487,
                                                                            "label": "\"yaml\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 489,
                                                                            "end_token": 489,
                                                                            "label": "\"yml\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 493,
                                                            "end_token": 499,
                                                            "label": "\"markdown\": [\"markdown\", \"md\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 493,
                                                                    "end_token": 493,
                                                                    "label": "\"markdown\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 495,
                                                                    "end_token": 499,
                                                                    "label": "[\"markdown\", \"md\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 496,
                                                                            "end_token": 496,
                                                                            "label": "\"markdown\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 498,
                                                                            "end_token": 498,
                                                                            "label": "\"md\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 502,
                                                            "end_token": 508,
                                                            "label": "\"typescript\": [\"typescript\", \"ts\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 502,
                                                                    "end_token": 502,
                                                                    "label": "\"typescript\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 504,
                                                                    "end_token": 508,
                                                                    "label": "[\"typescript\", \"ts\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 505,
                                                                            "end_token": 505,
                                                                            "label": "\"typescript\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 507,
                                                                            "end_token": 507,
                                                                            "label": "\"ts\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 511,
                                                            "end_token": 515,
                                                            "label": "\"xml\": [\"xml\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 511,
                                                                    "end_token": 511,
                                                                    "label": "\"xml\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 513,
                                                                    "end_token": 515,
                                                                    "label": "[\"xml\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 514,
                                                                            "end_token": 514,
                                                                            "label": "\"xml\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 521,
                                            "end_token": 527,
                                            "label": "# Extract code for each language\n",
                                            "children": []
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 528,
                                            "end_token": 604,
                                            "label": "for canonical_name, aliases in language_aliases.items():\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text",
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": 528,
                                                    "end_token": 536,
                                                    "label": "for canonical_name, aliases in language_aliases.items(",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 529,
                                                            "end_token": 529,
                                                            "label": "canonical_name",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 531,
                                                            "end_token": 531,
                                                            "label": "aliases",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 533,
                                                            "end_token": 535,
                                                            "label": "language_aliases.items",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 533,
                                                                    "end_token": 533,
                                                                    "label": "language_aliases",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 535,
                                                                    "end_token": 535,
                                                                    "label": "items",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 538,
                                                    "end_token": 604,
                                                    "label": ":\n            code = \"\"\n            # Try each alias for the language\n            for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n\n            if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 540,
                                                            "end_token": 542,
                                                            "label": "code = \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 540,
                                                                    "end_token": 540,
                                                                    "label": "code",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 542,
                                                                    "end_token": 542,
                                                                    "label": "\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "start_token": 544,
                                                            "end_token": 551,
                                                            "label": "# Try each alias for the language\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "for_statement",
                                                            "start_token": 552,
                                                            "end_token": 586,
                                                            "label": "for alias in aliases:\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n",
                                                            "children": [
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "start_token": 552,
                                                                    "end_token": 555,
                                                                    "label": "for alias in aliases",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 553,
                                                                            "end_token": 553,
                                                                            "label": "alias",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 555,
                                                                            "end_token": 555,
                                                                            "label": "aliases",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 556,
                                                                    "end_token": 586,
                                                                    "label": ":\n                code_for_alias = self.extract_code(input_data.text, alias)\n                if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "start_token": 558,
                                                                            "end_token": 569,
                                                                            "label": "code_for_alias = self.extract_code(input_data.text, alias)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 558,
                                                                                    "end_token": 558,
                                                                                    "label": "code_for_alias",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 560,
                                                                                    "end_token": 569,
                                                                                    "label": "self.extract_code(input_data.text, alias)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "start_token": 560,
                                                                                            "end_token": 562,
                                                                                            "label": "self.extract_code",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 560,
                                                                                                    "end_token": 560,
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 562,
                                                                                                    "end_token": 562,
                                                                                                    "label": "extract_code",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 563,
                                                                                            "end_token": 569,
                                                                                            "label": "(input_data.text, alias)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "start_token": 564,
                                                                                                    "end_token": 566,
                                                                                                    "label": "input_data.text",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 564,
                                                                                                            "end_token": 564,
                                                                                                            "label": "input_data",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 566,
                                                                                                            "end_token": 566,
                                                                                                            "label": "text",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 568,
                                                                                                    "end_token": 568,
                                                                                                    "label": "alias",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "start_token": 571,
                                                                            "end_token": 585,
                                                                            "label": "if code_for_alias:\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias",
                                                                            "children": [
                                                                                {
                                                                                    "type": "comparison_operator",
                                                                                    "start_token": 571,
                                                                                    "end_token": 572,
                                                                                    "label": "if code_for_alias",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 571,
                                                                                            "end_token": 571,
                                                                                            "label": "if",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "true",
                                                                                            "start_token": 572,
                                                                                            "end_token": 572,
                                                                                            "label": "code_for_alias",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "start_token": 574,
                                                                                    "end_token": 585,
                                                                                    "label": "\n                    code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "start_token": 575,
                                                                                            "end_token": 585,
                                                                                            "label": "code = code + \"\\n\\n\" + code_for_alias if code else code_for_alias",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 575,
                                                                                                    "end_token": 575,
                                                                                                    "label": "code",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "conditional_expression",
                                                                                                    "start_token": 577,
                                                                                                    "end_token": 585,
                                                                                                    "label": "code + \"\\n\\n\" + code_for_alias if code else code_for_alias",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "start_token": 577,
                                                                                                            "end_token": 581,
                                                                                                            "label": "code + \"\\n\\n\" + code_for_alias",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "start_token": 579,
                                                                                                                    "end_token": 579,
                                                                                                                    "label": "\"\\n\\n\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 581,
                                                                                                                    "end_token": 581,
                                                                                                                    "label": "code_for_alias",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 583,
                                                                                                            "end_token": 583,
                                                                                                            "label": "code",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 588,
                                                            "end_token": 604,
                                                            "label": "if code:  # Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "start_token": 588,
                                                                    "end_token": 590,
                                                                    "label": "if code:",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 589,
                                                                            "end_token": 589,
                                                                            "label": "code",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "true",
                                                                            "start_token": 590,
                                                                            "end_token": 590,
                                                                            "label": ":",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 591,
                                                                    "end_token": 604,
                                                                    "label": "# Only yield if there's actual code content\n                yield canonical_name, code\n\n        # Remove all code blocks from the text to get remaining text\n        pattern = (\n            r\"```(?:\"\n            + \"|\".join(\n                re.escape(alias)\n                for aliases in language_aliases.values()\n                for alias in aliases\n            )\n            + r\")\\s+[\\s\\S]*?```\"\n        )\n\n        remaining_text = re.sub(pattern, \"\", input_data.text).strip()\n        remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text)\n\n        if remaining_text:  # Only yield if there's remaining text\n            yield \"remaining_text\", remaining_text",
                                                                    "children": [
                                                                        {
                                                                            "type": "yield",
                                                                            "start_token": 601,
                                                                            "end_token": 604,
                                                                            "label": "yield \"remaining_text\", remaining_text",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 602,
                                                                                    "end_token": 602,
                                                                                    "label": "\"remaining_text\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 604,
                                                                                    "end_token": 604,
                                                                                    "label": "remaining_text",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "run",
                            "start_line": 52,
                            "end_line": 100
                        },
                        {
                            "type": "function_definition",
                            "start_token": 607,
                            "end_token": 730,
                            "label": "def extract_code(self, text: str, language: str) -> str:\n        # Escape special regex characters in the language string\n        language = re.escape(language)\n        # Extract all code blocks enclosed in ```language``` blocks\n        pattern = re.compile(rf\"```{language}\\s+(.*?)```\", re.DOTALL | re.IGNORECASE)\n        matches = pattern.finditer(text)\n        # Combine all code blocks for this language with newlines between them\n        code_blocks = [match.group(1).strip() for match in matches]\n        return \"\\n\\n\".join(code_blocks) if code_blocks else \"\"\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 608,
                                    "end_token": 608,
                                    "label": "extract_code",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 609,
                                    "end_token": 619,
                                    "label": "(self, text: str, language: str)",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 610,
                                            "end_token": 614,
                                            "label": "self, text: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 610,
                                                    "end_token": 610,
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 613,
                                                    "end_token": 614,
                                                    "label": ": str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 616,
                                            "end_token": 618,
                                            "label": "language: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 616,
                                                    "end_token": 616,
                                                    "label": "language",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 617,
                                                    "end_token": 618,
                                                    "label": ": str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 623,
                                    "end_token": 729,
                                    "label": ":\n        # Escape special regex characters in the language string\n        language = re.escape(language)\n        # Extract all code blocks enclosed in ```language``` blocks\n        pattern = re.compile(rf\"```{language}\\s+(.*?)```\", re.DOTALL | re.IGNORECASE)\n        matches = pattern.finditer(text)\n        # Combine all code blocks for this language with newlines between them\n        code_blocks = [match.group(1).strip() for match in matches]\n        return \"\\n\\n\".join(code_blocks) if code_blocks else \"\"",
                                    "children": [
                                        {
                                            "type": "comment",
                                            "start_token": 625,
                                            "end_token": 633,
                                            "label": "# Escape special regex characters in the language string",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 635,
                                            "end_token": 642,
                                            "label": "language = re.escape(language)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 635,
                                                    "end_token": 635,
                                                    "label": "language",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 637,
                                                    "end_token": 642,
                                                    "label": "re.escape(language)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 637,
                                                            "end_token": 639,
                                                            "label": "re.escape",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 637,
                                                                    "end_token": 637,
                                                                    "label": "re",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 639,
                                                                    "end_token": 639,
                                                                    "label": "escape",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 640,
                                                            "end_token": 641,
                                                            "label": "(language",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 641,
                                                                    "end_token": 641,
                                                                    "label": "language",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 644,
                                            "end_token": 658,
                                            "label": "# Extract all code blocks enclosed in ```language``` blocks",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 660,
                                            "end_token": 676,
                                            "label": "pattern = re.compile(rf\"```{language}\\s+(.*?)```\", re.DOTALL | re.IGNORECASE)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 660,
                                                    "end_token": 660,
                                                    "label": "pattern",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 662,
                                                    "end_token": 676,
                                                    "label": "re.compile(rf\"```{language}\\s+(.*?)```\", re.DOTALL | re.IGNORECASE)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 662,
                                                            "end_token": 664,
                                                            "label": "re.compile",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 662,
                                                                    "end_token": 662,
                                                                    "label": "re",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 664,
                                                                    "end_token": 664,
                                                                    "label": "compile",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 665,
                                                            "end_token": 676,
                                                            "label": "(rf\"```{language}\\s+(.*?)```\", re.DOTALL | re.IGNORECASE)",
                                                            "children": [
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "start_token": 666,
                                                                    "end_token": 667,
                                                                    "label": "rf\"```{language}\\s+(.*?)```\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 668,
                                                                    "end_token": 675,
                                                                    "label": ", re.DOTALL | re.IGNORECASE",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 669,
                                                                            "end_token": 671,
                                                                            "label": "re.DOTALL",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 669,
                                                                                    "end_token": 669,
                                                                                    "label": "re",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 671,
                                                                                    "end_token": 671,
                                                                                    "label": "DOTALL",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 673,
                                                                            "end_token": 675,
                                                                            "label": "re.IGNORECASE",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 673,
                                                                                    "end_token": 673,
                                                                                    "label": "re",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 675,
                                                                                    "end_token": 675,
                                                                                    "label": "IGNORECASE",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 678,
                                            "end_token": 685,
                                            "label": "matches = pattern.finditer(text)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 678,
                                                    "end_token": 678,
                                                    "label": "matches",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 680,
                                                    "end_token": 685,
                                                    "label": "pattern.finditer(text)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 680,
                                                            "end_token": 682,
                                                            "label": "pattern.finditer",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 680,
                                                                    "end_token": 680,
                                                                    "label": "pattern",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 682,
                                                                    "end_token": 682,
                                                                    "label": "finditer",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 683,
                                                            "end_token": 684,
                                                            "label": "(text",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 684,
                                                                    "end_token": 684,
                                                                    "label": "text",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 687,
                                            "end_token": 698,
                                            "label": "# Combine all code blocks for this language with newlines between them",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 700,
                                            "end_token": 717,
                                            "label": "code_blocks = [match.group(1).strip() for match in matches]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 700,
                                                    "end_token": 700,
                                                    "label": "code_blocks",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list_comprehension",
                                                    "start_token": 702,
                                                    "end_token": 717,
                                                    "label": "[match.group(1).strip() for match in matches]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 703,
                                                            "end_token": 712,
                                                            "label": "match.group(1).strip()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 703,
                                                                    "end_token": 705,
                                                                    "label": "match.group",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 703,
                                                                            "end_token": 704,
                                                                            "label": "match.",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 703,
                                                                                    "end_token": 703,
                                                                                    "label": "match",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 704,
                                                                                    "end_token": 704,
                                                                                    "label": ".",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 705,
                                                                            "end_token": 705,
                                                                            "label": "group",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 706,
                                                                    "end_token": 711,
                                                                    "label": "(1).strip(",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 713,
                                                            "end_token": 716,
                                                            "label": "for match in matches",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 714,
                                                                    "end_token": 714,
                                                                    "label": "match",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 716,
                                                                    "end_token": 716,
                                                                    "label": "matches",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 719,
                                            "end_token": 729,
                                            "label": "return \"\\n\\n\".join(code_blocks) if code_blocks else \"\"",
                                            "children": [
                                                {
                                                    "type": "conditional_expression",
                                                    "start_token": 720,
                                                    "end_token": 729,
                                                    "label": "\"\\n\\n\".join(code_blocks) if code_blocks else \"\"",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 720,
                                                            "end_token": 725,
                                                            "label": "\"\\n\\n\".join(code_blocks)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 720,
                                                                    "end_token": 722,
                                                                    "label": "\"\\n\\n\".join",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 720,
                                                                            "end_token": 720,
                                                                            "label": "\"\\n\\n\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 722,
                                                                            "end_token": 722,
                                                                            "label": "join",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 723,
                                                                    "end_token": 724,
                                                                    "label": "(code_blocks",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 724,
                                                                            "end_token": 724,
                                                                            "label": "code_blocks",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 726,
                                                            "end_token": 727,
                                                            "label": "if code_blocks",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 729,
                                                            "end_token": 729,
                                                            "label": "\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "extract_code",
                            "start_line": 102,
                            "end_line": 110
                        }
                    ]
                }
            ]
        }
    ]
}