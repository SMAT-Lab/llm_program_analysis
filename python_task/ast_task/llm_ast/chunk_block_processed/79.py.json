{
    "type": "module",
    "start_token": 0,
    "end_token": -1,
    "label": "",
    "children": [
        {
            "type": "function_definition",
            "start_token": -1,
            "end_token": -1,
            "label": "",
            "children": [
                {
                    "type": "identifier",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "string",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "return_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "start_token": -1,
            "end_token": -1,
            "label": "",
            "children": [
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": -1,
            "end_token": 3,
            "label": "",
            "children": [
                {
                    "type": "identifier",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "parameter",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": -1,
                    "end_token": -1,
                    "label": "",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": -1,
                            "end_token": -1,
                            "label": "",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "label": "",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "name": "binary_and",
            "start_line": 4,
            "end_line": 46
        },
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 3,
            "label": "# https://www.tutorialspoint.com/python3/bitwise_operators_example.htm\n\n\ndef binary_and(a: int, b: int) -> str:\n    \"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary and operation on the integers provided.\n\n    >>> binary_and(25, 32)\n    '0b000000'\n    >>> binary_and(37, 50)\n    '0b100000'\n    >>> binary_and(21, 30)\n    '0b10100'\n    >>> binary_and(58, 73)\n    '0b0001000'\n    >>> binary_and(0, 255)\n    '0b00000000'\n    >>> binary_and(256, 256)\n    '0b100000000'\n    >>> binary_and(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_and(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: Unknown format code 'b' for object of type 'float'\n    >>> binary_and(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = format(a, \"b\")\n    b_binary = format(b, \"b\")\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n",
            "children": []
        }
    ]
}