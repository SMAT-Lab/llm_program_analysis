{
    "type": "module",
    "start_token": 0,
    "end_token": 38,
    "children": [
        {
            "type": "string",
            "start_token": 1,
            "end_token": 3,
            "children": [],
            "label": "\"\"\"\nProblem:\n\nThe n queens problem is: placing N queens on a N * N chess board such that no queen\ncan attack any other queens placed on that chess board.  This means that one queen\ncannot have any other queen on its horizontal, vertical and diagonal lines.\n\nSolution:\n\nTo solve this problem we will use simple math. First we know the queen can move in all\nthe possible ways, we can simplify it in this: vertical, horizontal, diagonal left and\n diagonal right.\n\nWe can visualize it like this:\n\nleft diagonal = \\\nright diagonal = /\n\nOn a chessboard vertical movement could be the rows and horizontal movement could be\nthe columns.\n\nIn programming we can use an array, and in this array each index could be the rows and\neach value in the array could be the column. For example:\n\n    . Q . .     We have this chessboard with one queen in each column and each queen\n    . . . Q     can't attack to each other.\n    Q . . .     The array for this example would look like this: [1, 3, 0, 2]\n    . . Q .\n\nSo if we use an array and we verify that each value in the array is different to each\nother we know that at least the queens can't attack each other in horizontal and\nvertical.\n\nAt this point we have it halfway completed and we will treat the chessboard as a\nCartesian plane.  Hereinafter we are going to remember basic math, so in the school we\nlearned this formula:\n\n    Slope of a line:\n\n           y2 - y1\n     m = ----------\n          x2 - x1\n\nThis formula allow us to get the slope. For the angles 45º (right diagonal) and 135º\n(left diagonal) this formula gives us m = 1, and m = -1 respectively.\n\nSee::\nhttps://www.enotes.com/homework-help/write-equation-line-that-hits-origin-45-degree-1474860\n\nThen we have this other formula:\n\nSlope intercept:\n\ny = mx + b\n\nb is where the line crosses the Y axis (to get more information see:\nhttps://www.mathsisfun.com/y_intercept.html), if we change the formula to solve for b\nwe would have:\n\ny - mx = b\n\nAnd since we already have the m values for the angles 45º and 135º, this formula would\nlook like this:\n\n45º: y - (1)x = b\n45º: y - x = b\n\n135º: y - (-1)x = b\n135º: y + x = b\n\ny = row\nx = column\n\nApplying these two formulas we can check if a queen in some position is being attacked\nfor another one or vice versa.\n\n\"\"\""
        },
        {
            "type": "future_import_statement",
            "start_token": 6,
            "end_token": 9,
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 6,
                    "end_token": 7,
                    "children": [],
                    "label": "from __future__"
                },
                {
                    "type": "import_from_statement",
                    "start_token": 8,
                    "end_token": 9,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 8,
                            "end_token": 8,
                            "children": [],
                            "label": "import"
                        }
                    ],
                    "label": "import annotations"
                }
            ],
            "label": "from __future__ import annotations"
        },
        {
            "type": "block",
            "start_token": 17,
            "end_token": 38,
            "children": [
                {
                    "type": "if_statement",
                    "start_token": 17,
                    "end_token": 23,
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 18,
                            "end_token": 21,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 18,
                                    "end_token": 18,
                                    "children": [],
                                    "label": "__name__"
                                },
                                {
                                    "type": "string",
                                    "start_token": 21,
                                    "end_token": 21,
                                    "children": [],
                                    "label": "\"__main__\""
                                }
                            ],
                            "label": "__name__ == \"__main__\""
                        }
                    ],
                    "label": "if __name__ == \"__main__\":\n"
                },
                {
                    "type": "import_statement",
                    "start_token": 24,
                    "end_token": 25,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 24,
                            "end_token": 24,
                            "children": [],
                            "label": "import"
                        }
                    ],
                    "label": "import doctest"
                },
                {
                    "type": "call",
                    "start_token": 28,
                    "end_token": 32,
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 28,
                            "end_token": 29,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 28,
                                    "end_token": 28,
                                    "children": [],
                                    "label": "doctest"
                                }
                            ],
                            "label": "doctest."
                        },
                        {
                            "type": "argument_list",
                            "start_token": 31,
                            "end_token": 31,
                            "children": [],
                            "label": "("
                        }
                    ],
                    "label": "doctest.testmod()"
                },
                {
                    "type": "call",
                    "start_token": 34,
                    "end_token": 37,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 34,
                            "end_token": 34,
                            "children": [],
                            "label": "n_queens_solution"
                        },
                        {
                            "type": "argument_list",
                            "start_token": 36,
                            "end_token": 36,
                            "children": [
                                {
                                    "type": "integer",
                                    "start_token": 36,
                                    "end_token": 36,
                                    "children": [],
                                    "label": "4"
                                }
                            ],
                            "label": "4"
                        }
                    ],
                    "label": "n_queens_solution(4)"
                }
            ],
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    n_queens_solution(4)\n"
        },
        {
            "type": "function_placeholder",
            "name": "depth_first_search",
            "start_line": 82,
            "end_line": 138,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 440,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 440,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "depth_first_search"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 44,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 4,
                                                    "end_token": 4,
                                                    "label": "possible_board"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 5,
                                                    "end_token": 9,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 6,
                                                            "end_token": 9,
                                                            "label": "list[int]"
                                                        }
                                                    ],
                                                    "label": ": list[int]"
                                                }
                                            ],
                                            "label": "\n    possible_board: list[int]"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 11,
                                            "end_token": 17,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 12,
                                                    "end_token": 12,
                                                    "label": "diagonal_right_collisions"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 13,
                                                    "end_token": 17,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 14,
                                                            "end_token": 17,
                                                            "label": "list[int]"
                                                        }
                                                    ],
                                                    "label": ": list[int]"
                                                }
                                            ],
                                            "label": "\n    diagonal_right_collisions: list[int]"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 19,
                                            "end_token": 25,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 20,
                                                    "end_token": 20,
                                                    "label": "diagonal_left_collisions"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 21,
                                                    "end_token": 25,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 22,
                                                            "end_token": 25,
                                                            "label": "list[int]"
                                                        }
                                                    ],
                                                    "label": ": list[int]"
                                                }
                                            ],
                                            "label": "\n    diagonal_left_collisions: list[int]"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 27,
                                            "end_token": 36,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 28,
                                                    "end_token": 28,
                                                    "label": "boards"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 29,
                                                    "end_token": 36,
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "start_token": 30,
                                                            "end_token": 34,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 31,
                                                                    "end_token": 34,
                                                                    "label": "[list[str"
                                                                }
                                                            ],
                                                            "label": "list[list[str"
                                                        }
                                                    ],
                                                    "label": ": list[list[str]]"
                                                }
                                            ],
                                            "label": "\n    boards: list[list[str]]"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 38,
                                            "end_token": 41,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 39,
                                                    "end_token": 39,
                                                    "label": "n"
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 40,
                                                    "end_token": 41,
                                                    "label": ": int"
                                                }
                                            ],
                                            "label": "\n    n: int"
                                        }
                                    ],
                                    "label": "(\n    possible_board: list[int],\n    diagonal_right_collisions: list[int],\n    diagonal_left_collisions: list[int],\n    boards: list[list[str]],\n    n: int,\n)"
                                },
                                {
                                    "type": "block",
                                    "start_token": 48,
                                    "end_token": 440,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "start_token": 55,
                                            "end_token": 72,
                                            "label": "# Get next row in the current board (possible_board) to fill it with a queen\n"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 73,
                                            "end_token": 78,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 73,
                                                    "end_token": 73,
                                                    "label": "row"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 75,
                                                    "end_token": 78,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 75,
                                                            "end_token": 75,
                                                            "label": "len"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 76,
                                                            "end_token": 78,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 77,
                                                                    "end_token": 78,
                                                                    "label": "possible_board)"
                                                                }
                                                            ],
                                                            "label": "(possible_board)"
                                                        }
                                                    ],
                                                    "label": "len(possible_board)"
                                                }
                                            ],
                                            "label": "row = len(possible_board)"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 111,
                                            "end_token": 180,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 112,
                                                    "end_token": 115,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 112,
                                                            "end_token": 112,
                                                            "label": "row"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 114,
                                                            "end_token": 115,
                                                            "label": "= n"
                                                        }
                                                    ],
                                                    "label": "row == n"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 116,
                                                    "end_token": 180,
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 153,
                                                            "end_token": 178,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 153,
                                                                    "end_token": 178,
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 153,
                                                                            "end_token": 155,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 153,
                                                                                    "end_token": 154,
                                                                                    "label": "boards."
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 155,
                                                                                    "end_token": 155,
                                                                                    "label": "append"
                                                                                }
                                                                            ],
                                                                            "label": "boards.append"
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "start_token": 156,
                                                                            "end_token": 177,
                                                                            "children": [
                                                                                {
                                                                                    "type": "list_comprehension",
                                                                                    "start_token": 157,
                                                                                    "end_token": 177,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "concatenated_string",
                                                                                            "start_token": 157,
                                                                                            "end_token": 172,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 158,
                                                                                                    "end_token": 162,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "start_token": 158,
                                                                                                            "end_token": 159,
                                                                                                            "label": "\". \" *"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "start_token": 160,
                                                                                                            "end_token": 162,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 160,
                                                                                                                    "end_token": 160,
                                                                                                                    "label": "i"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "start_token": 162,
                                                                                                                    "end_token": 162,
                                                                                                                    "label": "\"Q \""
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "i + \"Q \""
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "\". \" * i + \"Q \""
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 163,
                                                                                                    "end_token": 171,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "start_token": 163,
                                                                                                            "end_token": 164,
                                                                                                            "label": "+ \". \""
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "start_token": 165,
                                                                                                            "end_token": 171,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "binary_operator",
                                                                                                                    "start_token": 166,
                                                                                                                    "end_token": 169,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "start_token": 166,
                                                                                                                            "end_token": 166,
                                                                                                                            "label": "("
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "integer",
                                                                                                                            "start_token": 168,
                                                                                                                            "end_token": 168,
                                                                                                                            "label": "-"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "start_token": 170,
                                                                                                                            "end_token": 170,
                                                                                                                            "label": "-"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "label": "(n - 1"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "start_token": 171,
                                                                                                                    "end_token": 171,
                                                                                                                    "label": "i"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "* (n - 1 - i"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "+ \". \" * (n - 1 - i"
                                                                                                }
                                                                                            ],
                                                                                            "label": "[\". \" * i + \"Q \" + \". \" * (n - 1 - i)"
                                                                                        },
                                                                                        {
                                                                                            "type": "for_in_clause",
                                                                                            "start_token": 173,
                                                                                            "end_token": 176,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 174,
                                                                                                    "end_token": 174,
                                                                                                    "label": "i"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 176,
                                                                                                    "end_token": 176,
                                                                                                    "label": "possible_board"
                                                                                                }
                                                                                            ],
                                                                                            "label": "for i in possible_board"
                                                                                        }
                                                                                    ],
                                                                                    "label": "[\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board]"
                                                                                }
                                                                            ],
                                                                            "label": "([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board]"
                                                                        }
                                                                    ],
                                                                    "label": "boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])"
                                                                }
                                                            ],
                                                            "label": "boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])"
                                                        },
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 180,
                                                            "end_token": 180,
                                                            "label": "return"
                                                        }
                                                    ],
                                                    "label": ":\n        # We convert the variable possible_board that looks like this: [1, 3, 0, 2] to\n        # this: ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n        boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])\n        return"
                                                }
                                            ],
                                            "label": "if row == n:\n        # We convert the variable possible_board that looks like this: [1, 3, 0, 2] to\n        # this: ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n        boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])\n        return"
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 200,
                                            "end_token": 440,
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": 200,
                                                    "end_token": 206,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 201,
                                                            "end_token": 201,
                                                            "label": "col"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 203,
                                                            "end_token": 206,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 203,
                                                                    "end_token": 203,
                                                                    "label": "range"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 205,
                                                                    "end_token": 205,
                                                                    "label": "n"
                                                                }
                                                            ],
                                                            "label": "range(n)"
                                                        }
                                                    ],
                                                    "label": "for col in range(n)"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 207,
                                                    "end_token": 440,
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 360,
                                                            "end_token": 384,
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "start_token": 361,
                                                                    "end_token": 379,
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "start_token": 363,
                                                                            "end_token": 365,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 363,
                                                                                    "end_token": 363,
                                                                                    "label": "col"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 365,
                                                                                    "end_token": 365,
                                                                                    "label": "possible_board"
                                                                                }
                                                                            ],
                                                                            "label": "col in possible_board"
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "start_token": 368,
                                                                            "end_token": 372,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 369,
                                                                                    "end_token": 370,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 369,
                                                                                            "end_token": 369,
                                                                                            "label": "-"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 370,
                                                                                            "end_token": 370,
                                                                                            "label": "col"
                                                                                        }
                                                                                    ],
                                                                                    "label": "- col"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 372,
                                                                                    "end_token": 372,
                                                                                    "label": "diagonal_right_collisions"
                                                                                }
                                                                            ],
                                                                            "label": "row - col in diagonal_right_collisions"
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "start_token": 375,
                                                                            "end_token": 379,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 376,
                                                                                    "end_token": 377,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 376,
                                                                                            "end_token": 376,
                                                                                            "label": "+"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 377,
                                                                                            "end_token": 377,
                                                                                            "label": "col"
                                                                                        }
                                                                                    ],
                                                                                    "label": "+ col"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 379,
                                                                                    "end_token": 379,
                                                                                    "label": "diagonal_left_collisions"
                                                                                }
                                                                            ],
                                                                            "label": "row + col in diagonal_left_collisions"
                                                                        }
                                                                    ],
                                                                    "label": "(\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions"
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 382,
                                                                    "end_token": 384,
                                                                    "children": [
                                                                        {
                                                                            "type": "continue_statement",
                                                                            "start_token": 384,
                                                                            "end_token": 384,
                                                                            "label": "continue"
                                                                        }
                                                                    ],
                                                                    "label": ":\n            continue"
                                                                }
                                                            ],
                                                            "label": "if (\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions\n        ):\n            continue"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 403,
                                                            "end_token": 440,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 403,
                                                                    "end_token": 403,
                                                                    "label": "depth_first_search"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 404,
                                                                    "end_token": 440,
                                                                    "children": [
                                                                        {
                                                                            "type": "list",
                                                                            "start_token": 406,
                                                                            "end_token": 411,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 408,
                                                                                    "end_token": 408,
                                                                                    "label": "possible_board"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 410,
                                                                                    "end_token": 410,
                                                                                    "label": "col"
                                                                                }
                                                                            ],
                                                                            "label": "[*possible_board, col]"
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "start_token": 414,
                                                                            "end_token": 421,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 416,
                                                                                    "end_token": 416,
                                                                                    "label": "diagonal_right_collisions"
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 419,
                                                                                    "end_token": 420,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 419,
                                                                                            "end_token": 419,
                                                                                            "label": "-"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 420,
                                                                                            "end_token": 420,
                                                                                            "label": "col"
                                                                                        }
                                                                                    ],
                                                                                    "label": "- col"
                                                                                }
                                                                            ],
                                                                            "label": "[*diagonal_right_collisions, row - col]"
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "start_token": 424,
                                                                            "end_token": 431,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 426,
                                                                                    "end_token": 426,
                                                                                    "label": "diagonal_left_collisions"
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 429,
                                                                                    "end_token": 430,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 429,
                                                                                            "end_token": 429,
                                                                                            "label": "+"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 430,
                                                                                            "end_token": 430,
                                                                                            "label": "col"
                                                                                        }
                                                                                    ],
                                                                                    "label": "+ col"
                                                                                }
                                                                            ],
                                                                            "label": "[*diagonal_left_collisions, row + col]"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 434,
                                                                            "end_token": 434,
                                                                            "label": "boards"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 437,
                                                                            "end_token": 437,
                                                                            "label": "n"
                                                                        }
                                                                    ],
                                                                    "label": "(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                                                                }
                                                            ],
                                                            "label": "depth_first_search(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                                                        }
                                                    ],
                                                    "label": ":\n        # We apply that we learned previously. First we check that in the current board\n        # (possible_board) there are not other same value because if there is it means\n        # that there are a collision in vertical. Then we apply the two formulas we\n        # learned before:\n        #\n        # 45º: y - x = b or 45: row - col = b\n        # 135º: y + x = b or row + col = b.\n        #\n        # And we verify if the results of this two formulas not exist in their variables\n        # respectively.  (diagonal_right_collisions, diagonal_left_collisions)\n        #\n        # If any or these are True it means there is a collision so we continue to the\n        # next value in the for loop.\n        if (\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions\n        ):\n            continue\n\n        # If it is False we call dfs function again and we update the inputs\n        depth_first_search(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                                                }
                                            ],
                                            "label": "for col in range(n):\n        # We apply that we learned previously. First we check that in the current board\n        # (possible_board) there are not other same value because if there is it means\n        # that there are a collision in vertical. Then we apply the two formulas we\n        # learned before:\n        #\n        # 45º: y - x = b or 45: row - col = b\n        # 135º: y + x = b or row + col = b.\n        #\n        # And we verify if the results of this two formulas not exist in their variables\n        # respectively.  (diagonal_right_collisions, diagonal_left_collisions)\n        #\n        # If any or these are True it means there is a collision so we continue to the\n        # next value in the for loop.\n        if (\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions\n        ):\n            continue\n\n        # If it is False we call dfs function again and we update the inputs\n        depth_first_search(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                                        }
                                    ],
                                    "label": ":\n    \"\"\"\n    >>> boards = []\n    >>> depth_first_search([], [], [], boards, 4)\n    >>> for board in boards:\n    ...     print(board)\n    ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n    ['. . Q . ', 'Q . . . ', '. . . Q ', '. Q . . ']\n    \"\"\"\n\n    # Get next row in the current board (possible_board) to fill it with a queen\n    row = len(possible_board)\n\n    # If row is equal to the size of the board it means there are a queen in each row in\n    # the current board (possible_board)\n    if row == n:\n        # We convert the variable possible_board that looks like this: [1, 3, 0, 2] to\n        # this: ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n        boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])\n        return\n\n    # We iterate each column in the row to find all possible results in each row\n    for col in range(n):\n        # We apply that we learned previously. First we check that in the current board\n        # (possible_board) there are not other same value because if there is it means\n        # that there are a collision in vertical. Then we apply the two formulas we\n        # learned before:\n        #\n        # 45º: y - x = b or 45: row - col = b\n        # 135º: y + x = b or row + col = b.\n        #\n        # And we verify if the results of this two formulas not exist in their variables\n        # respectively.  (diagonal_right_collisions, diagonal_left_collisions)\n        #\n        # If any or these are True it means there is a collision so we continue to the\n        # next value in the for loop.\n        if (\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions\n        ):\n            continue\n\n        # If it is False we call dfs function again and we update the inputs\n        depth_first_search(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                                }
                            ],
                            "label": "def depth_first_search(\n    possible_board: list[int],\n    diagonal_right_collisions: list[int],\n    diagonal_left_collisions: list[int],\n    boards: list[list[str]],\n    n: int,\n) -> None:\n    \"\"\"\n    >>> boards = []\n    >>> depth_first_search([], [], [], boards, 4)\n    >>> for board in boards:\n    ...     print(board)\n    ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n    ['. . Q . ', 'Q . . . ', '. . . Q ', '. Q . . ']\n    \"\"\"\n\n    # Get next row in the current board (possible_board) to fill it with a queen\n    row = len(possible_board)\n\n    # If row is equal to the size of the board it means there are a queen in each row in\n    # the current board (possible_board)\n    if row == n:\n        # We convert the variable possible_board that looks like this: [1, 3, 0, 2] to\n        # this: ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n        boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])\n        return\n\n    # We iterate each column in the row to find all possible results in each row\n    for col in range(n):\n        # We apply that we learned previously. First we check that in the current board\n        # (possible_board) there are not other same value because if there is it means\n        # that there are a collision in vertical. Then we apply the two formulas we\n        # learned before:\n        #\n        # 45º: y - x = b or 45: row - col = b\n        # 135º: y + x = b or row + col = b.\n        #\n        # And we verify if the results of this two formulas not exist in their variables\n        # respectively.  (diagonal_right_collisions, diagonal_left_collisions)\n        #\n        # If any or these are True it means there is a collision so we continue to the\n        # next value in the for loop.\n        if (\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions\n        ):\n            continue\n\n        # If it is False we call dfs function again and we update the inputs\n        depth_first_search(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                        }
                    ],
                    "label": "def depth_first_search(\n    possible_board: list[int],\n    diagonal_right_collisions: list[int],\n    diagonal_left_collisions: list[int],\n    boards: list[list[str]],\n    n: int,\n) -> None:\n    \"\"\"\n    >>> boards = []\n    >>> depth_first_search([], [], [], boards, 4)\n    >>> for board in boards:\n    ...     print(board)\n    ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n    ['. . Q . ', 'Q . . . ', '. . . Q ', '. Q . . ']\n    \"\"\"\n\n    # Get next row in the current board (possible_board) to fill it with a queen\n    row = len(possible_board)\n\n    # If row is equal to the size of the board it means there are a queen in each row in\n    # the current board (possible_board)\n    if row == n:\n        # We convert the variable possible_board that looks like this: [1, 3, 0, 2] to\n        # this: ['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n        boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])\n        return\n\n    # We iterate each column in the row to find all possible results in each row\n    for col in range(n):\n        # We apply that we learned previously. First we check that in the current board\n        # (possible_board) there are not other same value because if there is it means\n        # that there are a collision in vertical. Then we apply the two formulas we\n        # learned before:\n        #\n        # 45º: y - x = b or 45: row - col = b\n        # 135º: y + x = b or row + col = b.\n        #\n        # And we verify if the results of this two formulas not exist in their variables\n        # respectively.  (diagonal_right_collisions, diagonal_left_collisions)\n        #\n        # If any or these are True it means there is a collision so we continue to the\n        # next value in the for loop.\n        if (\n            col in possible_board\n            or row - col in diagonal_right_collisions\n            or row + col in diagonal_left_collisions\n        ):\n            continue\n\n        # If it is False we call dfs function again and we update the inputs\n        depth_first_search(\n            [*possible_board, col],\n            [*diagonal_right_collisions, row - col],\n            [*diagonal_left_collisions, row + col],\n            boards,\n            n,\n        )"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "n_queens_solution",
            "start_line": 141,
            "end_line": 151,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 79,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 79,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "n_queens_solution"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "label": "n"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "n: int"
                                        }
                                    ],
                                    "label": "(n: int)"
                                },
                                {
                                    "type": "none",
                                    "start_token": 9,
                                    "end_token": 9,
                                    "label": "None"
                                },
                                {
                                    "type": "block",
                                    "start_token": 11,
                                    "end_token": 79,
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 12,
                                            "end_token": 23,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 12,
                                                    "end_token": 12,
                                                    "label": "boards"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 14,
                                                    "end_token": 20,
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "start_token": 15,
                                                            "end_token": 19,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 18,
                                                                    "end_token": 18,
                                                                    "label": "str"
                                                                }
                                                            ],
                                                            "label": "[list[str]"
                                                        }
                                                    ],
                                                    "label": "list[list[str]]"
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 22,
                                                    "end_token": 23,
                                                    "label": "[]"
                                                }
                                            ],
                                            "label": "boards: list[list[str]] = []"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 25,
                                            "end_token": 39,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 25,
                                                    "end_token": 39,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 25,
                                                            "end_token": 25,
                                                            "label": "depth_first_search"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 26,
                                                            "end_token": 39,
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 27,
                                                                    "end_token": 28,
                                                                    "label": "[]"
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 30,
                                                                    "end_token": 31,
                                                                    "label": "[]"
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 33,
                                                                    "end_token": 34,
                                                                    "label": "[]"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 36,
                                                                    "end_token": 36,
                                                                    "label": "boards"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 38,
                                                                    "end_token": 38,
                                                                    "label": "n"
                                                                }
                                                            ],
                                                            "label": "([], [], [], boards, n)"
                                                        }
                                                    ],
                                                    "label": "depth_first_search([], [], [], boards, n)"
                                                }
                                            ],
                                            "label": "depth_first_search([], [], [], boards, n)"
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 42,
                                            "end_token": 46,
                                            "label": "# Print all the boards"
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 48,
                                            "end_token": 69,
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": 48,
                                                    "end_token": 51,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 49,
                                                            "end_token": 49,
                                                            "label": "board"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 51,
                                                            "end_token": 51,
                                                            "label": "boards"
                                                        }
                                                    ],
                                                    "label": "for board in boards"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 52,
                                                    "end_token": 69,
                                                    "children": [
                                                        {
                                                            "type": "for_statement",
                                                            "start_token": 54,
                                                            "end_token": 63,
                                                            "children": [
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "start_token": 54,
                                                                    "end_token": 57,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 55,
                                                                            "end_token": 55,
                                                                            "label": "column"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 57,
                                                                            "end_token": 57,
                                                                            "label": "board"
                                                                        }
                                                                    ],
                                                                    "label": "for column in board"
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 58,
                                                                    "end_token": 63,
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "start_token": 60,
                                                                            "end_token": 63,
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 60,
                                                                                    "end_token": 63,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 60,
                                                                                            "end_token": 60,
                                                                                            "label": "print"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 61,
                                                                                            "end_token": 62,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 62,
                                                                                                    "end_token": 62,
                                                                                                    "label": "column"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(column"
                                                                                        }
                                                                                    ],
                                                                                    "label": "print(column)"
                                                                                }
                                                                            ],
                                                                            "label": "print(column)"
                                                                        }
                                                                    ],
                                                                    "label": ":\n            print(column)"
                                                                }
                                                            ],
                                                            "label": "for column in board:\n            print(column)"
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 65,
                                                            "end_token": 68,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 65,
                                                                    "end_token": 68,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 65,
                                                                            "end_token": 65,
                                                                            "label": "print"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 66,
                                                                            "end_token": 67,
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 67,
                                                                                    "end_token": 67,
                                                                                    "label": "\"\""
                                                                                }
                                                                            ],
                                                                            "label": "(\"\""
                                                                        }
                                                                    ],
                                                                    "label": "print(\"\")"
                                                                }
                                                            ],
                                                            "label": "print(\"\")"
                                                        }
                                                    ],
                                                    "label": ":\n        for column in board:\n            print(column)\n        print(\"\")\n"
                                                }
                                            ],
                                            "label": "for board in boards:\n        for column in board:\n            print(column)\n        print(\"\")\n"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 71,
                                            "end_token": 79,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 71,
                                                    "end_token": 79,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 71,
                                                            "end_token": 71,
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 72,
                                                            "end_token": 78,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 73,
                                                                    "end_token": 75,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 73,
                                                                            "end_token": 73,
                                                                            "label": "len"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 74,
                                                                            "end_token": 74,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 75,
                                                                                    "end_token": 75,
                                                                                    "label": "boards"
                                                                                }
                                                                            ],
                                                                            "label": "("
                                                                        }
                                                                    ],
                                                                    "label": "len(boards"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 78,
                                                                    "end_token": 78,
                                                                    "label": "\"solutions were found.\""
                                                                }
                                                            ],
                                                            "label": "(len(boards), \"solutions were found.\""
                                                        }
                                                    ],
                                                    "label": "print(len(boards), \"solutions were found.\")"
                                                }
                                            ],
                                            "label": "print(len(boards), \"solutions were found.\")"
                                        }
                                    ],
                                    "label": "\n    boards: list[list[str]] = []\n    depth_first_search([], [], [], boards, n)\n\n    # Print all the boards\n    for board in boards:\n        for column in board:\n            print(column)\n        print(\"\")\n\n    print(len(boards), \"solutions were found.\")"
                                }
                            ],
                            "label": "def n_queens_solution(n: int) -> None:\n    boards: list[list[str]] = []\n    depth_first_search([], [], [], boards, n)\n\n    # Print all the boards\n    for board in boards:\n        for column in board:\n            print(column)\n        print(\"\")\n\n    print(len(boards), \"solutions were found.\")"
                        }
                    ],
                    "label": "def n_queens_solution(n: int) -> None:\n    boards: list[list[str]] = []\n    depth_first_search([], [], [], boards, n)\n\n    # Print all the boards\n    for board in boards:\n        for column in board:\n            print(column)\n        print(\"\")\n\n    print(len(boards), \"solutions were found.\")"
                }
            ]
        }
    ],
    "label": "r\"\"\"\nProblem:\n\nThe n queens problem is: placing N queens on a N * N chess board such that no queen\ncan attack any other queens placed on that chess board.  This means that one queen\ncannot have any other queen on its horizontal, vertical and diagonal lines.\n\nSolution:\n\nTo solve this problem we will use simple math. First we know the queen can move in all\nthe possible ways, we can simplify it in this: vertical, horizontal, diagonal left and\n diagonal right.\n\nWe can visualize it like this:\n\nleft diagonal = \\\nright diagonal = /\n\nOn a chessboard vertical movement could be the rows and horizontal movement could be\nthe columns.\n\nIn programming we can use an array, and in this array each index could be the rows and\neach value in the array could be the column. For example:\n\n    . Q . .     We have this chessboard with one queen in each column and each queen\n    . . . Q     can't attack to each other.\n    Q . . .     The array for this example would look like this: [1, 3, 0, 2]\n    . . Q .\n\nSo if we use an array and we verify that each value in the array is different to each\nother we know that at least the queens can't attack each other in horizontal and\nvertical.\n\nAt this point we have it halfway completed and we will treat the chessboard as a\nCartesian plane.  Hereinafter we are going to remember basic math, so in the school we\nlearned this formula:\n\n    Slope of a line:\n\n           y2 - y1\n     m = ----------\n          x2 - x1\n\nThis formula allow us to get the slope. For the angles 45º (right diagonal) and 135º\n(left diagonal) this formula gives us m = 1, and m = -1 respectively.\n\nSee::\nhttps://www.enotes.com/homework-help/write-equation-line-that-hits-origin-45-degree-1474860\n\nThen we have this other formula:\n\nSlope intercept:\n\ny = mx + b\n\nb is where the line crosses the Y axis (to get more information see:\nhttps://www.mathsisfun.com/y_intercept.html), if we change the formula to solve for b\nwe would have:\n\ny - mx = b\n\nAnd since we already have the m values for the angles 45º and 135º, this formula would\nlook like this:\n\n45º: y - (1)x = b\n45º: y - x = b\n\n135º: y - (-1)x = b\n135º: y + x = b\n\ny = row\nx = column\n\nApplying these two formulas we can check if a queen in some position is being attacked\nfor another one or vice versa.\n\n\"\"\"\n\nfrom __future__ import annotations\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    n_queens_solution(4)\n"
}