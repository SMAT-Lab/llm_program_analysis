{
    "type": "module",
    "start_token": 0,
    "end_token": 313,
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "label": "import asyncio"
        },
        {
            "type": "import_statement",
            "start_token": 3,
            "end_token": 4,
            "label": "import random"
        },
        {
            "type": "import_from_statement",
            "start_token": 6,
            "end_token": 9,
            "label": "from datetime import datetime"
        },
        {
            "type": "import_statement",
            "start_token": 12,
            "end_token": 15,
            "label": "import prisma.enums"
        },
        {
            "type": "import_from_statement",
            "start_token": 17,
            "end_token": 20,
            "label": "from faker import Faker"
        },
        {
            "type": "import_from_statement",
            "start_token": 22,
            "end_token": 25,
            "label": "from prisma import Prisma"
        },
        {
            "type": "assignment",
            "start_token": 28,
            "end_token": 32,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 28,
                    "end_token": 28,
                    "label": "faker"
                },
                {
                    "type": "call",
                    "start_token": 30,
                    "end_token": 32,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 30,
                            "end_token": 30,
                            "label": "Faker"
                        },
                        {
                            "type": "argument_list",
                            "start_token": 31,
                            "end_token": 32,
                            "label": "()"
                        }
                    ],
                    "label": "Faker()"
                }
            ],
            "label": "faker = Faker()"
        },
        {
            "type": "block",
            "start_token": 35,
            "end_token": 296,
            "children": [
                {
                    "type": "assignment",
                    "start_token": 47,
                    "end_token": 49,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 47,
                            "end_token": 47,
                            "label": "NUM_USERS"
                        },
                        {
                            "type": "integer",
                            "start_token": 49,
                            "end_token": 49,
                            "label": "100"
                        }
                    ],
                    "label": "NUM_USERS = 100"
                },
                {
                    "type": "assignment",
                    "start_token": 56,
                    "end_token": 58,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 56,
                            "end_token": 56,
                            "label": "NUM_AGENT_BLOCKS"
                        },
                        {
                            "type": "integer",
                            "start_token": 58,
                            "end_token": 58,
                            "label": "100"
                        }
                    ],
                    "label": "NUM_AGENT_BLOCKS = 100"
                },
                {
                    "type": "assignment",
                    "start_token": 73,
                    "end_token": 75,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 73,
                            "end_token": 73,
                            "label": "MIN_GRAPHS_PER_USER"
                        },
                        {
                            "type": "integer",
                            "start_token": 75,
                            "end_token": 75,
                            "label": "1"
                        }
                    ],
                    "label": "MIN_GRAPHS_PER_USER = 1"
                },
                {
                    "type": "assignment",
                    "start_token": 87,
                    "end_token": 89,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 87,
                            "end_token": 87,
                            "label": "MAX_GRAPHS_PER_USER"
                        },
                        {
                            "type": "integer",
                            "start_token": 89,
                            "end_token": 89,
                            "label": "5"
                        }
                    ],
                    "label": "MAX_GRAPHS_PER_USER = 5"
                },
                {
                    "type": "assignment",
                    "start_token": 112,
                    "end_token": 114,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 112,
                            "end_token": 112,
                            "label": "MIN_NODES_PER_GRAPH"
                        },
                        {
                            "type": "integer",
                            "start_token": 114,
                            "end_token": 114,
                            "label": "2"
                        }
                    ],
                    "label": "MIN_NODES_PER_GRAPH = 2"
                },
                {
                    "type": "assignment",
                    "start_token": 126,
                    "end_token": 148,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 126,
                            "end_token": 126,
                            "label": "MAX_NODES_PER_GRAPH"
                        },
                        {
                            "type": "parenthesized_expression",
                            "start_token": 128,
                            "end_token": 148,
                            "children": [
                                {
                                    "type": "integer",
                                    "start_token": 130,
                                    "end_token": 130,
                                    "label": "5"
                                }
                            ],
                            "label": "(\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)"
                        }
                    ],
                    "label": "MAX_NODES_PER_GRAPH = (\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)"
                },
                {
                    "type": "assignment",
                    "start_token": 158,
                    "end_token": 160,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 158,
                            "end_token": 158,
                            "label": "MIN_PRESETS_PER_USER"
                        },
                        {
                            "type": "integer",
                            "start_token": 160,
                            "end_token": 160,
                            "label": "1"
                        }
                    ],
                    "label": "MIN_PRESETS_PER_USER = 1"
                },
                {
                    "type": "assignment",
                    "start_token": 172,
                    "end_token": 174,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 172,
                            "end_token": 172,
                            "label": "MAX_PRESETS_PER_USER"
                        },
                        {
                            "type": "integer",
                            "start_token": 174,
                            "end_token": 174,
                            "label": "5"
                        }
                    ],
                    "label": "MAX_PRESETS_PER_USER = 5"
                },
                {
                    "type": "assignment",
                    "start_token": 190,
                    "end_token": 192,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 190,
                            "end_token": 190,
                            "label": "MIN_AGENTS_PER_USER"
                        },
                        {
                            "type": "integer",
                            "start_token": 192,
                            "end_token": 192,
                            "label": "1"
                        }
                    ],
                    "label": "MIN_AGENTS_PER_USER = 1"
                },
                {
                    "type": "assignment",
                    "start_token": 204,
                    "end_token": 206,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 204,
                            "end_token": 204,
                            "label": "MAX_AGENTS_PER_USER"
                        },
                        {
                            "type": "integer",
                            "start_token": 206,
                            "end_token": 206,
                            "label": "10"
                        }
                    ],
                    "label": "MAX_AGENTS_PER_USER = 10"
                },
                {
                    "type": "assignment",
                    "start_token": 229,
                    "end_token": 231,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 229,
                            "end_token": 229,
                            "label": "MIN_EXECUTIONS_PER_GRAPH"
                        },
                        {
                            "type": "integer",
                            "start_token": 231,
                            "end_token": 231,
                            "label": "1"
                        }
                    ],
                    "label": "MIN_EXECUTIONS_PER_GRAPH = 1"
                },
                {
                    "type": "assignment",
                    "start_token": 244,
                    "end_token": 264,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 244,
                            "end_token": 244,
                            "label": "MAX_EXECUTIONS_PER_GRAPH"
                        },
                        {
                            "type": "parenthesized_expression",
                            "start_token": 246,
                            "end_token": 264,
                            "children": [
                                {
                                    "type": "integer",
                                    "start_token": 248,
                                    "end_token": 248,
                                    "label": "20"
                                }
                            ],
                            "label": "(\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)"
                        }
                    ],
                    "label": "MAX_EXECUTIONS_PER_GRAPH = (\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)"
                },
                {
                    "type": "assignment",
                    "start_token": 266,
                    "end_token": 268,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 266,
                            "end_token": 266,
                            "label": "MIN_REVIEWS_PER_VERSION"
                        },
                        {
                            "type": "integer",
                            "start_token": 268,
                            "end_token": 268,
                            "label": "1"
                        }
                    ],
                    "label": "MIN_REVIEWS_PER_VERSION = 1"
                },
                {
                    "type": "assignment",
                    "start_token": 280,
                    "end_token": 282,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 280,
                            "end_token": 280,
                            "label": "MAX_REVIEWS_PER_VERSION"
                        },
                        {
                            "type": "integer",
                            "start_token": 282,
                            "end_token": 282,
                            "label": "5"
                        }
                    ],
                    "label": "MAX_REVIEWS_PER_VERSION = 5"
                }
            ],
            "label": "# Constants for data generation limits\n\n# Base entities\nNUM_USERS = 100  # Creates 100 user records\nNUM_AGENT_BLOCKS = 100  # Creates 100 agent block templates\n\n# Per-user entities\nMIN_GRAPHS_PER_USER = 1  # Each user will have between 1-5 graphs\nMAX_GRAPHS_PER_USER = 5  # Total graphs: 500-2500 (NUM_USERS * MIN/MAX_GRAPHS)\n\n# Per-graph entities\nMIN_NODES_PER_GRAPH = 2  # Each graph will have between 2-5 nodes\nMAX_NODES_PER_GRAPH = (\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)\n\n# Additional per-user entities\nMIN_PRESETS_PER_USER = 1  # Each user will have between 1-2 presets\nMAX_PRESETS_PER_USER = 5  # Total presets: 500-2500 (NUM_USERS * MIN/MAX_PRESETS)\nMIN_AGENTS_PER_USER = 1  # Each user will have between 1-2 agents\nMAX_AGENTS_PER_USER = 10  # Total agents: 500-5000 (NUM_USERS * MIN/MAX_AGENTS)\n\n# Execution and review records\nMIN_EXECUTIONS_PER_GRAPH = 1  # Each graph will have between 1-5 execution records\nMAX_EXECUTIONS_PER_GRAPH = (\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)\nMIN_REVIEWS_PER_VERSION = 1  # Each version will have between 1-3 reviews\nMAX_REVIEWS_PER_VERSION = 5  # Total reviews depends on number of versions created\n\n\n\n\n"
        },
        {
            "type": "if_statement",
            "start_token": 299,
            "end_token": 313,
            "children": [
                {
                    "type": "comparison_operator",
                    "start_token": 299,
                    "end_token": 303,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 300,
                            "end_token": 300,
                            "label": "__name__"
                        },
                        {
                            "type": "string",
                            "start_token": 303,
                            "end_token": 303,
                            "label": "\"__main__\""
                        }
                    ],
                    "label": "if __name__ == \"__main__\""
                },
                {
                    "type": "block",
                    "start_token": 305,
                    "end_token": 313,
                    "children": [
                        {
                            "type": "call",
                            "start_token": 306,
                            "end_token": 312,
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "start_token": 306,
                                    "end_token": 308,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 306,
                                            "end_token": 306,
                                            "label": "asyncio"
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 308,
                                            "end_token": 308,
                                            "label": "run"
                                        }
                                    ],
                                    "label": "asyncio.run"
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 309,
                                    "end_token": 312,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 310,
                                            "end_token": 310,
                                            "label": "main"
                                        }
                                    ],
                                    "label": "(main()"
                                }
                            ],
                            "label": "asyncio.run(main()"
                        }
                    ],
                    "label": "\n    asyncio.run(main())"
                }
            ],
            "label": "if __name__ == \"__main__\":\n    asyncio.run(main())"
        },
        {
            "type": "function_placeholder",
            "name": "get_image",
            "start_line": 42,
            "end_line": 46,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 30,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 29,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "get_image"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 3,
                                    "children": [],
                                    "label": "()"
                                },
                                {
                                    "type": "block",
                                    "start_token": 5,
                                    "end_token": 29,
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 6,
                                            "end_token": 12,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [],
                                                    "label": "url"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 8,
                                                    "end_token": 12,
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 8,
                                                            "end_token": 10,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 8,
                                                                    "end_token": 8,
                                                                    "children": [],
                                                                    "label": "faker"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 10,
                                                                    "end_token": 10,
                                                                    "children": [],
                                                                    "label": "image_url"
                                                                }
                                                            ],
                                                            "label": "faker.image_url"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 11,
                                                            "end_token": 12,
                                                            "children": [],
                                                            "label": "()"
                                                        }
                                                    ],
                                                    "label": "faker.image_url()"
                                                }
                                            ],
                                            "label": "url = faker.image_url()"
                                        },
                                        {
                                            "type": "while_statement",
                                            "start_token": 14,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 15,
                                                    "end_token": 17,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 15,
                                                            "end_token": 15,
                                                            "children": [],
                                                            "label": "\"placekitten.com\""
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 17,
                                                            "end_token": 17,
                                                            "children": [],
                                                            "label": "url"
                                                        }
                                                    ],
                                                    "label": "\"placekitten.com\" in url"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 19,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 20,
                                                            "end_token": 26,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 20,
                                                                    "end_token": 20,
                                                                    "children": [],
                                                                    "label": "url"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 22,
                                                                    "end_token": 26,
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 22,
                                                                            "end_token": 24,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 22,
                                                                                    "end_token": 22,
                                                                                    "children": [],
                                                                                    "label": "faker"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 24,
                                                                                    "end_token": 24,
                                                                                    "children": [],
                                                                                    "label": "image_url"
                                                                                }
                                                                            ],
                                                                            "label": "faker.image_url"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 25,
                                                                            "end_token": 26,
                                                                            "children": [],
                                                                            "label": "()"
                                                                        }
                                                                    ],
                                                                    "label": "faker.image_url()"
                                                                }
                                                            ],
                                                            "label": "url = faker.image_url()"
                                                        }
                                                    ],
                                                    "label": "\n        url = faker.image_url()\n"
                                                }
                                            ],
                                            "label": "while \"placekitten.com\" in url:\n        url = faker.image_url()\n"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 28,
                                            "end_token": 29,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 29,
                                                    "end_token": 29,
                                                    "children": [],
                                                    "label": "url"
                                                }
                                            ],
                                            "label": "return url"
                                        }
                                    ],
                                    "label": "\n    url = faker.image_url()\n    while \"placekitten.com\" in url:\n        url = faker.image_url()\n    return url"
                                }
                            ],
                            "label": "def get_image():\n    url = faker.image_url()\n    while \"placekitten.com\" in url:\n        url = faker.image_url()\n    return url"
                        }
                    ],
                    "label": "def get_image():\n    url = faker.image_url()\n    while \"placekitten.com\" in url:\n        url = faker.image_url()\n    return url\n"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "main",
            "start_line": 49,
            "end_line": 432,
            "children": [
                {
                    "type": "ErrorNode",
                    "start_token": -1,
                    "end_token": -1,
                    "children": [],
                    "label": ""
                }
            ]
        }
    ],
    "label": "import asyncio\nimport random\nfrom datetime import datetime\n\nimport prisma.enums\nfrom faker import Faker\nfrom prisma import Prisma\n\nfaker = Faker()\n\n# Constants for data generation limits\n\n# Base entities\nNUM_USERS = 100  # Creates 100 user records\nNUM_AGENT_BLOCKS = 100  # Creates 100 agent block templates\n\n# Per-user entities\nMIN_GRAPHS_PER_USER = 1  # Each user will have between 1-5 graphs\nMAX_GRAPHS_PER_USER = 5  # Total graphs: 500-2500 (NUM_USERS * MIN/MAX_GRAPHS)\n\n# Per-graph entities\nMIN_NODES_PER_GRAPH = 2  # Each graph will have between 2-5 nodes\nMAX_NODES_PER_GRAPH = (\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)\n\n# Additional per-user entities\nMIN_PRESETS_PER_USER = 1  # Each user will have between 1-2 presets\nMAX_PRESETS_PER_USER = 5  # Total presets: 500-2500 (NUM_USERS * MIN/MAX_PRESETS)\nMIN_AGENTS_PER_USER = 1  # Each user will have between 1-2 agents\nMAX_AGENTS_PER_USER = 10  # Total agents: 500-5000 (NUM_USERS * MIN/MAX_AGENTS)\n\n# Execution and review records\nMIN_EXECUTIONS_PER_GRAPH = 1  # Each graph will have between 1-5 execution records\nMAX_EXECUTIONS_PER_GRAPH = (\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)\nMIN_REVIEWS_PER_VERSION = 1  # Each version will have between 1-3 reviews\nMAX_REVIEWS_PER_VERSION = 5  # Total reviews depends on number of versions created\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())"
}