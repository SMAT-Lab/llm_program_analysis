{
    "type": "module",
    "start_token": 0,
    "end_token": 23,
    "children": [
        {
            "type": "comment",
            "start_token": 1,
            "end_token": 1,
            "children": [],
            "label": "\"\nCalculates the sum of two non-negative integers using bitwise operators\nWikipedia explanation: https://en.wikipedia.org/wiki/Binary_number\n\""
        },
        {
            "type": "if_statement",
            "start_token": 8,
            "end_token": 14,
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 8,
                    "end_token": 13,
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 9,
                            "end_token": 12,
                            "children": [],
                            "label": "__name__ == \"__main__\""
                        }
                    ],
                    "label": "if __name__ == \"__main__\":"
                },
                {
                    "type": "block",
                    "start_token": 14,
                    "end_token": 23,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 15,
                            "end_token": 16,
                            "children": [],
                            "label": "import doctest"
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 19,
                            "end_token": 23,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 19,
                                    "end_token": 23,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 19,
                                            "end_token": 21,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 19,
                                                    "end_token": 19,
                                                    "children": [],
                                                    "label": "doctest"
                                                }
                                            ],
                                            "label": "doctest.testmod"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 22,
                                            "end_token": 23,
                                            "children": [],
                                            "label": "()"
                                        }
                                    ],
                                    "label": "doctest.testmod()"
                                }
                            ],
                            "label": "doctest.testmod()"
                        }
                    ],
                    "label": "\n    import doctest\n\n    doctest.testmod()"
                }
            ],
            "label": "if __name__ == \"__main__\":\n"
        },
        {
            "type": "function_placeholder",
            "name": "bitwise_addition_recursive",
            "start_line": 7,
            "end_line": 49,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 96,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 96,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "bitwise_addition_recursive"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 13,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "children": [],
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "children": [],
                                                    "label": "other_number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "other_number: int"
                                        }
                                    ],
                                    "label": "(number: int, other_number: int) -> int"
                                },
                                {
                                    "type": "type",
                                    "start_token": 13,
                                    "end_token": 13,
                                    "children": [],
                                    "label": "int"
                                },
                                {
                                    "type": "string",
                                    "start_token": 16,
                                    "end_token": 18,
                                    "children": [],
                                    "label": "\"\"\"\n    >>> bitwise_addition_recursive(4, 5)\n    9\n    >>> bitwise_addition_recursive(8, 9)\n    17\n    >>> bitwise_addition_recursive(0, 4)\n    4\n    >>> bitwise_addition_recursive(4.5, 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4.5', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive(-1, 9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    >>> bitwise_addition_recursive(1, -9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 21,
                                    "end_token": 96,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 21,
                                            "end_token": 43,
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "start_token": 22,
                                                    "end_token": 36,
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "start_token": 22,
                                                            "end_token": 28,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 23,
                                                                    "end_token": 28,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 23,
                                                                            "end_token": 23,
                                                                            "children": [],
                                                                            "label": "isinstance"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 24,
                                                                            "end_token": 28,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 25,
                                                                                    "end_token": 25,
                                                                                    "children": [],
                                                                                    "label": "number"
                                                                                },
                                                                                {
                                                                                    "type": "type",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [],
                                                                                    "label": "int"
                                                                                }
                                                                            ],
                                                                            "label": "(number, int)"
                                                                        }
                                                                    ],
                                                                    "label": "isinstance(number, int)"
                                                                }
                                                            ],
                                                            "label": "not isinstance(number, int)"
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "start_token": 30,
                                                            "end_token": 36,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 31,
                                                                    "end_token": 36,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 31,
                                                                            "end_token": 31,
                                                                            "children": [],
                                                                            "label": "isinstance"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 32,
                                                                            "end_token": 36,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 33,
                                                                                    "end_token": 33,
                                                                                    "children": [],
                                                                                    "label": "other_number"
                                                                                },
                                                                                {
                                                                                    "type": "type",
                                                                                    "start_token": 35,
                                                                                    "end_token": 35,
                                                                                    "children": [],
                                                                                    "label": "int"
                                                                                }
                                                                            ],
                                                                            "label": "(other_number, int)"
                                                                        }
                                                                    ],
                                                                    "label": "isinstance(other_number, int)"
                                                                }
                                                            ],
                                                            "label": "not isinstance(other_number, int)"
                                                        }
                                                    ],
                                                    "label": "not isinstance(number, int) or not isinstance(other_number, int)"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 38,
                                                    "end_token": 43,
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 39,
                                                            "end_token": 43,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 40,
                                                                    "end_token": 40,
                                                                    "children": [],
                                                                    "label": "TypeError"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 41,
                                                                    "end_token": 43,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 42,
                                                                            "end_token": 42,
                                                                            "children": [],
                                                                            "label": "\"Both arguments MUST be integers!\""
                                                                        }
                                                                    ],
                                                                    "label": "(\"Both arguments MUST be integers!\")"
                                                                }
                                                            ],
                                                            "label": "raise TypeError(\"Both arguments MUST be integers!\")"
                                                        }
                                                    ],
                                                    "label": "\n        raise TypeError(\"Both arguments MUST be integers!\")"
                                                }
                                            ],
                                            "label": "if not isinstance(number, int) or not isinstance(other_number, int):\n        raise TypeError(\"Both arguments MUST be integers!\")"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 46,
                                            "end_token": 60,
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "start_token": 47,
                                                    "end_token": 53,
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 47,
                                                            "end_token": 49,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 47,
                                                                    "end_token": 47,
                                                                    "children": [],
                                                                    "label": "number"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 49,
                                                                    "end_token": 49,
                                                                    "children": [],
                                                                    "label": "0"
                                                                }
                                                            ],
                                                            "label": "number < 0"
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 51,
                                                            "end_token": 53,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 51,
                                                                    "end_token": 51,
                                                                    "children": [],
                                                                    "label": "other_number"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 53,
                                                                    "end_token": 53,
                                                                    "children": [],
                                                                    "label": "0"
                                                                }
                                                            ],
                                                            "label": "other_number < 0"
                                                        }
                                                    ],
                                                    "label": "number < 0 or other_number < 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 55,
                                                    "end_token": 60,
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 56,
                                                            "end_token": 60,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 57,
                                                                    "end_token": 57,
                                                                    "children": [],
                                                                    "label": "ValueError"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 58,
                                                                    "end_token": 60,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 59,
                                                                            "end_token": 59,
                                                                            "children": [],
                                                                            "label": "\"Both arguments MUST be non-negative!\""
                                                                        }
                                                                    ],
                                                                    "label": "(\"Both arguments MUST be non-negative!\")"
                                                                }
                                                            ],
                                                            "label": "raise ValueError(\"Both arguments MUST be non-negative!\")"
                                                        }
                                                    ],
                                                    "label": "\n        raise ValueError(\"Both arguments MUST be non-negative!\")"
                                                }
                                            ],
                                            "label": "if number < 0 or other_number < 0:\n        raise ValueError(\"Both arguments MUST be non-negative!\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 63,
                                            "end_token": 67,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 63,
                                                    "end_token": 63,
                                                    "children": [],
                                                    "label": "bitwise_sum"
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 65,
                                                    "end_token": 67,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 65,
                                                            "end_token": 65,
                                                            "children": [],
                                                            "label": "number"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 67,
                                                            "end_token": 67,
                                                            "children": [],
                                                            "label": "other_number"
                                                        }
                                                    ],
                                                    "label": "number ^ other_number"
                                                }
                                            ],
                                            "label": "bitwise_sum = number ^ other_number"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 69,
                                            "end_token": 73,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 69,
                                                    "end_token": 69,
                                                    "children": [],
                                                    "label": "carry"
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 71,
                                                    "end_token": 73,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 71,
                                                            "end_token": 71,
                                                            "children": [],
                                                            "label": "number"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 73,
                                                            "end_token": 73,
                                                            "children": [],
                                                            "label": "other_number"
                                                        }
                                                    ],
                                                    "label": "number & other_number"
                                                }
                                            ],
                                            "label": "carry = number & other_number"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 76,
                                            "end_token": 85,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 77,
                                                    "end_token": 80,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 77,
                                                            "end_token": 77,
                                                            "children": [],
                                                            "label": "carry"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 80,
                                                            "end_token": 80,
                                                            "children": [],
                                                            "label": "0"
                                                        }
                                                    ],
                                                    "label": "carry == 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 82,
                                                    "end_token": 85,
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 83,
                                                            "end_token": 85,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 84,
                                                                    "end_token": 84,
                                                                    "children": [],
                                                                    "label": "bitwise_sum"
                                                                }
                                                            ],
                                                            "label": "return bitwise_sum\n"
                                                        }
                                                    ],
                                                    "label": "\n        return bitwise_sum\n"
                                                }
                                            ],
                                            "label": "if carry == 0:\n        return bitwise_sum\n"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 87,
                                            "end_token": 96,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 88,
                                                    "end_token": 96,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 88,
                                                            "end_token": 88,
                                                            "children": [],
                                                            "label": "bitwise_addition_recursive"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 89,
                                                            "end_token": 96,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 90,
                                                                    "end_token": 90,
                                                                    "children": [],
                                                                    "label": "bitwise_sum"
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 92,
                                                                    "end_token": 95,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 92,
                                                                            "end_token": 92,
                                                                            "children": [],
                                                                            "label": "carry"
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 95,
                                                                            "end_token": 95,
                                                                            "children": [],
                                                                            "label": "1"
                                                                        }
                                                                    ],
                                                                    "label": "carry << 1"
                                                                }
                                                            ],
                                                            "label": "(bitwise_sum, carry << 1)"
                                                        }
                                                    ],
                                                    "label": "bitwise_addition_recursive(bitwise_sum, carry << 1)"
                                                }
                                            ],
                                            "label": "return bitwise_addition_recursive(bitwise_sum, carry << 1)"
                                        }
                                    ],
                                    "label": "if not isinstance(number, int) or not isinstance(other_number, int):\n        raise TypeError(\"Both arguments MUST be integers!\")\n\n    if number < 0 or other_number < 0:\n        raise ValueError(\"Both arguments MUST be non-negative!\")\n\n    bitwise_sum = number ^ other_number\n    carry = number & other_number\n\n    if carry == 0:\n        return bitwise_sum\n\n    return bitwise_addition_recursive(bitwise_sum, carry << 1)"
                                }
                            ],
                            "label": "def bitwise_addition_recursive(number: int, other_number: int) -> int:\n    \"\"\"\n    >>> bitwise_addition_recursive(4, 5)\n    9\n    >>> bitwise_addition_recursive(8, 9)\n    17\n    >>> bitwise_addition_recursive(0, 4)\n    4\n    >>> bitwise_addition_recursive(4.5, 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4.5', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive(-1, 9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    >>> bitwise_addition_recursive(1, -9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    \"\"\"\n\n    if not isinstance(number, int) or not isinstance(other_number, int):\n        raise TypeError(\"Both arguments MUST be integers!\")\n\n    if number < 0 or other_number < 0:\n        raise ValueError(\"Both arguments MUST be non-negative!\")\n\n    bitwise_sum = number ^ other_number\n    carry = number & other_number\n\n    if carry == 0:\n        return bitwise_sum\n\n    return bitwise_addition_recursive(bitwise_sum, carry << 1)"
                        }
                    ],
                    "label": "def bitwise_addition_recursive(number: int, other_number: int) -> int:\n    \"\"\"\n    >>> bitwise_addition_recursive(4, 5)\n    9\n    >>> bitwise_addition_recursive(8, 9)\n    17\n    >>> bitwise_addition_recursive(0, 4)\n    4\n    >>> bitwise_addition_recursive(4.5, 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4.5', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive(-1, 9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    >>> bitwise_addition_recursive(1, -9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    \"\"\"\n\n    if not isinstance(number, int) or not isinstance(other_number, int):\n        raise TypeError(\"Both arguments MUST be integers!\")\n\n    if number < 0 or other_number < 0:\n        raise ValueError(\"Both arguments MUST be non-negative!\")\n\n    bitwise_sum = number ^ other_number\n    carry = number & other_number\n\n    if carry == 0:\n        return bitwise_sum\n\n    return bitwise_addition_recursive(bitwise_sum, carry << 1)"
                }
            ]
        }
    ],
    "label": "\"\"\"\nCalculates the sum of two non-negative integers using bitwise operators\nWikipedia explanation: https://en.wikipedia.org/wiki/Binary_number\n\"\"\"\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
}