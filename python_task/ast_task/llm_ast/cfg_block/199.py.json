{
    "type": "module",
    "start_token": 0,
    "end_token": 24,
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 5,
            "children": [],
            "label": "# Reference: https://www.geeksforgeeks.org/position-of-rightmost-set-bit/\n\n\n\n\nif __name__ == \"__main__\":\n    \"\"\"\n    Finding the index of rightmost set bit has some very peculiar use-cases,\n    especially in finding missing or/and repeating numbers in a list of\n    positive integers.\n    \"\"\"\n    import doctest\n\n    doctest.testmod(verbose=True)\n"
        },
        {
            "type": "if_statement",
            "start_token": 6,
            "end_token": 24,
            "children": [
                {
                    "type": "comparison_operator",
                    "start_token": 6,
                    "end_token": 9,
                    "children": [],
                    "label": ""
                },
                {
                    "type": "block",
                    "start_token": 10,
                    "end_token": 24,
                    "children": [
                        {
                            "type": "string",
                            "start_token": 11,
                            "end_token": 19,
                            "children": [
                                {
                                    "type": "string_start",
                                    "start_token": 11,
                                    "end_token": 12,
                                    "children": [],
                                    "label": ""
                                },
                                {
                                    "type": "string_content",
                                    "start_token": 13,
                                    "end_token": 17,
                                    "children": [],
                                    "label": ""
                                },
                                {
                                    "type": "string_end",
                                    "start_token": 18,
                                    "end_token": 19,
                                    "children": [],
                                    "label": ""
                                }
                            ],
                            "label": ""
                        },
                        {
                            "type": "import_statement",
                            "start_token": 20,
                            "end_token": 21,
                            "children": [],
                            "label": ""
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 22,
                            "end_token": 23,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 22,
                                    "end_token": 23,
                                    "children": [],
                                    "label": ""
                                }
                            ],
                            "label": ""
                        }
                    ],
                    "label": ""
                }
            ],
            "label": ""
        },
        {
            "type": "function_placeholder",
            "name": "get_index_of_rightmost_set_bit",
            "start_line": 4,
            "end_line": 40,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 71,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 71,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "get_index_of_rightmost_set_bit"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "children": [],
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        }
                                    ],
                                    "label": "(number: int)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 9,
                                    "end_token": 9,
                                    "children": [],
                                    "label": "int"
                                },
                                {
                                    "type": "string",
                                    "start_token": 12,
                                    "end_token": 14,
                                    "children": [],
                                    "label": "\"\"\"\n    Take in a positive integer 'number'.\n    Returns the zero-based index of first set bit in that 'number' from right.\n    Returns -1, If no set bit found.\n\n    >>> get_index_of_rightmost_set_bit(0)\n    -1\n    >>> get_index_of_rightmost_set_bit(5)\n    0\n    >>> get_index_of_rightmost_set_bit(36)\n    2\n    >>> get_index_of_rightmost_set_bit(8)\n    3\n    >>> get_index_of_rightmost_set_bit(-18)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    >>> get_index_of_rightmost_set_bit('test')\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    >>> get_index_of_rightmost_set_bit(1.25)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 17,
                                    "end_token": 71,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 17,
                                            "end_token": 35,
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "start_token": 18,
                                                    "end_token": 28,
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "start_token": 18,
                                                            "end_token": 24,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 19,
                                                                    "end_token": 24,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 19,
                                                                            "end_token": 19,
                                                                            "children": [],
                                                                            "label": "isinstance"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 20,
                                                                            "end_token": 24,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 21,
                                                                                    "end_token": 21,
                                                                                    "children": [],
                                                                                    "label": "number"
                                                                                },
                                                                                {
                                                                                    "type": "type",
                                                                                    "start_token": 23,
                                                                                    "end_token": 23,
                                                                                    "children": [],
                                                                                    "label": "int"
                                                                                }
                                                                            ],
                                                                            "label": "(number, int)"
                                                                        }
                                                                    ],
                                                                    "label": "isinstance(number, int)"
                                                                }
                                                            ],
                                                            "label": "not isinstance(number, int)"
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 26,
                                                            "end_token": 28,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 26,
                                                                    "end_token": 26,
                                                                    "children": [],
                                                                    "label": "number"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 28,
                                                                    "end_token": 28,
                                                                    "children": [],
                                                                    "label": "0"
                                                                }
                                                            ],
                                                            "label": "number < 0"
                                                        }
                                                    ],
                                                    "label": "not isinstance(number, int) or number < 0"
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 31,
                                                    "end_token": 35,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 32,
                                                            "end_token": 35,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 32,
                                                                    "end_token": 32,
                                                                    "children": [],
                                                                    "label": "ValueError"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 33,
                                                                    "end_token": 35,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 34,
                                                                            "end_token": 34,
                                                                            "children": [],
                                                                            "label": "\"Input must be a non-negative integer\""
                                                                        }
                                                                    ],
                                                                    "label": "(\"Input must be a non-negative integer\")"
                                                                }
                                                            ],
                                                            "label": "ValueError(\"Input must be a non-negative integer\")"
                                                        }
                                                    ],
                                                    "label": "raise ValueError(\"Input must be a non-negative integer\")"
                                                }
                                            ],
                                            "label": "if not isinstance(number, int) or number < 0:\n        raise ValueError(\"Input must be a non-negative integer\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 38,
                                            "end_token": 47,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 38,
                                                    "end_token": 38,
                                                    "children": [],
                                                    "label": "intermediate"
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 40,
                                                    "end_token": 47,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 40,
                                                            "end_token": 40,
                                                            "children": [],
                                                            "label": "number"
                                                        },
                                                        {
                                                            "type": "binary_operator",
                                                            "start_token": 42,
                                                            "end_token": 47,
                                                            "children": [
                                                                {
                                                                    "type": "unary_operator",
                                                                    "start_token": 42,
                                                                    "end_token": 42,
                                                                    "children": [
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "start_token": 43,
                                                                            "end_token": 46,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 44,
                                                                                    "end_token": 45,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 44,
                                                                                            "end_token": 44,
                                                                                            "children": [],
                                                                                            "label": "number"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 46,
                                                                                            "end_token": 46,
                                                                                            "children": [],
                                                                                            "label": "1"
                                                                                        }
                                                                                    ],
                                                                                    "label": "number -"
                                                                                }
                                                                            ],
                                                                            "label": "(number - 1"
                                                                        }
                                                                    ],
                                                                    "label": "~"
                                                                }
                                                            ],
                                                            "label": "~(number - 1)"
                                                        }
                                                    ],
                                                    "label": "number & ~(number - 1)"
                                                }
                                            ],
                                            "label": "intermediate = number & ~(number - 1)"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 49,
                                            "end_token": 51,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 49,
                                                    "end_token": 49,
                                                    "children": [],
                                                    "label": "index"
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 51,
                                                    "end_token": 51,
                                                    "children": [],
                                                    "label": "0"
                                                }
                                            ],
                                            "label": "index = 0"
                                        },
                                        {
                                            "type": "while_statement",
                                            "start_token": 53,
                                            "end_token": 67,
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "start_token": 54,
                                                    "end_token": 54,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 54,
                                                            "end_token": 54,
                                                            "children": [],
                                                            "label": "intermediate"
                                                        }
                                                    ],
                                                    "label": "intermediate"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 57,
                                                    "end_token": 67,
                                                    "children": [
                                                        {
                                                            "type": "augmented_assignment",
                                                            "start_token": 57,
                                                            "end_token": 61,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 57,
                                                                    "end_token": 57,
                                                                    "children": [],
                                                                    "label": "intermediate"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 61,
                                                                    "end_token": 61,
                                                                    "children": [],
                                                                    "label": "1"
                                                                }
                                                            ],
                                                            "label": "intermediate >>= 1"
                                                        },
                                                        {
                                                            "type": "augmented_assignment",
                                                            "start_token": 63,
                                                            "end_token": 66,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 63,
                                                                    "end_token": 63,
                                                                    "children": [],
                                                                    "label": "index"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 66,
                                                                    "end_token": 66,
                                                                    "children": [],
                                                                    "label": "1"
                                                                }
                                                            ],
                                                            "label": "index += 1"
                                                        }
                                                    ],
                                                    "label": "intermediate >>= 1\n        index += 1\n"
                                                }
                                            ],
                                            "label": "while intermediate:\n        intermediate >>= 1\n        index += 1\n"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 68,
                                            "end_token": 71,
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 69,
                                                    "end_token": 71,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 69,
                                                            "end_token": 69,
                                                            "children": [],
                                                            "label": "index"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 71,
                                                            "end_token": 71,
                                                            "children": [],
                                                            "label": "1"
                                                        }
                                                    ],
                                                    "label": "index - 1"
                                                }
                                            ],
                                            "label": "return index - 1"
                                        }
                                    ],
                                    "label": "if not isinstance(number, int) or number < 0:\n        raise ValueError(\"Input must be a non-negative integer\")\n\n    intermediate = number & ~(number - 1)\n    index = 0\n    while intermediate:\n        intermediate >>= 1\n        index += 1\n    return index - 1"
                                }
                            ],
                            "label": "def get_index_of_rightmost_set_bit(number: int) -> int:\n    \"\"\"\n    Take in a positive integer 'number'.\n    Returns the zero-based index of first set bit in that 'number' from right.\n    Returns -1, If no set bit found.\n\n    >>> get_index_of_rightmost_set_bit(0)\n    -1\n    >>> get_index_of_rightmost_set_bit(5)\n    0\n    >>> get_index_of_rightmost_set_bit(36)\n    2\n    >>> get_index_of_rightmost_set_bit(8)\n    3\n    >>> get_index_of_rightmost_set_bit(-18)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    >>> get_index_of_rightmost_set_bit('test')\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    >>> get_index_of_rightmost_set_bit(1.25)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    \"\"\"\n\n    if not isinstance(number, int) or number < 0:\n        raise ValueError(\"Input must be a non-negative integer\")\n\n    intermediate = number & ~(number - 1)\n    index = 0\n    while intermediate:\n        intermediate >>= 1\n        index += 1\n    return index - 1"
                        }
                    ],
                    "label": "def get_index_of_rightmost_set_bit(number: int) -> int:\n    \"\"\"\n    Take in a positive integer 'number'.\n    Returns the zero-based index of first set bit in that 'number' from right.\n    Returns -1, If no set bit found.\n\n    >>> get_index_of_rightmost_set_bit(0)\n    -1\n    >>> get_index_of_rightmost_set_bit(5)\n    0\n    >>> get_index_of_rightmost_set_bit(36)\n    2\n    >>> get_index_of_rightmost_set_bit(8)\n    3\n    >>> get_index_of_rightmost_set_bit(-18)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    >>> get_index_of_rightmost_set_bit('test')\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    >>> get_index_of_rightmost_set_bit(1.25)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input must be a non-negative integer\n    \"\"\"\n\n    if not isinstance(number, int) or number < 0:\n        raise ValueError(\"Input must be a non-negative integer\")\n\n    intermediate = number & ~(number - 1)\n    index = 0\n    while intermediate:\n        intermediate >>= 1\n        index += 1\n    return index - 1"
                }
            ]
        }
    ],
    "label": ""
}