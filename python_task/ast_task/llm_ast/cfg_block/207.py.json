{
    "type": "module",
    "start_token": 0,
    "end_token": 10,
    "children": [
        {
            "type": "string",
            "start_token": 1,
            "end_token": 1,
            "children": [],
            "label": "\"\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\n\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n\""
        },
        {
            "type": "import_statement",
            "start_token": 5,
            "end_token": 6,
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 6,
                    "end_token": 6,
                    "children": [],
                    "label": "string"
                }
            ],
            "label": "import string"
        },
        {
            "type": "function_placeholder",
            "name": "backtrack",
            "start_line": 15,
            "end_line": 65,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 259,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 253,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "backtrack"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 26,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 4,
                                            "end_token": 6,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 4,
                                                    "end_token": 4,
                                                    "children": [],
                                                    "label": "current_word"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [],
                                                    "label": "str"
                                                }
                                            ],
                                            "label": "current_word: str"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 8,
                                            "end_token": 13,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 8,
                                                    "end_token": 8,
                                                    "children": [],
                                                    "label": "path"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 10,
                                                    "end_token": 13,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 10,
                                                            "end_token": 10,
                                                            "children": [],
                                                            "label": "list"
                                                        },
                                                        {
                                                            "type": "type",
                                                            "start_token": 12,
                                                            "end_token": 12,
                                                            "children": [],
                                                            "label": "str"
                                                        }
                                                    ],
                                                    "label": "list[str]"
                                                }
                                            ],
                                            "label": "path: list[str]"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 15,
                                            "end_token": 17,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 15,
                                                    "end_token": 15,
                                                    "children": [],
                                                    "label": "end_word"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 17,
                                                    "end_token": 17,
                                                    "children": [],
                                                    "label": "str"
                                                }
                                            ],
                                            "label": "end_word: str"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 19,
                                            "end_token": 24,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 19,
                                                    "end_token": 19,
                                                    "children": [],
                                                    "label": "word_set"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 21,
                                                    "end_token": 24,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 21,
                                                            "end_token": 21,
                                                            "children": [],
                                                            "label": "set"
                                                        },
                                                        {
                                                            "type": "type",
                                                            "start_token": 23,
                                                            "end_token": 23,
                                                            "children": [],
                                                            "label": "str"
                                                        }
                                                    ],
                                                    "label": "set[str]"
                                                }
                                            ],
                                            "label": "word_set: set[str]"
                                        }
                                    ],
                                    "label": "(\n    current_word: str, path: list[str], end_word: str, word_set: set[str]\n)"
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 28,
                                    "end_token": 32,
                                    "children": [
                                        {
                                            "type": "type",
                                            "start_token": 29,
                                            "end_token": 29,
                                            "children": [],
                                            "label": "list"
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 31,
                                            "end_token": 31,
                                            "children": [],
                                            "label": "str"
                                        }
                                    ],
                                    "label": "> list[str]"
                                },
                                {
                                    "type": "block",
                                    "start_token": 34,
                                    "end_token": 253,
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 35,
                                            "end_token": 103,
                                            "children": [],
                                            "label": "\"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\""
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 123,
                                            "end_token": 131,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 124,
                                                    "end_token": 127,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 124,
                                                            "end_token": 124,
                                                            "children": [],
                                                            "label": "current_word"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 127,
                                                            "end_token": 127,
                                                            "children": [],
                                                            "label": "end_word"
                                                        }
                                                    ],
                                                    "label": "current_word == end_word"
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "start_token": 130,
                                                    "end_token": 131,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 131,
                                                            "end_token": 131,
                                                            "children": [],
                                                            "label": "path"
                                                        }
                                                    ],
                                                    "label": "return path"
                                                }
                                            ],
                                            "label": "if current_word == end_word:\n        return path"
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 143,
                                            "end_token": 253,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 144,
                                                    "end_token": 144,
                                                    "children": [],
                                                    "label": "i"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 146,
                                                    "end_token": 152,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 146,
                                                            "end_token": 146,
                                                            "children": [],
                                                            "label": "range"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 148,
                                                            "end_token": 151,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 150,
                                                                    "end_token": 150,
                                                                    "children": [],
                                                                    "label": "current_word"
                                                                }
                                                            ],
                                                            "label": "len(current_word)"
                                                        }
                                                    ],
                                                    "label": "range(len(current_word))"
                                                },
                                                {
                                                    "type": "for_statement",
                                                    "start_token": 155,
                                                    "end_token": 253,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 156,
                                                            "end_token": 156,
                                                            "children": [],
                                                            "label": "c"
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 158,
                                                            "end_token": 160,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 158,
                                                                    "end_token": 158,
                                                                    "children": [],
                                                                    "label": "string"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 160,
                                                                    "end_token": 160,
                                                                    "children": [],
                                                                    "label": "ascii_lowercase"
                                                                }
                                                            ],
                                                            "label": "string.ascii_lowercase"
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 168,
                                                            "end_token": 184,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 168,
                                                                    "end_token": 168,
                                                                    "children": [],
                                                                    "label": "transformed_word"
                                                                },
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "start_token": 170,
                                                                    "end_token": 184,
                                                                    "children": [
                                                                        {
                                                                            "type": "slice",
                                                                            "start_token": 170,
                                                                            "end_token": 174,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 170,
                                                                                    "end_token": 170,
                                                                                    "children": [],
                                                                                    "label": "current_word"
                                                                                }
                                                                            ],
                                                                            "label": "current_word[:i]"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 176,
                                                                            "end_token": 176,
                                                                            "children": [],
                                                                            "label": "c"
                                                                        },
                                                                        {
                                                                            "type": "slice",
                                                                            "start_token": 178,
                                                                            "end_token": 183,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 178,
                                                                                    "end_token": 178,
                                                                                    "children": [],
                                                                                    "label": "current_word"
                                                                                }
                                                                            ],
                                                                            "label": "current_word[i + 1 :"
                                                                        }
                                                                    ],
                                                                    "label": "current_word[:i] + c + current_word[i + 1 :]"
                                                                }
                                                            ],
                                                            "label": "transformed_word = current_word[:i] + c + current_word[i + 1 :]"
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 186,
                                                            "end_token": 239,
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 187,
                                                                    "end_token": 189,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 187,
                                                                            "end_token": 187,
                                                                            "children": [],
                                                                            "label": "transformed_word"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 189,
                                                                            "end_token": 189,
                                                                            "children": [],
                                                                            "label": "word_set"
                                                                        }
                                                                    ],
                                                                    "label": "transformed_word in word_set"
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 191,
                                                                    "end_token": 239,
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 193,
                                                                            "end_token": 197,
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 193,
                                                                                    "end_token": 194,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 193,
                                                                                            "end_token": 193,
                                                                                            "children": [],
                                                                                            "label": "."
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 194,
                                                                                            "end_token": 194,
                                                                                            "children": [],
                                                                                            "label": "remove"
                                                                                        }
                                                                                    ],
                                                                                    "label": ".remove"
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 195,
                                                                                    "end_token": 196,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 196,
                                                                                            "end_token": 196,
                                                                                            "children": [],
                                                                                            "label": "transformed_word"
                                                                                        }
                                                                                    ],
                                                                                    "label": "(transformed_word"
                                                                                }
                                                                            ],
                                                                            "label": ".remove(transformed_word)"
                                                                        },
                                                                        {
                                                                            "type": "assignment",
                                                                            "start_token": 210,
                                                                            "end_token": 228,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 210,
                                                                                    "end_token": 210,
                                                                                    "children": [],
                                                                                    "label": "result"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 212,
                                                                                    "end_token": 227,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 212,
                                                                                            "end_token": 212,
                                                                                            "children": [],
                                                                                            "label": "backtrack"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 213,
                                                                                            "end_token": 226,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 215,
                                                                                                    "end_token": 215,
                                                                                                    "children": [],
                                                                                                    "label": "transformed_word"
                                                                                                },
                                                                                                {
                                                                                                    "type": "list",
                                                                                                    "start_token": 217,
                                                                                                    "end_token": 222,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "list_splat",
                                                                                                            "start_token": 218,
                                                                                                            "end_token": 220,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 219,
                                                                                                                    "end_token": 219,
                                                                                                                    "children": [],
                                                                                                                    "label": "path"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "*path,"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 221,
                                                                                                            "end_token": 221,
                                                                                                            "children": [],
                                                                                                            "label": "transformed_word"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "[*path, transformed_word]"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 224,
                                                                                                    "end_token": 224,
                                                                                                    "children": [],
                                                                                                    "label": "end_word"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 226,
                                                                                                    "end_token": 226,
                                                                                                    "children": [],
                                                                                                    "label": "word_set"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(\n                    transformed_word, [*path, transformed_word], end_word, word_set"
                                                                                        }
                                                                                    ],
                                                                                    "label": "backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n"
                                                                                }
                                                                            ],
                                                                            "label": "result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )"
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "start_token": 230,
                                                                            "end_token": 239,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 231,
                                                                                    "end_token": 231,
                                                                                    "children": [],
                                                                                    "label": "result"
                                                                                },
                                                                                {
                                                                                    "type": "return_statement",
                                                                                    "start_token": 238,
                                                                                    "end_token": 239,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 239,
                                                                                            "end_token": 239,
                                                                                            "children": [],
                                                                                            "label": "result"
                                                                                        }
                                                                                    ],
                                                                                    "label": "return result"
                                                                                }
                                                                            ],
                                                                            "label": "if result:  # valid transformation found\n                    return result"
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 241,
                                                                            "end_token": 245,
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 241,
                                                                                    "end_token": 242,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 241,
                                                                                            "end_token": 241,
                                                                                            "children": [],
                                                                                            "label": "word_set"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 242,
                                                                                            "end_token": 242,
                                                                                            "children": [],
                                                                                            "label": "."
                                                                                        }
                                                                                    ],
                                                                                    "label": "word_set."
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 243,
                                                                                    "end_token": 244,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 244,
                                                                                            "end_token": 244,
                                                                                            "children": [],
                                                                                            "label": "("
                                                                                        }
                                                                                    ],
                                                                                    "label": "add("
                                                                                }
                                                                            ],
                                                                            "label": "word_set.add(transformed_word"
                                                                        }
                                                                    ],
                                                                    "label": "\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result"
                                                                }
                                                            ],
                                                            "label": "if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result"
                                                        }
                                                    ],
                                                    "label": "for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []"
                                                }
                                            ],
                                            "label": "for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 251,
                                            "end_token": 253,
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "start_token": 252,
                                                    "end_token": 252,
                                                    "children": [],
                                                    "label": "["
                                                }
                                            ],
                                            "label": "return []"
                                        }
                                    ],
                                    "label": "\n    \"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    # Base case: If the current word is the end word, return the path\n    if current_word == end_word:\n        return path\n\n    # Try all possible single-letter transformations\n    for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []"
                                }
                            ],
                            "label": "def backtrack(\n    current_word: str, path: list[str], end_word: str, word_set: set[str]\n) -> list[str]:\n    \"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    # Base case: If the current word is the end word, return the path\n    if current_word == end_word:\n        return path\n\n    # Try all possible single-letter transformations\n    for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []"
                        }
                    ],
                    "label": "def backtrack(\n    current_word: str, path: list[str], end_word: str, word_set: set[str]\n) -> list[str]:\n    \"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    # Base case: If the current word is the end word, return the path\n    if current_word == end_word:\n        return path\n\n    # Try all possible single-letter transformations\n    for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []  # No valid transformation found\n"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "word_ladder",
            "start_line": 68,
            "end_line": 100,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 126,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 126,
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 17,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [],
                                            "label": "begin_word: str"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [],
                                            "label": "end_word: str"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 11,
                                            "end_token": 16,
                                            "children": [],
                                            "label": "word_set: set[str]"
                                        }
                                    ],
                                    "label": "(begin_word: str, end_word: str, word_set: set[str])"
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 19,
                                    "end_token": 23,
                                    "children": [],
                                    "label": "> list[str]"
                                },
                                {
                                    "type": "string",
                                    "start_token": 25,
                                    "end_token": 86,
                                    "children": [],
                                    "label": "\n    \"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\""
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 89,
                                    "end_token": 103,
                                    "children": [
                                        {
                                            "type": "condition",
                                            "start_token": 89,
                                            "end_token": 93,
                                            "children": [],
                                            "label": "if end_word not in word_set"
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 94,
                                            "end_token": 103,
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "start_token": 101,
                                                    "end_token": 103,
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "start_token": 102,
                                                            "end_token": 103,
                                                            "children": [],
                                                            "label": "[]"
                                                        }
                                                    ],
                                                    "label": "return []"
                                                }
                                            ],
                                            "label": ":  # no valid transformation possible\n        return []"
                                        }
                                    ],
                                    "label": "if end_word not in word_set:  # no valid transformation possible\n        return []"
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 114,
                                    "end_token": 126,
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 115,
                                            "end_token": 126,
                                            "children": [
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 116,
                                                    "end_token": 125,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 117,
                                                            "end_token": 117,
                                                            "children": [],
                                                            "label": "begin_word"
                                                        },
                                                        {
                                                            "type": "list",
                                                            "start_token": 119,
                                                            "end_token": 121,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 120,
                                                                    "end_token": 120,
                                                                    "children": [],
                                                                    "label": "begin_word"
                                                                }
                                                            ],
                                                            "label": "[begin_word]"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 123,
                                                            "end_token": 123,
                                                            "children": [],
                                                            "label": "end_word"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 125,
                                                            "end_token": 125,
                                                            "children": [],
                                                            "label": "word_set"
                                                        }
                                                    ],
                                                    "label": "(begin_word, [begin_word], end_word, word_set"
                                                }
                                            ],
                                            "label": "backtrack(begin_word, [begin_word], end_word, word_set)"
                                        }
                                    ],
                                    "label": "return backtrack(begin_word, [begin_word], end_word, word_set)"
                                }
                            ],
                            "label": "def word_ladder(begin_word: str, end_word: str, word_set: set[str]) -> list[str]:\n    \"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    if end_word not in word_set:  # no valid transformation possible\n        return []\n\n    # Perform backtracking starting from the begin_word\n    return backtrack(begin_word, [begin_word], end_word, word_set)"
                        }
                    ],
                    "label": "def word_ladder(begin_word: str, end_word: str, word_set: set[str]) -> list[str]:\n    \"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    if end_word not in word_set:  # no valid transformation possible\n        return []\n\n    # Perform backtracking starting from the begin_word\n    return backtrack(begin_word, [begin_word], end_word, word_set)"
                }
            ]
        }
    ],
    "label": "\"\"\"\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\n\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n\"\"\"\n\nimport string\n\n\n\n"
}