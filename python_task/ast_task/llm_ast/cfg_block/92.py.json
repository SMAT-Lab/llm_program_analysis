{
    "type": "module",
    "start_token": 0,
    "end_token": 12,
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 3,
            "children": [],
            "label": "# https://www.tutorialspoint.com/python3/bitwise_operators_example.htm\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n"
        },
        {
            "type": "if_statement",
            "start_token": 4,
            "end_token": 12,
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 4,
                    "end_token": 6,
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 4,
                            "end_token": 6,
                            "children": [],
                            "label": ""
                        }
                    ],
                    "label": ""
                },
                {
                    "type": "block",
                    "start_token": 7,
                    "end_token": 12,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 7,
                            "end_token": 8,
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "start_token": 7,
                                    "end_token": 8,
                                    "children": [],
                                    "label": ""
                                }
                            ],
                            "label": ""
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 9,
                            "end_token": 11,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 9,
                                    "end_token": 11,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 9,
                                            "end_token": 10,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "children": [],
                                                    "label": ""
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 10,
                                                    "end_token": 10,
                                                    "children": [],
                                                    "label": ""
                                                }
                                            ],
                                            "label": ""
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 11,
                                            "end_token": 11,
                                            "children": [],
                                            "label": ""
                                        }
                                    ],
                                    "label": ""
                                }
                            ],
                            "label": ""
                        }
                    ],
                    "label": ""
                }
            ],
            "label": ""
        },
        {
            "type": "function_placeholder",
            "name": "binary_xor",
            "start_line": 4,
            "end_line": 46,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 137,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 137,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "binary_xor"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 10,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "children": [],
                                                    "label": "a"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "a: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "children": [],
                                                    "label": "b"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "b: int"
                                        }
                                    ],
                                    "label": "(a: int, b: int)"
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 11,
                                    "end_token": 13,
                                    "children": [
                                        {
                                            "type": "type",
                                            "start_token": 13,
                                            "end_token": 13,
                                            "children": [],
                                            "label": "str"
                                        }
                                    ],
                                    "label": "-> str"
                                },
                                {
                                    "type": "string",
                                    "start_token": 16,
                                    "end_token": 22,
                                    "children": [
                                        {
                                            "type": "string_content",
                                            "start_token": 17,
                                            "end_token": 21,
                                            "children": [],
                                            "label": "\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary xor operation on the integers provided.\n\n    >>> binary_xor(25, 32)\n    '0b111001'\n    >>> binary_xor(37, 50)\n    '0b010111'\n    >>> binary_xor(21, 30)\n    '0b01011'\n    >>> binary_xor(58, 73)\n    '0b1110011'\n    >>> binary_xor(0, 255)\n    '0b11111111'\n    >>> binary_xor(256, 256)\n    '0b000000000'\n    >>> binary_xor(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_xor(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    TypeError: 'float' object cannot be interpreted as an integer\n    >>> binary_xor(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \""
                                        }
                                    ],
                                    "label": "\"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary xor operation on the integers provided.\n\n    >>> binary_xor(25, 32)\n    '0b111001'\n    >>> binary_xor(37, 50)\n    '0b010111'\n    >>> binary_xor(21, 30)\n    '0b01011'\n    >>> binary_xor(58, 73)\n    '0b1110011'\n    >>> binary_xor(0, 255)\n    '0b11111111'\n    >>> binary_xor(256, 256)\n    '0b000000000'\n    >>> binary_xor(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_xor(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    TypeError: 'float' object cannot be interpreted as an integer\n    >>> binary_xor(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 24,
                                    "end_token": 137,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 24,
                                            "end_token": 38,
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "start_token": 25,
                                                    "end_token": 31,
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 25,
                                                            "end_token": 27,
                                                            "children": [],
                                                            "label": "a < 0"
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 29,
                                                            "end_token": 31,
                                                            "children": [],
                                                            "label": "b < 0"
                                                        }
                                                    ],
                                                    "label": "a < 0 or b < 0"
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 34,
                                                    "end_token": 38,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 35,
                                                            "end_token": 38,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 35,
                                                                    "end_token": 35,
                                                                    "children": [],
                                                                    "label": "ValueError"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 36,
                                                                    "end_token": 38,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 37,
                                                                            "end_token": 37,
                                                                            "children": [],
                                                                            "label": "\"the value of both inputs must be positive\""
                                                                        }
                                                                    ],
                                                                    "label": "(\"the value of both inputs must be positive\")"
                                                                }
                                                            ],
                                                            "label": "ValueError(\"the value of both inputs must be positive\")"
                                                        }
                                                    ],
                                                    "label": "raise ValueError(\"the value of both inputs must be positive\")"
                                                }
                                            ],
                                            "label": "if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 41,
                                            "end_token": 58,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 41,
                                                    "end_token": 41,
                                                    "children": [],
                                                    "label": "a_binary"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 43,
                                                    "end_token": 53,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 43,
                                                            "end_token": 43,
                                                            "children": [],
                                                            "label": "str"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 44,
                                                            "end_token": 49,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 45,
                                                                    "end_token": 49,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 45,
                                                                            "end_token": 45,
                                                                            "children": [],
                                                                            "label": "bin"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 46,
                                                                            "end_token": 48,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 47,
                                                                                    "end_token": 47,
                                                                                    "children": [],
                                                                                    "label": "a"
                                                                                }
                                                                            ],
                                                                            "label": "(a)"
                                                                        }
                                                                    ],
                                                                    "label": "bin(a))"
                                                                }
                                                            ],
                                                            "label": "(bin(a))"
                                                        }
                                                    ],
                                                    "label": "str(bin(a))[2:]"
                                                },
                                                {
                                                    "type": "slice",
                                                    "start_token": 50,
                                                    "end_token": 53,
                                                    "children": [],
                                                    "label": "[2:]"
                                                }
                                            ],
                                            "label": "a_binary = str(bin(a))[2:]  # remove the leading \"0b\""
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 60,
                                            "end_token": 77,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 60,
                                                    "end_token": 60,
                                                    "children": [],
                                                    "label": "b_binary"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 62,
                                                    "end_token": 72,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 62,
                                                            "end_token": 62,
                                                            "children": [],
                                                            "label": "str"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 63,
                                                            "end_token": 68,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 64,
                                                                    "end_token": 68,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 64,
                                                                            "end_token": 64,
                                                                            "children": [],
                                                                            "label": "bin"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 65,
                                                                            "end_token": 67,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 66,
                                                                                    "end_token": 66,
                                                                                    "children": [],
                                                                                    "label": "b"
                                                                                }
                                                                            ],
                                                                            "label": "(b)"
                                                                        }
                                                                    ],
                                                                    "label": "bin(b))"
                                                                }
                                                            ],
                                                            "label": "(bin(b))"
                                                        }
                                                    ],
                                                    "label": "str(bin(b))[2:]"
                                                },
                                                {
                                                    "type": "slice",
                                                    "start_token": 69,
                                                    "end_token": 72,
                                                    "children": [],
                                                    "label": "[2:]"
                                                }
                                            ],
                                            "label": "b_binary = str(bin(b))[2:]  # remove the leading \"0b\""
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 80,
                                            "end_token": 93,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 80,
                                                    "end_token": 80,
                                                    "children": [],
                                                    "label": "max_len"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 82,
                                                    "end_token": 93,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 82,
                                                            "end_token": 82,
                                                            "children": [],
                                                            "label": "max"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 83,
                                                            "end_token": 92,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 84,
                                                                    "end_token": 87,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 84,
                                                                            "end_token": 84,
                                                                            "children": [],
                                                                            "label": "len"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 85,
                                                                            "end_token": 86,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 86,
                                                                                    "end_token": 86,
                                                                                    "children": [],
                                                                                    "label": "a_binary"
                                                                                }
                                                                            ],
                                                                            "label": "(a_binary"
                                                                        }
                                                                    ],
                                                                    "label": "len(a_binary)"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 89,
                                                                    "end_token": 92,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 89,
                                                                            "end_token": 89,
                                                                            "children": [],
                                                                            "label": "len"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 90,
                                                                            "end_token": 91,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 91,
                                                                                    "end_token": 91,
                                                                                    "children": [],
                                                                                    "label": "b_binary"
                                                                                }
                                                                            ],
                                                                            "label": "(b_binary"
                                                                        }
                                                                    ],
                                                                    "label": "len(b_binary)"
                                                                }
                                                            ],
                                                            "label": "(len(a_binary), len(b_binary)"
                                                        }
                                                    ],
                                                    "label": "max(len(a_binary), len(b_binary))"
                                                }
                                            ],
                                            "label": "max_len = max(len(a_binary), len(b_binary))"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 96,
                                            "end_token": 137,
                                            "children": [
                                                {
                                                    "type": "concatenated_string",
                                                    "start_token": 97,
                                                    "end_token": 137,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 97,
                                                            "end_token": 97,
                                                            "children": [],
                                                            "label": "\"0b\""
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 99,
                                                            "end_token": 137,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 101,
                                                                    "end_token": 101,
                                                                    "children": [],
                                                                    "label": "join"
                                                                },
                                                                {
                                                                    "type": "generator_expression",
                                                                    "start_token": 102,
                                                                    "end_token": 137,
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 104,
                                                                            "end_token": 112,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 104,
                                                                                    "end_token": 104,
                                                                                    "children": [],
                                                                                    "label": "str"
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 105,
                                                                                    "end_token": 111,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "start_token": 108,
                                                                                            "end_token": 110,
                                                                                            "children": [],
                                                                                            "label": "char_a !="
                                                                                        }
                                                                                    ],
                                                                                    "label": "(int(char_a != char_b"
                                                                                }
                                                                            ],
                                                                            "label": "str(int(char_a != char_b)"
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "start_token": 115,
                                                                            "end_token": 135,
                                                                            "children": [
                                                                                {
                                                                                    "type": "pattern_list",
                                                                                    "start_token": 116,
                                                                                    "end_token": 118,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 116,
                                                                                            "end_token": 116,
                                                                                            "children": [],
                                                                                            "label": "char_a"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 118,
                                                                                            "end_token": 118,
                                                                                            "children": [],
                                                                                            "label": "char_b"
                                                                                        }
                                                                                    ],
                                                                                    "label": "char_a, char_b"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 120,
                                                                                    "end_token": 135,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 120,
                                                                                            "end_token": 120,
                                                                                            "children": [],
                                                                                            "label": "zip"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 121,
                                                                                            "end_token": 135,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "start_token": 122,
                                                                                                    "end_token": 127,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "start_token": 122,
                                                                                                            "end_token": 124,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 122,
                                                                                                                    "end_token": 122,
                                                                                                                    "children": [],
                                                                                                                    "label": "a_binary"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "a_binary.zfill"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "start_token": 125,
                                                                                                            "end_token": 126,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 126,
                                                                                                                    "end_token": 126,
                                                                                                                    "children": [],
                                                                                                                    "label": "max_len"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "(max_len"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "a_binary.zfill(max_len)"
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "start_token": 129,
                                                                                                    "end_token": 134,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "start_token": 129,
                                                                                                            "end_token": 131,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 129,
                                                                                                                    "end_token": 129,
                                                                                                                    "children": [],
                                                                                                                    "label": "b_binary"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "b_binary.zfill"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "start_token": 132,
                                                                                                            "end_token": 133,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 133,
                                                                                                                    "end_token": 133,
                                                                                                                    "children": [],
                                                                                                                    "label": "max_len"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "(max_len"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "b_binary.zfill(max_len)"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(a_binary.zfill(max_len), b_binary.zfill(max_len))"
                                                                                        }
                                                                                    ],
                                                                                    "label": "zip(a_binary.zfill(max_len), b_binary.zfill(max_len))"
                                                                                }
                                                                            ],
                                                                            "label": "for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))"
                                                                        }
                                                                    ],
                                                                    "label": "(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                                                                }
                                                            ],
                                                            "label": "\"\".join(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                                                        }
                                                    ],
                                                    "label": "\"0b\" + \"\".join(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                                                }
                                            ],
                                            "label": "return \"0b\" + \"\".join(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                                        }
                                    ],
                                    "label": "if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = str(bin(a))[2:]  # remove the leading \"0b\"\n    b_binary = str(bin(b))[2:]  # remove the leading \"0b\"\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                                }
                            ],
                            "label": "def binary_xor(a: int, b: int) -> str:\n    \"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary xor operation on the integers provided.\n\n    >>> binary_xor(25, 32)\n    '0b111001'\n    >>> binary_xor(37, 50)\n    '0b010111'\n    >>> binary_xor(21, 30)\n    '0b01011'\n    >>> binary_xor(58, 73)\n    '0b1110011'\n    >>> binary_xor(0, 255)\n    '0b11111111'\n    >>> binary_xor(256, 256)\n    '0b000000000'\n    >>> binary_xor(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_xor(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    TypeError: 'float' object cannot be interpreted as an integer\n    >>> binary_xor(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = str(bin(a))[2:]  # remove the leading \"0b\"\n    b_binary = str(bin(b))[2:]  # remove the leading \"0b\"\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                        }
                    ],
                    "label": "def binary_xor(a: int, b: int) -> str:\n    \"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary xor operation on the integers provided.\n\n    >>> binary_xor(25, 32)\n    '0b111001'\n    >>> binary_xor(37, 50)\n    '0b010111'\n    >>> binary_xor(21, 30)\n    '0b01011'\n    >>> binary_xor(58, 73)\n    '0b1110011'\n    >>> binary_xor(0, 255)\n    '0b11111111'\n    >>> binary_xor(256, 256)\n    '0b000000000'\n    >>> binary_xor(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_xor(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    TypeError: 'float' object cannot be interpreted as an integer\n    >>> binary_xor(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = str(bin(a))[2:]  # remove the leading \"0b\"\n    b_binary = str(bin(b))[2:]  # remove the leading \"0b\"\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a != char_b))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                }
            ]
        }
    ],
    "label": ""
}