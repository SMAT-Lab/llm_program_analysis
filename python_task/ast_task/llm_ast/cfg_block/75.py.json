{
    "type": "module",
    "start_token": 0,
    "end_token": 106,
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [],
                    "label": "import"
                },
                {
                    "type": "identifier",
                    "start_token": 1,
                    "end_token": 1,
                    "children": [],
                    "label": "pytest"
                }
            ],
            "label": "import pytest"
        },
        {
            "type": "import_from_statement",
            "start_token": 4,
            "end_token": 8,
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 5,
                    "end_token": 5,
                    "children": [],
                    "label": "."
                },
                {
                    "type": "dotted_name",
                    "start_token": 6,
                    "end_token": 6,
                    "children": [],
                    "label": "utils"
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "children": [],
                    "label": "remove_color_codes"
                }
            ],
            "label": "from .utils import remove_color_codes"
        },
        {
            "type": "decorated_definition",
            "start_token": 12,
            "end_token": 105,
            "children": [
                {
                    "type": "decorator",
                    "start_token": 12,
                    "end_token": 17,
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 13,
                            "end_token": 15,
                            "children": [],
                            "label": "pytest.mark"
                        },
                        {
                            "type": "identifier",
                            "start_token": 17,
                            "end_token": 17,
                            "children": [],
                            "label": "parametrize"
                        }
                    ],
                    "label": "@pytest.mark.parametrize"
                },
                {
                    "type": "call",
                    "start_token": 18,
                    "end_token": 105,
                    "children": [
                        {
                            "type": "argument_list",
                            "start_token": 19,
                            "end_token": 104,
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 20,
                                    "end_token": 20,
                                    "children": [],
                                    "label": "\"raw_text, clean_text\""
                                },
                                {
                                    "type": "list",
                                    "start_token": 23,
                                    "end_token": 102,
                                    "children": [
                                        {
                                            "type": "tuple",
                                            "start_token": 25,
                                            "end_token": 41,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 27,
                                                    "end_token": 31,
                                                    "children": [],
                                                    "label": "\"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 34,
                                                    "end_token": 38,
                                                    "children": [],
                                                    "label": "\"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\""
                                                }
                                            ],
                                            "label": "(\n            \"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\",\n            \"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\",\n        )"
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 44,
                                            "end_token": 60,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 46,
                                                    "end_token": 50,
                                                    "children": [],
                                                    "label": "\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 53,
                                                    "end_token": 57,
                                                    "children": [],
                                                    "label": "\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\""
                                                }
                                            ],
                                            "label": "(\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n        )"
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 63,
                                            "end_token": 67,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 64,
                                                    "end_token": 64,
                                                    "children": [],
                                                    "label": "\"\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 66,
                                                    "end_token": 66,
                                                    "children": [],
                                                    "label": "\"\""
                                                }
                                            ],
                                            "label": "(\"\", \"\")"
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 70,
                                            "end_token": 74,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 71,
                                                    "end_token": 71,
                                                    "children": [],
                                                    "label": "\"hello\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 73,
                                                    "end_token": 73,
                                                    "children": [],
                                                    "label": "\"hello\""
                                                }
                                            ],
                                            "label": "(\"hello\", \"hello\")"
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 77,
                                            "end_token": 81,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 78,
                                                    "end_token": 78,
                                                    "children": [],
                                                    "label": "\"hello\\x1b[31m world\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 80,
                                                    "end_token": 80,
                                                    "children": [],
                                                    "label": "\"hello world\""
                                                }
                                            ],
                                            "label": "(\"hello\\x1b[31m world\", \"hello world\")"
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 84,
                                            "end_token": 88,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 85,
                                                    "end_token": 85,
                                                    "children": [],
                                                    "label": "\"\\x1b[36mHello,\\x1b[32m World!\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 87,
                                                    "end_token": 87,
                                                    "children": [],
                                                    "label": "\"Hello, World!\""
                                                }
                                            ],
                                            "label": "(\"\\x1b[36mHello,\\x1b[32m World!\", \"Hello, World!\")"
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 91,
                                            "end_token": 99,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 93,
                                                    "end_token": 93,
                                                    "children": [],
                                                    "label": "\"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\""
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 96,
                                                    "end_token": 96,
                                                    "children": [],
                                                    "label": "\"Error: file not found\""
                                                }
                                            ],
                                            "label": "(\n            \"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n            \"Error: file not found\",\n        )"
                                        }
                                    ],
                                    "label": "[\n        (\n            \"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\",\n            \"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\",\n        ),\n        (\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n        ),\n        (\"\", \"\"),\n        (\"hello\", \"hello\"),\n        (\"hello\\x1b[31m world\", \"hello world\"),\n        (\"\\x1b[36mHello,\\x1b[32m World!\", \"Hello, World!\"),\n        (\n            \"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n            \"Error: file not found\",\n        ),\n    ]"
                                }
                            ],
                            "label": "\n    \"raw_text, clean_text\",\n    [\n        (\n            \"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\",\n            \"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\",\n        ),\n        (\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n        ),\n        (\"\", \"\"),\n        (\"hello\", \"hello\"),\n        (\"hello\\x1b[31m world\", \"hello world\"),\n        (\"\\x1b[36mHello,\\x1b[32m World!\", \"Hello, World!\"),\n        (\n            \"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n            \"Error: file not found\",\n        ),\n    ],\n"
                        }
                    ],
                    "label": "(\n    \"raw_text, clean_text\",\n    [\n        (\n            \"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\",\n            \"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\",\n        ),\n        (\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n        ),\n        (\"\", \"\"),\n        (\"hello\", \"hello\"),\n        (\"hello\\x1b[31m world\", \"hello world\"),\n        (\"\\x1b[36mHello,\\x1b[32m World!\", \"Hello, World!\"),\n        (\n            \"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n            \"Error: file not found\",\n        ),\n    ],\n)"
                }
            ],
            "label": "@pytest.mark.parametrize(\n    \"raw_text, clean_text\",\n    [\n        (\n            \"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\",\n            \"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\",\n        ),\n        (\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n        ),\n        (\"\", \"\"),\n        (\"hello\", \"hello\"),\n        (\"hello\\x1b[31m world\", \"hello world\"),\n        (\"\\x1b[36mHello,\\x1b[32m World!\", \"Hello, World!\"),\n        (\n            \"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n            \"Error: file not found\",\n        ),\n    ],\n)"
        },
        {
            "type": "function_placeholder",
            "name": "test_remove_color_codes",
            "start_line": 35,
            "end_line": 36,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 17,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 17,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "test_remove_color_codes"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 3,
                                            "end_token": 3,
                                            "label": "raw_text"
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 5,
                                            "end_token": 5,
                                            "label": "clean_text"
                                        }
                                    ],
                                    "label": "(raw_text, clean_text)"
                                },
                                {
                                    "type": "block",
                                    "start_token": 7,
                                    "end_token": 17,
                                    "children": [
                                        {
                                            "type": "assert_statement",
                                            "start_token": 9,
                                            "end_token": 16,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 10,
                                                    "end_token": 13,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 10,
                                                            "end_token": 10,
                                                            "label": "remove_color_codes"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 11,
                                                            "end_token": 13,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 12,
                                                                    "end_token": 12,
                                                                    "label": "raw_text"
                                                                }
                                                            ],
                                                            "label": "(raw_text)"
                                                        }
                                                    ],
                                                    "label": "remove_color_codes(raw_text)"
                                                },
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 14,
                                                    "end_token": 15,
                                                    "label": "=="
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 16,
                                                    "end_token": 16,
                                                    "label": "clean_text"
                                                }
                                            ],
                                            "label": "assert remove_color_codes(raw_text) == clean_text"
                                        }
                                    ],
                                    "label": ":\n    assert remove_color_codes(raw_text) == clean_text\n"
                                }
                            ],
                            "label": "def test_remove_color_codes(raw_text, clean_text):\n    assert remove_color_codes(raw_text) == clean_text\n"
                        }
                    ],
                    "label": "def test_remove_color_codes(raw_text, clean_text):\n    assert remove_color_codes(raw_text) == clean_text\n"
                }
            ]
        }
    ],
    "label": "import pytest\n\nfrom .utils import remove_color_codes\n\n\n@pytest.mark.parametrize(\n    \"raw_text, clean_text\",\n    [\n        (\n            \"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n            \"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\\x1b[0m\",\n            \"COMMAND = browse_website  \"\n            \"ARGUMENTS = {'url': 'https://www.google.com',\"\n            \" 'question': 'What is the capital of France?'}\",\n        ),\n        (\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n            \"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n            \"'https://github.com/Significant-Gravitas/AutoGPT,\"\n            \" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n        ),\n        (\"\", \"\"),\n        (\"hello\", \"hello\"),\n        (\"hello\\x1b[31m world\", \"hello world\"),\n        (\"\\x1b[36mHello,\\x1b[32m World!\", \"Hello, World!\"),\n        (\n            \"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n            \"Error: file not found\",\n        ),\n    ],\n)\n"
}