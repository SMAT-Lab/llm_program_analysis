{
    "type": "module",
    "start_token": 0,
    "end_token": 7,
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 0,
            "children": [],
            "label": "#"
        },
        {
            "type": "string",
            "start_token": 1,
            "end_token": 3,
            "children": [
                {
                    "type": "string_start",
                    "start_token": 1,
                    "end_token": 1,
                    "children": [],
                    "label": "https"
                },
                {
                    "type": "string_content",
                    "start_token": 2,
                    "end_token": 2,
                    "children": [],
                    "label": ":"
                },
                {
                    "type": "string_end",
                    "start_token": 3,
                    "end_token": 3,
                    "children": [],
                    "label": "//www.tutorialspoint.com/python3/bitwise_operators_example.htm\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n"
                }
            ],
            "label": "https://www.tutorialspoint.com/python3/bitwise_operators_example.htm\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n"
        },
        {
            "type": "block",
            "start_token": 4,
            "end_token": 7,
            "children": [
                {
                    "type": "if_statement",
                    "start_token": 4,
                    "end_token": 7,
                    "children": [
                        {
                            "type": "if_clause",
                            "start_token": 4,
                            "end_token": 7,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 4,
                                    "end_token": 4,
                                    "children": [],
                                    "label": ""
                                },
                                {
                                    "type": "block",
                                    "start_token": 5,
                                    "end_token": 7,
                                    "children": [
                                        {
                                            "type": "import_statement",
                                            "start_token": 5,
                                            "end_token": 6,
                                            "children": [
                                                {
                                                    "type": "dotted_name",
                                                    "start_token": 5,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 5,
                                                            "end_token": 5,
                                                            "children": [],
                                                            "label": ""
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": [],
                                                            "label": ""
                                                        }
                                                    ],
                                                    "label": ""
                                                }
                                            ],
                                            "label": ""
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 7,
                                            "end_token": 7,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 7,
                                                            "end_token": 7,
                                                            "children": [],
                                                            "label": ""
                                                        }
                                                    ],
                                                    "label": ""
                                                }
                                            ],
                                            "label": ""
                                        }
                                    ],
                                    "label": ""
                                }
                            ],
                            "label": ""
                        }
                    ],
                    "label": ""
                }
            ],
            "label": ""
        },
        {
            "type": "function_placeholder",
            "name": "binary_and",
            "start_line": 4,
            "end_line": 46,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 123,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 123,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "binary_and"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 10,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "label": "a"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "a: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "label": "b"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "b: int"
                                        }
                                    ],
                                    "label": "(a: int, b: int)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 13,
                                    "end_token": 13,
                                    "label": "str"
                                },
                                {
                                    "type": "block",
                                    "start_token": 15,
                                    "end_token": 123,
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 16,
                                            "end_token": 21,
                                            "label": "\"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary and operation on the integers provided.\n\n    >>> binary_and(25, 32)\n    '0b000000'\n    >>> binary_and(37, 50)\n    '0b100000'\n    >>> binary_and(21, 30)\n    '0b10100'\n    >>> binary_and(58, 73)\n    '0b0001000'\n    >>> binary_and(0, 255)\n    '0b00000000'\n    >>> binary_and(256, 256)\n    '0b100000000'\n    >>> binary_and(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_and(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: Unknown format code 'b' for object of type 'float'\n    >>> binary_and(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \""
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 24,
                                            "end_token": 38,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 26,
                                                    "end_token": 31,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 25,
                                                            "end_token": 25,
                                                            "label": "a"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "label": "0"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 29,
                                                            "end_token": 29,
                                                            "label": "b"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 31,
                                                            "end_token": 31,
                                                            "label": "0"
                                                        }
                                                    ],
                                                    "label": "< 0 or b < 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 33,
                                                    "end_token": 38,
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 34,
                                                            "end_token": 38,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 35,
                                                                    "end_token": 38,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 35,
                                                                            "end_token": 35,
                                                                            "label": "ValueError"
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 37,
                                                                            "end_token": 37,
                                                                            "label": "\"the value of both inputs must be positive\""
                                                                        }
                                                                    ],
                                                                    "label": "ValueError(\"the value of both inputs must be positive\")"
                                                                }
                                                            ],
                                                            "label": "raise ValueError(\"the value of both inputs must be positive\")"
                                                        }
                                                    ],
                                                    "label": "\n        raise ValueError(\"the value of both inputs must be positive\")"
                                                }
                                            ],
                                            "label": "if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 41,
                                            "end_token": 48,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 41,
                                                    "end_token": 41,
                                                    "label": "a_binary"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 43,
                                                    "end_token": 48,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 43,
                                                            "end_token": 43,
                                                            "label": "format"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 45,
                                                            "end_token": 45,
                                                            "label": "a"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 47,
                                                            "end_token": 47,
                                                            "label": "\"b\""
                                                        }
                                                    ],
                                                    "label": "format(a, \"b\")"
                                                }
                                            ],
                                            "label": "a_binary = format(a, \"b\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 50,
                                            "end_token": 57,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 50,
                                                    "end_token": 50,
                                                    "label": "b_binary"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 52,
                                                    "end_token": 57,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 52,
                                                            "end_token": 52,
                                                            "label": "format"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 54,
                                                            "end_token": 54,
                                                            "label": "b"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 56,
                                                            "end_token": 56,
                                                            "label": "\"b\""
                                                        }
                                                    ],
                                                    "label": "format(b, \"b\")"
                                                }
                                            ],
                                            "label": "b_binary = format(b, \"b\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 60,
                                            "end_token": 73,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 60,
                                                    "end_token": 60,
                                                    "label": "max_len"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 62,
                                                    "end_token": 73,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 62,
                                                            "end_token": 62,
                                                            "label": "max"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 64,
                                                            "end_token": 67,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 64,
                                                                    "end_token": 64,
                                                                    "label": "len"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 66,
                                                                    "end_token": 66,
                                                                    "label": "a_binary"
                                                                }
                                                            ],
                                                            "label": "len(a_binary)"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 69,
                                                            "end_token": 72,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 69,
                                                                    "end_token": 69,
                                                                    "label": "len"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 71,
                                                                    "end_token": 71,
                                                                    "label": "b_binary"
                                                                }
                                                            ],
                                                            "label": "len(b_binary)"
                                                        }
                                                    ],
                                                    "label": "max(len(a_binary), len(b_binary))"
                                                }
                                            ],
                                            "label": "max_len = max(len(a_binary), len(b_binary))"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 76,
                                            "end_token": 123,
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 78,
                                                    "end_token": 79,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 77,
                                                            "end_token": 77,
                                                            "label": "\"0b\""
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 80,
                                                            "end_token": 123,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 80,
                                                                    "end_token": 80,
                                                                    "label": "."
                                                                },
                                                                {
                                                                    "type": "generator_expression",
                                                                    "start_token": 82,
                                                                    "end_token": 122,
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 84,
                                                                            "end_token": 97,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 84,
                                                                                    "end_token": 84,
                                                                                    "label": "str"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 86,
                                                                                    "end_token": 97,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 86,
                                                                                            "end_token": 86,
                                                                                            "label": "int"
                                                                                        },
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "start_token": 90,
                                                                                            "end_token": 96,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 88,
                                                                                                    "end_token": 88,
                                                                                                    "label": "char_a"
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "start_token": 92,
                                                                                                    "end_token": 92,
                                                                                                    "label": "and"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 94,
                                                                                                    "end_token": 94,
                                                                                                    "label": "="
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "start_token": 96,
                                                                                                    "end_token": 96,
                                                                                                    "label": "\"1\""
                                                                                                }
                                                                                            ],
                                                                                            "label": "= \"1\" and char_b == \"1\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "int(char_a == \"1\" and char_b == \"1\")"
                                                                                }
                                                                            ],
                                                                            "label": "str(int(char_a == \"1\" and char_b == \"1\")"
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "start_token": 100,
                                                                            "end_token": 120,
                                                                            "children": [
                                                                                {
                                                                                    "type": "pattern_list",
                                                                                    "start_token": 101,
                                                                                    "end_token": 103,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 101,
                                                                                            "end_token": 101,
                                                                                            "label": "char_a"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 103,
                                                                                            "end_token": 103,
                                                                                            "label": "char_b"
                                                                                        }
                                                                                    ],
                                                                                    "label": "char_a, char_b"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 105,
                                                                                    "end_token": 120,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 105,
                                                                                            "end_token": 105,
                                                                                            "label": "zip"
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "start_token": 107,
                                                                                            "end_token": 113,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 107,
                                                                                                    "end_token": 107,
                                                                                                    "label": "a_binary"
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "start_token": 109,
                                                                                                    "end_token": 112,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 109,
                                                                                                            "end_token": 109,
                                                                                                            "label": "zfill"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 111,
                                                                                                            "end_token": 111,
                                                                                                            "label": "max_len"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "zfill(max_len)"
                                                                                                }
                                                                                            ],
                                                                                            "label": "a_binary.zfill(max_len),"
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "start_token": 115,
                                                                                            "end_token": 119,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 115,
                                                                                                    "end_token": 115,
                                                                                                    "label": "."
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "start_token": 117,
                                                                                                    "end_token": 118,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 117,
                                                                                                            "end_token": 117,
                                                                                                            "label": "("
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 118,
                                                                                                            "end_token": 118,
                                                                                                            "label": "max_len"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "(max_len"
                                                                                                }
                                                                                            ],
                                                                                            "label": ".zfill(max_len)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "zip(a_binary.zfill(max_len), b_binary.zfill(max_len))"
                                                                                }
                                                                            ],
                                                                            "label": "for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))"
                                                                        }
                                                                    ],
                                                                    "label": "(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )"
                                                                }
                                                            ],
                                                            "label": ".join(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )\n"
                                                        }
                                                    ],
                                                    "label": "+ \"\""
                                                }
                                            ],
                                            "label": "return \"0b\" + \"\".join(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )\n"
                                        }
                                    ],
                                    "label": "\n    \"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary and operation on the integers provided.\n\n    >>> binary_and(25, 32)\n    '0b000000'\n    >>> binary_and(37, 50)\n    '0b100000'\n    >>> binary_and(21, 30)\n    '0b10100'\n    >>> binary_and(58, 73)\n    '0b0001000'\n    >>> binary_and(0, 255)\n    '0b00000000'\n    >>> binary_and(256, 256)\n    '0b100000000'\n    >>> binary_and(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_and(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: Unknown format code 'b' for object of type 'float'\n    >>> binary_and(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = format(a, \"b\")\n    b_binary = format(b, \"b\")\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )\n"
                                }
                            ],
                            "label": "def binary_and(a: int, b: int) -> str:\n    \"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary and operation on the integers provided.\n\n    >>> binary_and(25, 32)\n    '0b000000'\n    >>> binary_and(37, 50)\n    '0b100000'\n    >>> binary_and(21, 30)\n    '0b10100'\n    >>> binary_and(58, 73)\n    '0b0001000'\n    >>> binary_and(0, 255)\n    '0b00000000'\n    >>> binary_and(256, 256)\n    '0b100000000'\n    >>> binary_and(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_and(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: Unknown format code 'b' for object of type 'float'\n    >>> binary_and(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = format(a, \"b\")\n    b_binary = format(b, \"b\")\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )\n"
                        }
                    ],
                    "label": "def binary_and(a: int, b: int) -> str:\n    \"\"\"\n    Take in 2 integers, convert them to binary,\n    return a binary number that is the\n    result of a binary and operation on the integers provided.\n\n    >>> binary_and(25, 32)\n    '0b000000'\n    >>> binary_and(37, 50)\n    '0b100000'\n    >>> binary_and(21, 30)\n    '0b10100'\n    >>> binary_and(58, 73)\n    '0b0001000'\n    >>> binary_and(0, 255)\n    '0b00000000'\n    >>> binary_and(256, 256)\n    '0b100000000'\n    >>> binary_and(0, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of both inputs must be positive\n    >>> binary_and(0, 1.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: Unknown format code 'b' for object of type 'float'\n    >>> binary_and(\"0\", \"1\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"the value of both inputs must be positive\")\n\n    a_binary = format(a, \"b\")\n    b_binary = format(b, \"b\")\n\n    max_len = max(len(a_binary), len(b_binary))\n\n    return \"0b\" + \"\".join(\n        str(int(char_a == \"1\" and char_b == \"1\"))\n        for char_a, char_b in zip(a_binary.zfill(max_len), b_binary.zfill(max_len))\n    )\n"
                }
            ]
        }
    ],
    "label": ""
}