{
    "type": "module",
    "start_token": 0,
    "end_token": 225,
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "children": [],
            "label": "from pathlib import Path"
        },
        {
            "type": "import_from_statement",
            "start_token": 6,
            "end_token": 11,
            "children": [],
            "label": "from prisma.models import User"
        },
        {
            "type": "import_from_statement",
            "start_token": 14,
            "end_token": 21,
            "children": [],
            "label": "from backend.blocks.basic import StoreValueBlock"
        },
        {
            "type": "import_from_statement",
            "start_token": 23,
            "end_token": 30,
            "children": [],
            "label": "from backend.blocks.block import BlockInstallationBlock"
        },
        {
            "type": "import_from_statement",
            "start_token": 32,
            "end_token": 39,
            "children": [],
            "label": "from backend.blocks.http import SendWebRequestBlock"
        },
        {
            "type": "import_from_statement",
            "start_token": 41,
            "end_token": 48,
            "children": [],
            "label": "from backend.blocks.llm import AITextGeneratorBlock"
        },
        {
            "type": "import_from_statement",
            "start_token": 50,
            "end_token": 60,
            "children": [],
            "label": "from backend.blocks.text import ExtractTextInformationBlock, FillTextTemplateBlock\n"
        },
        {
            "type": "import_from_statement",
            "start_token": 61,
            "end_token": 75,
            "children": [],
            "label": "from backend.data.graph import Graph, Link, Node, create_graph\n"
        },
        {
            "type": "import_from_statement",
            "start_token": 76,
            "end_token": 84,
            "children": [],
            "label": "from backend.data.user import get_or_create_user\n"
        },
        {
            "type": "import_from_statement",
            "start_token": 85,
            "end_token": 95,
            "children": [],
            "label": "from backend.util.test import SpinTestServer, wait_execution\n"
        },
        {
            "type": "assignment",
            "start_token": 97,
            "end_token": 121,
            "children": [
                {
                    "type": "dictionary",
                    "start_token": 99,
                    "end_token": 121,
                    "children": [
                        {
                            "type": "pair",
                            "start_token": 101,
                            "end_token": 104,
                            "children": [],
                            "label": "\"llm\": \"Block that calls the AI model to generate text.\","
                        },
                        {
                            "type": "pair",
                            "start_token": 106,
                            "end_token": 109,
                            "children": [],
                            "label": "\"basic\": \"Block that does basic operations.\","
                        },
                        {
                            "type": "pair",
                            "start_token": 111,
                            "end_token": 114,
                            "children": [],
                            "label": "\"text\": \"Blocks that do text operations.\","
                        },
                        {
                            "type": "pair",
                            "start_token": 116,
                            "end_token": 119,
                            "children": [],
                            "label": "\"reddit\": \"Blocks that interacts with Reddit.\","
                        }
                    ],
                    "label": "{\n    \"llm\": \"Block that calls the AI model to generate text.\",\n    \"basic\": \"Block that does basic operations.\",\n    \"text\": \"Blocks that do text operations.\",\n    \"reddit\": \"Blocks that interacts with Reddit.\",\n}"
                }
            ],
            "label": "sample_block_modules = {\n    \"llm\": \"Block that calls the AI model to generate text.\",\n    \"basic\": \"Block that does basic operations.\",\n    \"text\": \"Blocks that do text operations.\",\n    \"reddit\": \"Blocks that interacts with Reddit.\",\n}"
        },
        {
            "type": "assignment",
            "start_token": 123,
            "end_token": 127,
            "children": [
                {
                    "type": "dictionary",
                    "start_token": 125,
                    "end_token": 127,
                    "children": [],
                    "label": "{}\n"
                }
            ],
            "label": "sample_block_codes = {}\n"
        },
        {
            "type": "for_statement",
            "start_token": 128,
            "end_token": 197,
            "children": [
                {
                    "type": "for_in_clause",
                    "start_token": 128,
                    "end_token": 136,
                    "children": [],
                    "label": "for module, description in sample_block_modules.items("
                },
                {
                    "type": "block",
                    "start_token": 138,
                    "end_token": 197,
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 140,
                            "end_token": 148,
                            "children": [],
                            "label": "current_dir = Path(__file__).parent\n"
                        },
                        {
                            "type": "assignment",
                            "start_token": 149,
                            "end_token": 159,
                            "children": [],
                            "label": "file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n"
                        },
                        {
                            "type": "with_statement",
                            "start_token": 160,
                            "end_token": 188,
                            "children": [
                                {
                                    "type": "with_clause",
                                    "start_token": 160,
                                    "end_token": 169,
                                    "children": [],
                                    "label": "with open(file_path, \"r\") as f:"
                                },
                                {
                                    "type": "block",
                                    "start_token": 170,
                                    "end_token": 188,
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 171,
                                            "end_token": 188,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 174,
                                                    "end_token": 188,
                                                    "children": [
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 176,
                                                            "end_token": 186,
                                                            "children": [],
                                                            "label": "([\"```python\", f.read(), \"```\""
                                                        }
                                                    ],
                                                    "label": ".join([\"```python\", f.read(), \"```\"])"
                                                }
                                            ],
                                            "label": "code = \"\\n\".join([\"```python\", f.read(), \"```\"])"
                                        }
                                    ],
                                    "label": "\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])"
                                }
                            ],
                            "label": "with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])"
                        },
                        {
                            "type": "assignment",
                            "start_token": 190,
                            "end_token": 197,
                            "children": [],
                            "label": "sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n"
                        }
                    ],
                    "label": ":\n    current_dir = Path(__file__).parent\n    file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n    with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n        sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n"
                }
            ],
            "label": "for module, description in sample_block_modules.items():\n    current_dir = Path(__file__).parent\n    file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n    with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n        sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n"
        },
        {
            "type": "if_statement",
            "start_token": 206,
            "end_token": 224,
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 206,
                    "end_token": 211,
                    "children": [],
                    "label": "if __name__ == \"__main__\":"
                },
                {
                    "type": "block",
                    "start_token": 212,
                    "end_token": 224,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 213,
                            "end_token": 214,
                            "children": [],
                            "label": "import asyncio"
                        },
                        {
                            "type": "call",
                            "start_token": 217,
                            "end_token": 224,
                            "children": [
                                {
                                    "type": "argument_list",
                                    "start_token": 220,
                                    "end_token": 223,
                                    "children": [],
                                    "label": "(block_autogen_agent()"
                                }
                            ],
                            "label": "asyncio.run(block_autogen_agent())"
                        }
                    ],
                    "label": "\n    import asyncio\n\n    asyncio.run(block_autogen_agent())"
                }
            ],
            "label": "if __name__ == \"__main__\":\n    import asyncio\n\n    asyncio.run(block_autogen_agent())"
        },
        {
            "type": "function_placeholder",
            "name": "create_test_user",
            "start_line": 29,
            "end_line": 36,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 40,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 40,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "label": "async"
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "def"
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 2,
                                    "end_token": 2,
                                    "label": "create_test_user"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 3,
                                    "end_token": 4,
                                    "label": "()"
                                },
                                {
                                    "type": "union_type",
                                    "start_token": 5,
                                    "end_token": 7,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 7,
                                            "end_token": 7,
                                            "label": "User"
                                        }
                                    ],
                                    "label": "-> User"
                                },
                                {
                                    "type": "block",
                                    "start_token": 8,
                                    "end_token": 40,
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 10,
                                            "end_token": 29,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 10,
                                                    "end_token": 10,
                                                    "label": "test_user_data"
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 12,
                                                    "end_token": 29,
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 14,
                                                            "end_token": 17,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 14,
                                                                    "end_token": 14,
                                                                    "label": "\"sub\""
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 16,
                                                                    "end_token": 16,
                                                                    "label": "\"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\""
                                                                }
                                                            ],
                                                            "label": "\"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\","
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 19,
                                                            "end_token": 22,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 19,
                                                                    "end_token": 19,
                                                                    "label": "\"email\""
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 21,
                                                                    "end_token": 21,
                                                                    "label": "\"testuser@example.com\""
                                                                }
                                                            ],
                                                            "label": "\"email\": \"testuser@example.com\","
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 24,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 24,
                                                                    "end_token": 24,
                                                                    "label": "\"name\""
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 26,
                                                                    "end_token": 26,
                                                                    "label": "\"Test User\""
                                                                }
                                                            ],
                                                            "label": "\"name\": \"Test User\","
                                                        }
                                                    ],
                                                    "label": "{\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }"
                                                }
                                            ],
                                            "label": "test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 31,
                                            "end_token": 37,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 31,
                                                    "end_token": 31,
                                                    "label": "user"
                                                },
                                                {
                                                    "type": "await",
                                                    "start_token": 33,
                                                    "end_token": 37,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 34,
                                                            "end_token": 37,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 34,
                                                                    "end_token": 34,
                                                                    "label": "get_or_create_user"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 35,
                                                                    "end_token": 36,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 36,
                                                                            "end_token": 36,
                                                                            "label": "test_user_data"
                                                                        }
                                                                    ],
                                                                    "label": "(test_user_data"
                                                                }
                                                            ],
                                                            "label": "get_or_create_user(test_user_data)"
                                                        }
                                                    ],
                                                    "label": "await get_or_create_user(test_user_data)"
                                                }
                                            ],
                                            "label": "user = await get_or_create_user(test_user_data)"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 39,
                                            "end_token": 40,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 40,
                                                    "end_token": 40,
                                                    "label": "user"
                                                }
                                            ],
                                            "label": "return user"
                                        }
                                    ],
                                    "label": ":\n    test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }\n    user = await get_or_create_user(test_user_data)\n    return user"
                                }
                            ],
                            "label": "async def create_test_user() -> User:\n    test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }\n    user = await get_or_create_user(test_user_data)\n    return user"
                        }
                    ],
                    "label": "async def create_test_user() -> User:\n    test_user_data = {\n        \"sub\": \"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n        \"email\": \"testuser@example.com\",\n        \"name\": \"Test User\",\n    }\n    user = await get_or_create_user(test_user_data)\n    return user"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "create_test_graph",
            "start_line": 39,
            "end_line": 247,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 829,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 829,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 0,
                                    "end_token": 1,
                                    "label": "def create_test_graph"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 3,
                                    "label": "()"
                                },
                                {
                                    "type": "type",
                                    "start_token": 5,
                                    "end_token": 6,
                                    "label": "> Graph"
                                },
                                {
                                    "type": "block",
                                    "start_token": 7,
                                    "end_token": 829,
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 9,
                                            "end_token": 11,
                                            "label": "\"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\""
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 13,
                                            "end_token": 31,
                                            "label": "# ======= Nodes ========= #"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 33,
                                            "end_token": 45,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 33,
                                                    "end_token": 34,
                                                    "label": "input_data ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 35,
                                                    "end_token": 45,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 35,
                                                            "end_token": 36,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 36,
                                                            "end_token": 44,
                                                            "label": "(block_id=StoreValueBlock().id)"
                                                        }
                                                    ],
                                                    "label": "Node(block_id=StoreValueBlock().id)\n"
                                                }
                                            ],
                                            "label": "input_data = Node(block_id=StoreValueBlock().id)\n"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 46,
                                            "end_token": 69,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 46,
                                                    "end_token": 47,
                                                    "label": "input_query_constant ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 48,
                                                    "end_token": 69,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 48,
                                                            "end_token": 49,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 49,
                                                            "end_token": 69,
                                                            "label": "(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )"
                                                }
                                            ],
                                            "label": "input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 71,
                                            "end_token": 97,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 71,
                                                    "end_token": 72,
                                                    "label": "input_text_formatter ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 73,
                                                    "end_token": 97,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 73,
                                                            "end_token": 74,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 74,
                                                            "end_token": 97,
                                                            "label": "(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )"
                                                }
                                            ],
                                            "label": "input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 99,
                                            "end_token": 125,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 99,
                                                    "end_token": 100,
                                                    "label": "search_http_request ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 101,
                                                    "end_token": 125,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 101,
                                                            "end_token": 102,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 102,
                                                            "end_token": 125,
                                                            "label": "(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )"
                                                }
                                            ],
                                            "label": "search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 127,
                                            "end_token": 153,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 127,
                                                    "end_token": 128,
                                                    "label": "search_result_constant ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 129,
                                                    "end_token": 153,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 129,
                                                            "end_token": 130,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 130,
                                                            "end_token": 153,
                                                            "label": "(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )"
                                                }
                                            ],
                                            "label": "search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 155,
                                            "end_token": 188,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 155,
                                                    "end_token": 156,
                                                    "label": "prompt_text_formatter ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 157,
                                                    "end_token": 188,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 157,
                                                            "end_token": 158,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 158,
                                                            "end_token": 188,
                                                            "label": "(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )"
                                                }
                                            ],
                                            "label": "prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 190,
                                            "end_token": 234,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 190,
                                                    "end_token": 191,
                                                    "label": "code_gen_llm_call ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 192,
                                                    "end_token": 234,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 192,
                                                            "end_token": 193,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 193,
                                                            "end_token": 234,
                                                            "label": "(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )"
                                                }
                                            ],
                                            "label": "code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 236,
                                            "end_token": 267,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 236,
                                                    "end_token": 237,
                                                    "label": "code_text_parser ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 238,
                                                    "end_token": 267,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 238,
                                                            "end_token": 239,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 239,
                                                            "end_token": 267,
                                                            "label": "(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )"
                                                }
                                            ],
                                            "label": "code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 269,
                                            "end_token": 283,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 269,
                                                    "end_token": 270,
                                                    "label": "block_installation ="
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 271,
                                                    "end_token": 283,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 271,
                                                            "end_token": 272,
                                                            "label": "Node("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 272,
                                                            "end_token": 283,
                                                            "label": "(\n        block_id=BlockInstallationBlock().id,\n    )"
                                                        }
                                                    ],
                                                    "label": "Node(\n        block_id=BlockInstallationBlock().id,\n    )"
                                                }
                                            ],
                                            "label": "block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 285,
                                            "end_token": 316,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 285,
                                                    "end_token": 286,
                                                    "label": "nodes ="
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 287,
                                                    "end_token": 316,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 289,
                                                            "end_token": 290,
                                                            "label": "input_data,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 292,
                                                            "end_token": 293,
                                                            "label": "input_query_constant,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 295,
                                                            "end_token": 296,
                                                            "label": "input_text_formatter,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 298,
                                                            "end_token": 299,
                                                            "label": "search_http_request,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 301,
                                                            "end_token": 302,
                                                            "label": "search_result_constant,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 304,
                                                            "end_token": 305,
                                                            "label": "prompt_text_formatter,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 307,
                                                            "end_token": 308,
                                                            "label": "code_gen_llm_call,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 310,
                                                            "end_token": 311,
                                                            "label": "code_text_parser,"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 313,
                                                            "end_token": 314,
                                                            "label": "block_installation,"
                                                        }
                                                    ],
                                                    "label": "[\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]"
                                                }
                                            ],
                                            "label": "nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]"
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 318,
                                            "end_token": 337,
                                            "label": "\n    # ======= Links ========= #"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 339,
                                            "end_token": 782,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 339,
                                                    "end_token": 340,
                                                    "label": "links ="
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 341,
                                                    "end_token": 782,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 343,
                                                            "end_token": 370,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 343,
                                                                    "end_token": 344,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 344,
                                                                    "end_token": 370,
                                                                    "label": "(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 373,
                                                            "end_token": 400,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 373,
                                                                    "end_token": 374,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 374,
                                                                    "end_token": 400,
                                                                    "label": "(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 403,
                                                            "end_token": 430,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 403,
                                                                    "end_token": 404,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 404,
                                                                    "end_token": 430,
                                                                    "label": "(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 433,
                                                            "end_token": 460,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 433,
                                                                    "end_token": 434,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 434,
                                                                    "end_token": 460,
                                                                    "label": "(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 463,
                                                            "end_token": 490,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 463,
                                                                    "end_token": 464,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 464,
                                                                    "end_token": 490,
                                                                    "label": "(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 493,
                                                            "end_token": 525,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 493,
                                                                    "end_token": 494,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 494,
                                                                    "end_token": 525,
                                                                    "label": "(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 528,
                                                            "end_token": 555,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 528,
                                                                    "end_token": 529,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 529,
                                                                    "end_token": 555,
                                                                    "label": "(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 558,
                                                            "end_token": 585,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 558,
                                                                    "end_token": 559,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 559,
                                                                    "end_token": 585,
                                                                    "label": "(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 588,
                                                            "end_token": 615,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 588,
                                                                    "end_token": 589,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 589,
                                                                    "end_token": 615,
                                                                    "label": "(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 618,
                                                            "end_token": 645,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 618,
                                                                    "end_token": 619,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 619,
                                                                    "end_token": 645,
                                                                    "label": "(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 648,
                                                            "end_token": 675,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 648,
                                                                    "end_token": 649,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 649,
                                                                    "end_token": 675,
                                                                    "label": "(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 678,
                                                            "end_token": 705,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 678,
                                                                    "end_token": 679,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 679,
                                                                    "end_token": 705,
                                                                    "label": "(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 708,
                                                            "end_token": 742,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 708,
                                                                    "end_token": 709,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 709,
                                                                    "end_token": 742,
                                                                    "label": "(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        )"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 745,
                                                            "end_token": 779,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 745,
                                                                    "end_token": 746,
                                                                    "label": "Link("
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "start_token": 746,
                                                                    "end_token": 779,
                                                                    "label": "(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        )"
                                                                }
                                                            ],
                                                            "label": "Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        )"
                                                        }
                                                    ],
                                                    "label": "[\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]"
                                                }
                                            ],
                                            "label": "links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]"
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 785,
                                            "end_token": 803,
                                            "label": "# ======= Graph ========= #"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 805,
                                            "end_token": 829,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 806,
                                                    "end_token": 829,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 806,
                                                            "end_token": 807,
                                                            "label": "Graph("
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 807,
                                                            "end_token": 829,
                                                            "label": "(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )"
                                                        }
                                                    ],
                                                    "label": "Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )"
                                                }
                                            ],
                                            "label": "return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )"
                                        }
                                    ],
                                    "label": ":\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )"
                                }
                            ],
                            "label": "def create_test_graph() -> Graph:\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )"
                        }
                    ],
                    "label": "def create_test_graph() -> Graph:\n    \"\"\"\n            StoreValueBlock (input)\n                 ||\n                 v\n        FillTextTemplateBlock (input query)\n                 ||\n                 v\n         SendWebRequestBlock (browse)\n                 ||\n                 v\n     ------> StoreValueBlock===============\n    |           |  |                    ||\n    |            --                     ||\n    |                                   ||\n    |                                   ||\n    |                                    v\n    |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query)\n    |            ||                      ^\n    |            v                      ||\n    |       ExtractTextInformationBlock             ||\n    |            ||                     ||\n    |            v                      ||\n    ------ BlockInstallationBlock  ======\n    \"\"\"\n    # ======= Nodes ========= #\n    input_data = Node(block_id=StoreValueBlock().id)\n    input_query_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\"data\": None},\n    )\n    input_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"Show me how to make a python code for this query: `{query}`\",\n        },\n    )\n    search_http_request = Node(\n        block_id=SendWebRequestBlock().id,\n        input_default={\n            \"url\": \"https://osit-v2.bentlybro.com/search\",\n        },\n    )\n    search_result_constant = Node(\n        block_id=StoreValueBlock().id,\n        input_default={\n            \"data\": None,\n        },\n    )\n    prompt_text_formatter = Node(\n        block_id=FillTextTemplateBlock().id,\n        input_default={\n            \"format\": \"\"\"\nWrite me a full Block implementation for this query: `{query}`\n\nHere is the information I get to write a Python code for that:\n{search_result}\n\nHere is your previous attempt:\n{previous_attempt}\n\"\"\",\n            \"values_#_previous_attempt\": \"No previous attempt found.\",\n        },\n    )\n    code_gen_llm_call = Node(\n        block_id=AITextGeneratorBlock().id,\n        input_default={\n            \"sys_prompt\": f\"\"\"\nYou are a software engineer and you are asked to write the full class implementation.\nThe class that you are implementing is extending a class called `Block`.\nThis class will be used as a node in a graph of other blocks to build a complex system.\nThis class has a method called `run` that takes an input and returns an output.\nIt also has an `id` attribute that is a UUID, input_schema, and output_schema.\nFor UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`,\ndon't use any automatic UUID generation, because it needs to be consistent.\nTo validate the correctness of your implementation, you can also define a test.\nThere is `test_input` and `test_output` you can use to validate your implementation.\nThere is also `test_mock` to mock a helper function on your block class for testing.\n\nFeel free to start your answer by explaining your plan what's required how to test, etc.\nBut make sure to produce the fully working implementation at the end,\nand it should be enclosed within this block format:\n```python\n<Your implementation here>\n```\n\nHere are a couple of sample of the Block class implementation:\n\n{\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])}\n\"\"\",\n        },\n    )\n    code_text_parser = Node(\n        block_id=ExtractTextInformationBlock().id,\n        input_default={\n            \"pattern\": \"```python\\n(.+?)\\n```\",\n            \"group\": 1,\n        },\n    )\n    block_installation = Node(\n        block_id=BlockInstallationBlock().id,\n    )\n    nodes = [\n        input_data,\n        input_query_constant,\n        input_text_formatter,\n        search_http_request,\n        search_result_constant,\n        prompt_text_formatter,\n        code_gen_llm_call,\n        code_text_parser,\n        block_installation,\n    ]\n\n    # ======= Links ========= #\n    links = [\n        Link(\n            source_id=input_data.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        Link(\n            source_id=input_data.id,\n            sink_id=input_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=input_query_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=input_text_formatter.id,\n            sink_id=search_http_request.id,\n            source_name=\"output\",\n            sink_name=\"body_#_query\",\n        ),\n        Link(\n            source_id=search_http_request.id,\n            sink_id=search_result_constant.id,\n            source_name=\"response_#_reply\",\n            sink_name=\"input\",\n        ),\n        Link(  # Loopback for constant block\n            source_id=search_result_constant.id,\n            sink_id=search_result_constant.id,\n            source_name=\"output\",\n            sink_name=\"data\",\n        ),\n        Link(\n            source_id=search_result_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_search_result\",\n        ),\n        Link(\n            source_id=input_query_constant.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"output\",\n            sink_name=\"values_#_query\",\n        ),\n        Link(\n            source_id=prompt_text_formatter.id,\n            sink_id=code_gen_llm_call.id,\n            source_name=\"output\",\n            sink_name=\"prompt\",\n        ),\n        Link(\n            source_id=code_gen_llm_call.id,\n            sink_id=code_text_parser.id,\n            source_name=\"response\",\n            sink_name=\"text\",\n        ),\n        Link(\n            source_id=code_text_parser.id,\n            sink_id=block_installation.id,\n            source_name=\"positive\",\n            sink_name=\"code\",\n        ),\n        Link(\n            source_id=block_installation.id,\n            sink_id=prompt_text_formatter.id,\n            source_name=\"error\",\n            sink_name=\"values_#_previous_attempt\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=search_result_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n        Link(  # Re-trigger search result.\n            source_id=block_installation.id,\n            sink_id=input_query_constant.id,\n            source_name=\"error\",\n            sink_name=\"input\",\n        ),\n    ]\n\n    # ======= Graph ========= #\n    return Graph(\n        name=\"BlockAutoGen\",\n        description=\"Block auto generation agent\",\n        nodes=nodes,\n        links=links,\n    )"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "block_autogen_agent",
            "start_line": 250,
            "end_line": 265,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 112,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 112,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 2,
                                    "end_token": 2,
                                    "children": [],
                                    "label": "block_autogen_agent"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 3,
                                    "end_token": 4,
                                    "children": [],
                                    "label": "()"
                                },
                                {
                                    "type": "block",
                                    "start_token": 6,
                                    "end_token": 112,
                                    "children": [
                                        {
                                            "type": "with_statement",
                                            "start_token": 7,
                                            "end_token": 14,
                                            "children": [
                                                {
                                                    "type": "with_item",
                                                    "start_token": 8,
                                                    "end_token": 12,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 9,
                                                            "end_token": 11,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 9,
                                                                    "end_token": 9,
                                                                    "children": [],
                                                                    "label": "SpinTestServer"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 10,
                                                                    "end_token": 11,
                                                                    "children": [],
                                                                    "label": "()"
                                                                }
                                                            ],
                                                            "label": "SpinTestServer()"
                                                        },
                                                        {
                                                            "type": "as_pattern",
                                                            "start_token": 12,
                                                            "end_token": 13,
                                                            "children": [
                                                                {
                                                                    "type": "as_pattern_target",
                                                                    "start_token": 13,
                                                                    "end_token": 13,
                                                                    "children": [],
                                                                    "label": "server"
                                                                }
                                                            ],
                                                            "label": "as server"
                                                        }
                                                    ],
                                                    "label": "with SpinTestServer() as"
                                                }
                                            ],
                                            "label": "async with SpinTestServer() as server:"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 16,
                                            "end_token": 21,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 16,
                                                    "end_token": 16,
                                                    "children": [],
                                                    "label": "test_user"
                                                },
                                                {
                                                    "type": "await",
                                                    "start_token": 18,
                                                    "end_token": 21,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 19,
                                                            "end_token": 21,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 19,
                                                                    "end_token": 19,
                                                                    "children": [],
                                                                    "label": "create_test_user"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 20,
                                                                    "end_token": 21,
                                                                    "children": [],
                                                                    "label": "()"
                                                                }
                                                            ],
                                                            "label": "create_test_user()"
                                                        }
                                                    ],
                                                    "label": "await create_test_user()"
                                                }
                                            ],
                                            "label": "test_user = await create_test_user()"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 23,
                                            "end_token": 37,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 23,
                                                    "end_token": 23,
                                                    "children": [],
                                                    "label": "test_graph"
                                                },
                                                {
                                                    "type": "await",
                                                    "start_token": 25,
                                                    "end_token": 37,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 26,
                                                            "end_token": 37,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 26,
                                                                    "end_token": 26,
                                                                    "children": [],
                                                                    "label": "create_graph"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 27,
                                                                    "end_token": 37,
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 28,
                                                                            "end_token": 30,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 28,
                                                                                    "end_token": 28,
                                                                                    "children": [],
                                                                                    "label": "create_test_graph"
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 29,
                                                                                    "end_token": 30,
                                                                                    "children": [],
                                                                                    "label": "()"
                                                                                }
                                                                            ],
                                                                            "label": "create_test_graph()"
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 32,
                                                                            "end_token": 36,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 32,
                                                                                    "end_token": 32,
                                                                                    "children": [],
                                                                                    "label": "user_id"
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 34,
                                                                                    "end_token": 36,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 34,
                                                                                            "end_token": 34,
                                                                                            "children": [],
                                                                                            "label": "test_user"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 36,
                                                                                            "end_token": 36,
                                                                                            "children": [],
                                                                                            "label": "id"
                                                                                        }
                                                                                    ],
                                                                                    "label": "test_user.id"
                                                                                }
                                                                            ],
                                                                            "label": "user_id=test_user.id"
                                                                        }
                                                                    ],
                                                                    "label": "(create_test_graph(), user_id=test_user.id)"
                                                                }
                                                            ],
                                                            "label": "create_graph(create_test_graph(), user_id=test_user.id)"
                                                        }
                                                    ],
                                                    "label": "await create_graph(create_test_graph(), user_id=test_user.id)"
                                                }
                                            ],
                                            "label": "test_graph = await create_graph(create_test_graph(), user_id=test_user.id)"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 39,
                                            "end_token": 45,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 39,
                                                    "end_token": 39,
                                                    "children": [],
                                                    "label": "input_data"
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 41,
                                                    "end_token": 45,
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 42,
                                                            "end_token": 44,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 42,
                                                                    "end_token": 42,
                                                                    "children": [],
                                                                    "label": "\"input\""
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 44,
                                                                    "end_token": 44,
                                                                    "children": [],
                                                                    "label": "\"Write me a block that writes a string into a file.\""
                                                                }
                                                            ],
                                                            "label": "\"input\": \"Write me a block that writes a string into a file.\""
                                                        }
                                                    ],
                                                    "label": "{\"input\": \"Write me a block that writes a string into a file.\"}"
                                                }
                                            ],
                                            "label": "input_data = {\"input\": \"Write me a block that writes a string into a file.\"}"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 47,
                                            "end_token": 67,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 47,
                                                    "end_token": 47,
                                                    "children": [],
                                                    "label": "response"
                                                },
                                                {
                                                    "type": "await",
                                                    "start_token": 49,
                                                    "end_token": 67,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 50,
                                                            "end_token": 67,
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 50,
                                                                    "end_token": 54,
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 50,
                                                                            "end_token": 52,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 50,
                                                                                    "end_token": 50,
                                                                                    "children": [],
                                                                                    "label": "server"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 52,
                                                                                    "end_token": 52,
                                                                                    "children": [],
                                                                                    "label": "agent_server"
                                                                                }
                                                                            ],
                                                                            "label": "server.agent_server"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 54,
                                                                            "end_token": 54,
                                                                            "children": [],
                                                                            "label": "test_execute_graph"
                                                                        }
                                                                    ],
                                                                    "label": "server.agent_server.test_execute_graph"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 55,
                                                                    "end_token": 67,
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 57,
                                                                            "end_token": 59,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 57,
                                                                                    "end_token": 57,
                                                                                    "children": [],
                                                                                    "label": "test_graph"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 59,
                                                                                    "end_token": 59,
                                                                                    "children": [],
                                                                                    "label": "id"
                                                                                }
                                                                            ],
                                                                            "label": "test_graph.id"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 61,
                                                                            "end_token": 61,
                                                                            "children": [],
                                                                            "label": "input_data"
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 63,
                                                                            "end_token": 65,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 63,
                                                                                    "end_token": 63,
                                                                                    "children": [],
                                                                                    "label": "test_user"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 65,
                                                                                    "end_token": 65,
                                                                                    "children": [],
                                                                                    "label": "id"
                                                                                }
                                                                            ],
                                                                            "label": "test_user.id"
                                                                        }
                                                                    ],
                                                                    "label": "(\n            test_graph.id, input_data, test_user.id\n        )"
                                                                }
                                                            ],
                                                            "label": "server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )"
                                                        }
                                                    ],
                                                    "label": "await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )"
                                                }
                                            ],
                                            "label": "response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 69,
                                            "end_token": 72,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 69,
                                                    "end_token": 72,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 69,
                                                            "end_token": 69,
                                                            "children": [],
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 70,
                                                            "end_token": 72,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 71,
                                                                    "end_token": 71,
                                                                    "children": [],
                                                                    "label": "response"
                                                                }
                                                            ],
                                                            "label": "(response)"
                                                        }
                                                    ],
                                                    "label": "print(response)"
                                                }
                                            ],
                                            "label": "print(response)"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 74,
                                            "end_token": 107,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 74,
                                                    "end_token": 74,
                                                    "children": [],
                                                    "label": "result"
                                                },
                                                {
                                                    "type": "await",
                                                    "start_token": 76,
                                                    "end_token": 107,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 77,
                                                            "end_token": 107,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 77,
                                                                    "end_token": 77,
                                                                    "children": [],
                                                                    "label": "wait_execution"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 78,
                                                                    "end_token": 107,
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 80,
                                                                            "end_token": 84,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 80,
                                                                                    "end_token": 80,
                                                                                    "children": [],
                                                                                    "label": "graph_id"
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 82,
                                                                                    "end_token": 84,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 82,
                                                                                            "end_token": 82,
                                                                                            "children": [],
                                                                                            "label": "test_graph"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 84,
                                                                                            "end_token": 84,
                                                                                            "children": [],
                                                                                            "label": "id"
                                                                                        }
                                                                                    ],
                                                                                    "label": "test_graph.id"
                                                                                }
                                                                            ],
                                                                            "label": "graph_id=test_graph.id"
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 87,
                                                                            "end_token": 92,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 87,
                                                                                    "end_token": 87,
                                                                                    "children": [],
                                                                                    "label": "graph_exec_id"
                                                                                },
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "start_token": 89,
                                                                                    "end_token": 92,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 89,
                                                                                            "end_token": 89,
                                                                                            "children": [],
                                                                                            "label": "response"
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "start_token": 91,
                                                                                            "end_token": 91,
                                                                                            "children": [],
                                                                                            "label": "\"id\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "response[\"id\"]"
                                                                                }
                                                                            ],
                                                                            "label": "graph_exec_id=response[\"id\"]"
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 95,
                                                                            "end_token": 97,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 95,
                                                                                    "end_token": 95,
                                                                                    "children": [],
                                                                                    "label": "timeout"
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 97,
                                                                                    "end_token": 97,
                                                                                    "children": [],
                                                                                    "label": "1200"
                                                                                }
                                                                            ],
                                                                            "label": "timeout=1200"
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 100,
                                                                            "end_token": 104,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 100,
                                                                                    "end_token": 100,
                                                                                    "children": [],
                                                                                    "label": "user_id"
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 102,
                                                                                    "end_token": 104,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 102,
                                                                                            "end_token": 102,
                                                                                            "children": [],
                                                                                            "label": "test_user"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 104,
                                                                                            "end_token": 104,
                                                                                            "children": [],
                                                                                            "label": "id"
                                                                                        }
                                                                                    ],
                                                                                    "label": "test_user.id"
                                                                                }
                                                                            ],
                                                                            "label": "user_id=test_user.id"
                                                                        }
                                                                    ],
                                                                    "label": "(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )"
                                                                }
                                                            ],
                                                            "label": "wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )"
                                                        }
                                                    ],
                                                    "label": "await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )"
                                                }
                                            ],
                                            "label": "result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 109,
                                            "end_token": 112,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 109,
                                                    "end_token": 112,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 109,
                                                            "end_token": 109,
                                                            "children": [],
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 110,
                                                            "end_token": 112,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 111,
                                                                    "end_token": 111,
                                                                    "children": [],
                                                                    "label": "result"
                                                                }
                                                            ],
                                                            "label": "(result)"
                                                        }
                                                    ],
                                                    "label": "print(result)"
                                                }
                                            ],
                                            "label": "print(result)"
                                        }
                                    ],
                                    "label": "\n    async with SpinTestServer() as server:\n        test_user = await create_test_user()\n        test_graph = await create_graph(create_test_graph(), user_id=test_user.id)\n        input_data = {\"input\": \"Write me a block that writes a string into a file.\"}\n        response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )\n        print(response)\n        result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )\n        print(result)"
                                }
                            ],
                            "label": "async def block_autogen_agent():\n    async with SpinTestServer() as server:\n        test_user = await create_test_user()\n        test_graph = await create_graph(create_test_graph(), user_id=test_user.id)\n        input_data = {\"input\": \"Write me a block that writes a string into a file.\"}\n        response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )\n        print(response)\n        result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )\n        print(result)"
                        }
                    ],
                    "label": "async def block_autogen_agent():\n    async with SpinTestServer() as server:\n        test_user = await create_test_user()\n        test_graph = await create_graph(create_test_graph(), user_id=test_user.id)\n        input_data = {\"input\": \"Write me a block that writes a string into a file.\"}\n        response = await server.agent_server.test_execute_graph(\n            test_graph.id, input_data, test_user.id\n        )\n        print(response)\n        result = await wait_execution(\n            graph_id=test_graph.id,\n            graph_exec_id=response[\"id\"],\n            timeout=1200,\n            user_id=test_user.id,\n        )\n        print(result)"
                }
            ]
        }
    ],
    "label": "from pathlib import Path\n\nfrom prisma.models import User\n\nfrom backend.blocks.basic import StoreValueBlock\nfrom backend.blocks.block import BlockInstallationBlock\nfrom backend.blocks.http import SendWebRequestBlock\nfrom backend.blocks.llm import AITextGeneratorBlock\nfrom backend.blocks.text import ExtractTextInformationBlock, FillTextTemplateBlock\nfrom backend.data.graph import Graph, Link, Node, create_graph\nfrom backend.data.user import get_or_create_user\nfrom backend.util.test import SpinTestServer, wait_execution\n\nsample_block_modules = {\n    \"llm\": \"Block that calls the AI model to generate text.\",\n    \"basic\": \"Block that does basic operations.\",\n    \"text\": \"Blocks that do text operations.\",\n    \"reddit\": \"Blocks that interacts with Reddit.\",\n}\nsample_block_codes = {}\nfor module, description in sample_block_modules.items():\n    current_dir = Path(__file__).parent\n    file_path = current_dir.parent / \"blocks\" / f\"{module}.py\"\n    with open(file_path, \"r\") as f:\n        code = \"\\n\".join([\"```python\", f.read(), \"```\"])\n        sample_block_codes[module] = f\"[Example: {description}]\\n{code}\"\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    import asyncio\n\n    asyncio.run(block_autogen_agent())\n"
}