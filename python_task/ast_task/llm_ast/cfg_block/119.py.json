{
    "type": "module",
    "start_token": 0,
    "end_token": 33,
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [],
                    "label": "from"
                },
                {
                    "type": "dotted_name",
                    "start_token": 1,
                    "end_token": 1,
                    "children": [],
                    "label": "timeit"
                },
                {
                    "type": "import_prefix",
                    "start_token": 2,
                    "end_token": 2,
                    "children": [],
                    "label": "import"
                },
                {
                    "type": "identifier",
                    "start_token": 3,
                    "end_token": 3,
                    "children": [],
                    "label": "timeit"
                }
            ],
            "label": "from timeit import timeit"
        },
        {
            "type": "if_statement",
            "start_token": 13,
            "end_token": 32,
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 13,
                    "end_token": 18,
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 14,
                            "end_token": 17,
                            "children": [],
                            "label": "__name__ == \"__main__\""
                        }
                    ],
                    "label": "if __name__ == \"__main__\":"
                },
                {
                    "type": "block",
                    "start_token": 19,
                    "end_token": 32,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 20,
                            "end_token": 21,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 21,
                                    "end_token": 21,
                                    "children": [],
                                    "label": "doctest"
                                }
                            ],
                            "label": "import doctest"
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 24,
                            "end_token": 28,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 24,
                                    "end_token": 28,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 24,
                                            "end_token": 26,
                                            "children": [],
                                            "label": "doctest.testmod"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 27,
                                            "end_token": 28,
                                            "children": [],
                                            "label": "()"
                                        }
                                    ],
                                    "label": "doctest.testmod()"
                                }
                            ],
                            "label": "doctest.testmod()"
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 30,
                            "end_token": 32,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 30,
                                    "end_token": 32,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 30,
                                            "end_token": 30,
                                            "children": [],
                                            "label": "benchmark"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 31,
                                            "end_token": 32,
                                            "children": [],
                                            "label": "()"
                                        }
                                    ],
                                    "label": "benchmark()"
                                }
                            ],
                            "label": "benchmark()"
                        }
                    ],
                    "label": "\n    import doctest\n\n    doctest.testmod()\n    benchmark()"
                }
            ],
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    benchmark()"
        },
        {
            "type": "function_placeholder",
            "name": "get_set_bits_count_using_brian_kernighans_algorithm",
            "start_line": 4,
            "end_line": 30,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 49,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 49,
                            "children": [
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [],
                                            "label": "number: int"
                                        }
                                    ],
                                    "label": "(number: int)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 8,
                                    "end_token": 9,
                                    "children": [],
                                    "label": "> int"
                                },
                                {
                                    "type": "string",
                                    "start_token": 12,
                                    "end_token": 14,
                                    "children": [],
                                    "label": "\"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 15,
                                    "end_token": 49,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 16,
                                            "end_token": 26,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 17,
                                                    "end_token": 19,
                                                    "children": [],
                                                    "label": "number < 0"
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 22,
                                                    "end_token": 26,
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "start_token": 24,
                                                            "end_token": 25,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 24,
                                                                    "end_token": 25,
                                                                    "children": [],
                                                                    "label": "(\"the value of input must not be negative\""
                                                                }
                                                            ],
                                                            "label": "(\"the value of input must not be negative\""
                                                        }
                                                    ],
                                                    "label": "raise ValueError(\"the value of input must not be negative\")"
                                                }
                                            ],
                                            "label": "if number < 0:\n        raise ValueError(\"the value of input must not be negative\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 28,
                                            "end_token": 30,
                                            "children": [],
                                            "label": "result = 0"
                                        },
                                        {
                                            "type": "while_statement",
                                            "start_token": 32,
                                            "end_token": 46,
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 33,
                                                    "end_token": 34,
                                                    "children": [],
                                                    "label": "number:"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 35,
                                                    "end_token": 46,
                                                    "children": [
                                                        {
                                                            "type": "augmented_assignment",
                                                            "start_token": 36,
                                                            "end_token": 41,
                                                            "children": [],
                                                            "label": "number &= number - 1"
                                                        },
                                                        {
                                                            "type": "augmented_assignment",
                                                            "start_token": 43,
                                                            "end_token": 46,
                                                            "children": [],
                                                            "label": "result += 1"
                                                        }
                                                    ],
                                                    "label": "\n        number &= number - 1\n        result += 1"
                                                }
                                            ],
                                            "label": "while number:\n        number &= number - 1\n        result += 1"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 48,
                                            "end_token": 49,
                                            "children": [],
                                            "label": "return result"
                                        }
                                    ],
                                    "label": "\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        number &= number - 1\n        result += 1\n    return result"
                                }
                            ],
                            "label": "def get_set_bits_count_using_brian_kernighans_algorithm(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        number &= number - 1\n        result += 1\n    return result"
                        }
                    ],
                    "label": "def get_set_bits_count_using_brian_kernighans_algorithm(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(25)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(37)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(21)\n    3\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(58)\n    4\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(0)\n    0\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(256)\n    1\n    >>> get_set_bits_count_using_brian_kernighans_algorithm(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        number &= number - 1\n        result += 1\n    return result"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "get_set_bits_count_using_modulo_operator",
            "start_line": 33,
            "end_line": 60,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 57,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 57,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "label": "def"
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "get_set_bits_count_using_modulo_operator"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        }
                                    ],
                                    "label": "(number: int)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 8,
                                    "end_token": 9,
                                    "label": "> int"
                                },
                                {
                                    "type": "string",
                                    "start_token": 12,
                                    "end_token": 14,
                                    "children": [
                                        {
                                            "type": "string_content",
                                            "start_token": 13,
                                            "end_token": 13,
                                            "label": "\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \""
                                        }
                                    ],
                                    "label": "\"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 15,
                                    "end_token": 57,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 16,
                                            "end_token": 26,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 17,
                                                    "end_token": 19,
                                                    "label": "number < 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 21,
                                                    "end_token": 26,
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 22,
                                                            "end_token": 26,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 23,
                                                                    "end_token": 23,
                                                                    "label": "ValueError"
                                                                },
                                                                {
                                                                    "type": "parenthesized_expression",
                                                                    "start_token": 24,
                                                                    "end_token": 26,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 25,
                                                                            "end_token": 25,
                                                                            "label": "\"the value of input must not be negative\""
                                                                        }
                                                                    ],
                                                                    "label": "(\"the value of input must not be negative\")"
                                                                }
                                                            ],
                                                            "label": "raise ValueError(\"the value of input must not be negative\")"
                                                        }
                                                    ],
                                                    "label": "\n        raise ValueError(\"the value of input must not be negative\")"
                                                }
                                            ],
                                            "label": "if number < 0:\n        raise ValueError(\"the value of input must not be negative\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 28,
                                            "end_token": 30,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 28,
                                                    "end_token": 28,
                                                    "label": "result"
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 30,
                                                    "end_token": 30,
                                                    "label": "0"
                                                }
                                            ],
                                            "label": "result = 0"
                                        },
                                        {
                                            "type": "while_statement",
                                            "start_token": 32,
                                            "end_token": 55,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 33,
                                                    "end_token": 33,
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 34,
                                                    "end_token": 55,
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 36,
                                                            "end_token": 48,
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "start_token": 37,
                                                                    "end_token": 42,
                                                                    "label": "number % 2 == 1"
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 44,
                                                                    "end_token": 48,
                                                                    "children": [
                                                                        {
                                                                            "type": "augmented_assignment",
                                                                            "start_token": 45,
                                                                            "end_token": 48,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 45,
                                                                                    "end_token": 45,
                                                                                    "label": "result"
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 48,
                                                                                    "end_token": 48,
                                                                                    "label": "1"
                                                                                }
                                                                            ],
                                                                            "label": "result += 1"
                                                                        }
                                                                    ],
                                                                    "label": "\n            result += 1"
                                                                }
                                                            ],
                                                            "label": "if number % 2 == 1:\n            result += 1"
                                                        },
                                                        {
                                                            "type": "augmented_assignment",
                                                            "start_token": 50,
                                                            "end_token": 54,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 50,
                                                                    "end_token": 50,
                                                                    "label": "number"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 54,
                                                                    "end_token": 54,
                                                                    "label": "1"
                                                                }
                                                            ],
                                                            "label": "number >>= 1"
                                                        }
                                                    ],
                                                    "label": ":\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n"
                                                }
                                            ],
                                            "label": "while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 56,
                                            "end_token": 57,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 57,
                                                    "end_token": 57,
                                                    "label": "result"
                                                }
                                            ],
                                            "label": "return result"
                                        }
                                    ],
                                    "label": "\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n    return result"
                                }
                            ],
                            "label": "def get_set_bits_count_using_modulo_operator(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n    return result"
                        }
                    ],
                    "label": "def get_set_bits_count_using_modulo_operator(number: int) -> int:\n    \"\"\"\n    Count the number of set bits in a 32 bit integer\n    >>> get_set_bits_count_using_modulo_operator(25)\n    3\n    >>> get_set_bits_count_using_modulo_operator(37)\n    3\n    >>> get_set_bits_count_using_modulo_operator(21)\n    3\n    >>> get_set_bits_count_using_modulo_operator(58)\n    4\n    >>> get_set_bits_count_using_modulo_operator(0)\n    0\n    >>> get_set_bits_count_using_modulo_operator(256)\n    1\n    >>> get_set_bits_count_using_modulo_operator(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: the value of input must not be negative\n    \"\"\"\n    if number < 0:\n        raise ValueError(\"the value of input must not be negative\")\n    result = 0\n    while number:\n        if number % 2 == 1:\n            result += 1\n        number >>= 1\n    return result"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "benchmark",
            "start_line": 63,
            "end_line": 86,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 36,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 36,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "benchmark"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 3,
                                    "children": [],
                                    "label": "()"
                                },
                                {
                                    "type": "none",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "label": "None"
                                },
                                {
                                    "type": "block",
                                    "start_token": 8,
                                    "end_token": 36,
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 9,
                                            "end_token": 11,
                                            "children": [
                                                {
                                                    "type": "string_content",
                                                    "start_token": 10,
                                                    "end_token": 10,
                                                    "label": "\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \""
                                                }
                                            ],
                                            "label": "\"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\""
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 15,
                                            "end_token": 33,
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": 15,
                                                    "end_token": 26,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 16,
                                                            "end_token": 16,
                                                            "label": "number"
                                                        },
                                                        {
                                                            "type": "list",
                                                            "start_token": 18,
                                                            "end_token": 26,
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 19,
                                                                    "end_token": 19,
                                                                    "label": "25"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 21,
                                                                    "end_token": 21,
                                                                    "label": "37"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 23,
                                                                    "end_token": 23,
                                                                    "label": "58"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 25,
                                                                    "end_token": 25,
                                                                    "label": "0"
                                                                }
                                                            ],
                                                            "label": "(25, 37, 58, 0)"
                                                        }
                                                    ],
                                                    "label": "for number in (25, 37, 58, 0)"
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "start_token": 29,
                                                    "end_token": 32,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 29,
                                                            "end_token": 32,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 29,
                                                                    "end_token": 29,
                                                                    "label": "do_benchmark"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 30,
                                                                    "end_token": 32,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 31,
                                                                            "end_token": 31,
                                                                            "label": "number"
                                                                        }
                                                                    ],
                                                                    "label": "(number)"
                                                                }
                                                            ],
                                                            "label": "do_benchmark(number)"
                                                        }
                                                    ],
                                                    "label": "do_benchmark(number)"
                                                }
                                            ],
                                            "label": "for number in (25, 37, 58, 0):\n        do_benchmark(number)\n"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 34,
                                            "end_token": 36,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 34,
                                                    "end_token": 36,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 34,
                                                            "end_token": 34,
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 35,
                                                            "end_token": 36,
                                                            "children": [],
                                                            "label": "()"
                                                        }
                                                    ],
                                                    "label": "print()"
                                                }
                                            ],
                                            "label": "print()"
                                        }
                                    ],
                                    "label": "\n    \"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"\n\n\n    for number in (25, 37, 58, 0):\n        do_benchmark(number)\n        print()"
                                }
                            ],
                            "label": "def benchmark() -> None:\n    \"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"\n\n\n    for number in (25, 37, 58, 0):\n        do_benchmark(number)\n        print()"
                        },
                        {
                            "type": "function_placeholder",
                            "name": "do_benchmark",
                            "start_line": 69,
                            "end_line": 82,
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 0,
                                    "end_token": 74,
                                    "children": [
                                        {
                                            "type": "function_definition",
                                            "start_token": 0,
                                            "end_token": 74,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 1,
                                                    "end_token": 1,
                                                    "children": [],
                                                    "label": "do_benchmark"
                                                },
                                                {
                                                    "type": "parameters",
                                                    "start_token": 2,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "typed_parameter",
                                                            "start_token": 3,
                                                            "end_token": 5,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 3,
                                                                    "end_token": 3,
                                                                    "children": [],
                                                                    "label": "number"
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 5,
                                                                    "end_token": 5,
                                                                    "children": [],
                                                                    "label": "int"
                                                                }
                                                            ],
                                                            "label": "number: int"
                                                        }
                                                    ],
                                                    "label": "(number: int)"
                                                },
                                                {
                                                    "type": "arrow_type",
                                                    "start_token": 7,
                                                    "end_token": 9,
                                                    "children": [
                                                        {
                                                            "type": "none",
                                                            "start_token": 9,
                                                            "end_token": 9,
                                                            "children": [],
                                                            "label": "None"
                                                        }
                                                    ],
                                                    "label": "-> None"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 10,
                                                    "end_token": 74,
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 12,
                                                            "end_token": 14,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 12,
                                                                    "end_token": 12,
                                                                    "children": [],
                                                                    "label": "setup"
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 14,
                                                                    "end_token": 14,
                                                                    "children": [],
                                                                    "label": "\"import __main__ as z\""
                                                                }
                                                            ],
                                                            "label": "setup = \"import __main__ as z\""
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 16,
                                                            "end_token": 20,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 16,
                                                                    "end_token": 20,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 16,
                                                                            "end_token": 16,
                                                                            "children": [],
                                                                            "label": "print"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 17,
                                                                            "end_token": 20,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 18,
                                                                                    "end_token": 19,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 18,
                                                                                            "end_token": 18,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 19,
                                                                                            "end_token": 19,
                                                                                            "children": [],
                                                                                            "label": "\"Benchmark when {number = }:\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 19,
                                                                                            "end_token": 19,
                                                                                            "children": [],
                                                                                            "label": "\"Benchmark when {number = }:\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"Benchmark when {number = }:\""
                                                                                }
                                                                            ],
                                                                            "label": "(f\"Benchmark when {number = }:\")"
                                                                        }
                                                                    ],
                                                                    "label": "print(f\"Benchmark when {number = }:\")"
                                                                }
                                                            ],
                                                            "label": "print(f\"Benchmark when {number = }:\")"
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 22,
                                                            "end_token": 26,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 22,
                                                                    "end_token": 26,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 22,
                                                                            "end_token": 22,
                                                                            "children": [],
                                                                            "label": "print"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 23,
                                                                            "end_token": 26,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 24,
                                                                                    "end_token": 25,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 24,
                                                                                            "end_token": 24,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 25,
                                                                                            "end_token": 25,
                                                                                            "children": [],
                                                                                            "label": "\"{get_set_bits_count_using_modulo_operator(number) = }\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 25,
                                                                                            "end_token": 25,
                                                                                            "children": [],
                                                                                            "label": "\"{get_set_bits_count_using_modulo_operator(number) = }\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"{get_set_bits_count_using_modulo_operator(number) = }\""
                                                                                }
                                                                            ],
                                                                            "label": "(f\"{get_set_bits_count_using_modulo_operator(number) = }\")"
                                                                        }
                                                                    ],
                                                                    "label": "print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")"
                                                                }
                                                            ],
                                                            "label": "print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")"
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 28,
                                                            "end_token": 40,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 28,
                                                                    "end_token": 28,
                                                                    "children": [],
                                                                    "label": "timing"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 30,
                                                                    "end_token": 40,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 30,
                                                                            "end_token": 30,
                                                                            "children": [],
                                                                            "label": "timeit"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 31,
                                                                            "end_token": 39,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 33,
                                                                                    "end_token": 34,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 33,
                                                                                            "end_token": 33,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 34,
                                                                                            "end_token": 34,
                                                                                            "children": [],
                                                                                            "label": "\"z.get_set_bits_count_using_modulo_operator({number})\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 34,
                                                                                            "end_token": 34,
                                                                                            "children": [],
                                                                                            "label": "\"z.get_set_bits_count_using_modulo_operator({number})\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"z.get_set_bits_count_using_modulo_operator({number})\""
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": 36,
                                                                                    "end_token": 38,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 36,
                                                                                            "end_token": 36,
                                                                                            "children": [],
                                                                                            "label": "setup"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 38,
                                                                                            "end_token": 38,
                                                                                            "children": [],
                                                                                            "label": "setup"
                                                                                        }
                                                                                    ],
                                                                                    "label": "setup=setup"
                                                                                }
                                                                            ],
                                                                            "label": "(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n"
                                                                        }
                                                                    ],
                                                                    "label": "timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )"
                                                                }
                                                            ],
                                                            "label": "timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )"
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 42,
                                                            "end_token": 46,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 42,
                                                                    "end_token": 46,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 42,
                                                                            "end_token": 42,
                                                                            "children": [],
                                                                            "label": "print"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 43,
                                                                            "end_token": 46,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 44,
                                                                                    "end_token": 45,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 44,
                                                                                            "end_token": 44,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 45,
                                                                                            "end_token": 45,
                                                                                            "children": [],
                                                                                            "label": "\"timeit() runs in {timing} seconds\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 45,
                                                                                            "end_token": 45,
                                                                                            "children": [],
                                                                                            "label": "\"timeit() runs in {timing} seconds\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"timeit() runs in {timing} seconds\""
                                                                                }
                                                                            ],
                                                                            "label": "(f\"timeit() runs in {timing} seconds\")"
                                                                        }
                                                                    ],
                                                                    "label": "print(f\"timeit() runs in {timing} seconds\")"
                                                                }
                                                            ],
                                                            "label": "print(f\"timeit() runs in {timing} seconds\")"
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 48,
                                                            "end_token": 52,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 48,
                                                                    "end_token": 52,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 48,
                                                                            "end_token": 48,
                                                                            "children": [],
                                                                            "label": "print"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 49,
                                                                            "end_token": 52,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 50,
                                                                                    "end_token": 51,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 50,
                                                                                            "end_token": 50,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 51,
                                                                                            "end_token": 51,
                                                                                            "children": [],
                                                                                            "label": "\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 51,
                                                                                            "end_token": 51,
                                                                                            "children": [],
                                                                                            "label": "\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\""
                                                                                }
                                                                            ],
                                                                            "label": "(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")"
                                                                        }
                                                                    ],
                                                                    "label": "print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")"
                                                                }
                                                            ],
                                                            "label": "print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")"
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 54,
                                                            "end_token": 68,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 54,
                                                                    "end_token": 54,
                                                                    "children": [],
                                                                    "label": "timing"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 56,
                                                                    "end_token": 68,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 56,
                                                                            "end_token": 56,
                                                                            "children": [],
                                                                            "label": "timeit"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 57,
                                                                            "end_token": 67,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 59,
                                                                                    "end_token": 60,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 59,
                                                                                            "end_token": 59,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 60,
                                                                                            "end_token": 60,
                                                                                            "children": [],
                                                                                            "label": "\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 60,
                                                                                            "end_token": 60,
                                                                                            "children": [],
                                                                                            "label": "\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\""
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "start_token": 63,
                                                                                    "end_token": 65,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 63,
                                                                                            "end_token": 63,
                                                                                            "children": [],
                                                                                            "label": "setup"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 65,
                                                                                            "end_token": 65,
                                                                                            "children": [],
                                                                                            "label": "setup"
                                                                                        }
                                                                                    ],
                                                                                    "label": "setup=setup"
                                                                                }
                                                                            ],
                                                                            "label": "(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n"
                                                                        }
                                                                    ],
                                                                    "label": "timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )"
                                                                }
                                                            ],
                                                            "label": "timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )"
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 70,
                                                            "end_token": 74,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 70,
                                                                    "end_token": 74,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 70,
                                                                            "end_token": 70,
                                                                            "children": [],
                                                                            "label": "print"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 71,
                                                                            "end_token": 74,
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "start_token": 72,
                                                                                    "end_token": 73,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "start_token": 72,
                                                                                            "end_token": 72,
                                                                                            "children": [],
                                                                                            "label": "f"
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 73,
                                                                                            "end_token": 73,
                                                                                            "children": [],
                                                                                            "label": "\"timeit() runs in {timing} seconds\""
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "start_token": 73,
                                                                                            "end_token": 73,
                                                                                            "children": [],
                                                                                            "label": "\"timeit() runs in {timing} seconds\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "f\"timeit() runs in {timing} seconds\""
                                                                                }
                                                                            ],
                                                                            "label": "(f\"timeit() runs in {timing} seconds\")"
                                                                        }
                                                                    ],
                                                                    "label": "print(f\"timeit() runs in {timing} seconds\")"
                                                                }
                                                            ],
                                                            "label": "print(f\"timeit() runs in {timing} seconds\")"
                                                        }
                                                    ],
                                                    "label": ":\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")"
                                                }
                                            ],
                                            "label": "def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")"
                                        }
                                    ],
                                    "label": "def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"\n        print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )\n        print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")\n        timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )\n        print(f\"timeit() runs in {timing} seconds\")"
                                }
                            ]
                        }
                    ],
                    "label": "def benchmark() -> None:\n    \"\"\"\n    Benchmark code for comparing 2 functions, with different length int values.\n    Brian Kernighan's algorithm is consistently faster than using modulo_operator.\n    \"\"\"\n\n\n    for number in (25, 37, 58, 0):\n        do_benchmark(number)\n        print()"
                }
            ]
        }
    ],
    "label": "from timeit import timeit\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    benchmark()\n"
}