{
    "type": "module",
    "start_token": 0,
    "end_token": 40,
    "children": [
        {
            "type": "string",
            "start_token": 1,
            "end_token": 1,
            "children": [],
            "label": "\"\nMinimax helps to achieve maximum score in a game by checking all possible moves\ndepth is current depth in game tree.\n\nnodeIndex is index of current node in scores[].\nif move is of maximizer return true else false\nleaves of game tree is stored in scores[]\nheight is maximum height of Game tree\n\""
        },
        {
            "type": "future_import_statement",
            "start_token": 5,
            "end_token": 8,
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 5,
                    "end_token": 5,
                    "children": [],
                    "label": "from"
                },
                {
                    "type": "dotted_name",
                    "start_token": 6,
                    "end_token": 6,
                    "children": [],
                    "label": "__future__"
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "children": [],
                    "label": "annotations"
                }
            ],
            "label": "from __future__ import annotations"
        },
        {
            "type": "import_statement",
            "start_token": 11,
            "end_token": 12,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 12,
                    "end_token": 12,
                    "children": [],
                    "label": "math"
                }
            ],
            "label": "import math"
        },
        {
            "type": "if_statement",
            "start_token": 20,
            "end_token": 39,
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 20,
                    "end_token": 25,
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 21,
                            "end_token": 24,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 21,
                                    "end_token": 21,
                                    "children": [],
                                    "label": "__name__"
                                },
                                {
                                    "type": "string",
                                    "start_token": 24,
                                    "end_token": 24,
                                    "children": [],
                                    "label": "\"__main__\""
                                }
                            ],
                            "label": "__name__ == \"__main__\""
                        }
                    ],
                    "label": "if __name__ == \"__main__\":"
                },
                {
                    "type": "block",
                    "start_token": 26,
                    "end_token": 39,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 27,
                            "end_token": 28,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 28,
                                    "end_token": 28,
                                    "children": [],
                                    "label": "doctest"
                                }
                            ],
                            "label": "import doctest"
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 31,
                            "end_token": 35,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 31,
                                    "end_token": 35,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 31,
                                            "end_token": 33,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 31,
                                                    "end_token": 31,
                                                    "children": [],
                                                    "label": "doctest"
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 33,
                                                    "end_token": 33,
                                                    "children": [],
                                                    "label": "testmod"
                                                }
                                            ],
                                            "label": "doctest.testmod"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 34,
                                            "end_token": 35,
                                            "children": [],
                                            "label": "()"
                                        }
                                    ],
                                    "label": "doctest.testmod()"
                                }
                            ],
                            "label": "doctest.testmod()"
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 37,
                            "end_token": 39,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 37,
                                    "end_token": 39,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 37,
                                            "end_token": 37,
                                            "children": [],
                                            "label": "main"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 38,
                                            "end_token": 39,
                                            "children": [],
                                            "label": "()"
                                        }
                                    ],
                                    "label": "main()"
                                }
                            ],
                            "label": "main()"
                        }
                    ],
                    "label": "\n    import doctest\n\n    doctest.testmod()\n    main()"
                }
            ],
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()"
        },
        {
            "type": "function_placeholder",
            "name": "minimax",
            "start_line": 16,
            "end_line": 78,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 239,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 239,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "minimax"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 4,
                                            "end_token": 6,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 4,
                                                    "end_token": 4,
                                                    "label": "depth"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "depth: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 8,
                                            "end_token": 10,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 8,
                                                    "end_token": 8,
                                                    "label": "node_index"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 10,
                                                    "end_token": 10,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "node_index: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 12,
                                            "end_token": 14,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 12,
                                                    "end_token": 12,
                                                    "label": "is_max"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 14,
                                                    "end_token": 14,
                                                    "label": "bool"
                                                }
                                            ],
                                            "label": "is_max: bool"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 16,
                                            "end_token": 21,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 16,
                                                    "end_token": 16,
                                                    "label": "scores"
                                                },
                                                {
                                                    "type": "generic_type",
                                                    "start_token": 18,
                                                    "end_token": 21,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "start_token": 18,
                                                            "end_token": 18,
                                                            "label": "list"
                                                        }
                                                    ],
                                                    "label": "list[int]"
                                                }
                                            ],
                                            "label": "scores: list[int]"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 23,
                                            "end_token": 25,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 23,
                                                    "end_token": 23,
                                                    "label": "height"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 25,
                                                    "end_token": 25,
                                                    "label": "float"
                                                }
                                            ],
                                            "label": "height: float"
                                        }
                                    ],
                                    "label": "(\n    depth: int, node_index: int, is_max: bool, scores: list[int], height: float\n)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 30,
                                    "end_token": 30,
                                    "label": "int"
                                },
                                {
                                    "type": "string",
                                    "start_token": 33,
                                    "end_token": 35,
                                    "children": [
                                        {
                                            "type": "string_content",
                                            "start_token": 34,
                                            "end_token": 34,
                                            "label": "\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \""
                                        }
                                    ],
                                    "label": "\"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 37,
                                    "end_token": 239,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 38,
                                            "end_token": 48,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 39,
                                                    "end_token": 41,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 39,
                                                            "end_token": 39,
                                                            "label": "depth"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 41,
                                                            "end_token": 41,
                                                            "label": "0"
                                                        }
                                                    ],
                                                    "label": "depth < 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 43,
                                                    "end_token": 48,
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 44,
                                                            "end_token": 48,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 45,
                                                                    "end_token": 48,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 45,
                                                                            "end_token": 45,
                                                                            "label": "ValueError"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 46,
                                                                            "end_token": 48,
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 47,
                                                                                    "end_token": 47,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 47,
                                                                                            "end_token": 47,
                                                                                            "label": "\"Depth cannot be less than 0\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "\"Depth cannot be less than 0\""
                                                                                }
                                                                            ],
                                                                            "label": "(\"Depth cannot be less than 0\")"
                                                                        }
                                                                    ],
                                                                    "label": "ValueError(\"Depth cannot be less than 0\")"
                                                                }
                                                            ],
                                                            "label": "raise ValueError(\"Depth cannot be less than 0\")"
                                                        }
                                                    ],
                                                    "label": "\n        raise ValueError(\"Depth cannot be less than 0\")"
                                                }
                                            ],
                                            "label": "if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 50,
                                            "end_token": 64,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 51,
                                                    "end_token": 57,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 51,
                                                            "end_token": 54,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 51,
                                                                    "end_token": 51,
                                                                    "label": "len"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 52,
                                                                    "end_token": 54,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 53,
                                                                            "end_token": 53,
                                                                            "label": "scores"
                                                                        }
                                                                    ],
                                                                    "label": "(scores)"
                                                                }
                                                            ],
                                                            "label": "len(scores)"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 57,
                                                            "end_token": 57,
                                                            "label": "0"
                                                        }
                                                    ],
                                                    "label": "len(scores) == 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 59,
                                                    "end_token": 64,
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "start_token": 60,
                                                            "end_token": 64,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 61,
                                                                    "end_token": 64,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 61,
                                                                            "end_token": 61,
                                                                            "label": "ValueError"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 62,
                                                                            "end_token": 64,
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 63,
                                                                                    "end_token": 63,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "start_token": 63,
                                                                                            "end_token": 63,
                                                                                            "label": "\"Scores cannot be empty\""
                                                                                        }
                                                                                    ],
                                                                                    "label": "\"Scores cannot be empty\""
                                                                                }
                                                                            ],
                                                                            "label": "(\"Scores cannot be empty\")"
                                                                        }
                                                                    ],
                                                                    "label": "ValueError(\"Scores cannot be empty\")"
                                                                }
                                                            ],
                                                            "label": "raise ValueError(\"Scores cannot be empty\")"
                                                        }
                                                    ],
                                                    "label": "\n        raise ValueError(\"Scores cannot be empty\")"
                                                }
                                            ],
                                            "label": "if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 93,
                                            "end_token": 104,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 94,
                                                    "end_token": 97,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 94,
                                                            "end_token": 94,
                                                            "label": "depth"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 97,
                                                            "end_token": 97,
                                                            "label": "height"
                                                        }
                                                    ],
                                                    "label": "depth == height"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 99,
                                                    "end_token": 104,
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 100,
                                                            "end_token": 104,
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 101,
                                                                    "end_token": 104,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 101,
                                                                            "end_token": 101,
                                                                            "label": "scores"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 103,
                                                                            "end_token": 103,
                                                                            "label": "node_index"
                                                                        }
                                                                    ],
                                                                    "label": "scores[node_index]"
                                                                }
                                                            ],
                                                            "label": "return scores[node_index]"
                                                        }
                                                    ],
                                                    "label": "\n        return scores[node_index]"
                                                }
                                            ],
                                            "label": "if depth == height:\n        return scores[node_index]"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 127,
                                            "end_token": 173,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 128,
                                                    "end_token": 128,
                                                    "label": "is_max"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 130,
                                                    "end_token": 173,
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 131,
                                                            "end_token": 173,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 132,
                                                                    "end_token": 172,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 132,
                                                                            "end_token": 132,
                                                                            "label": "max"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 133,
                                                                            "end_token": 171,
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 135,
                                                                                    "end_token": 150,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 135,
                                                                                            "end_token": 135,
                                                                                            "label": "minimax"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 136,
                                                                                            "end_token": 150,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 137,
                                                                                                    "end_token": 139,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 137,
                                                                                                            "end_token": 137,
                                                                                                            "label": "depth"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "start_token": 139,
                                                                                                            "end_token": 139,
                                                                                                            "label": "1"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "depth + 1"
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 141,
                                                                                                    "end_token": 143,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 141,
                                                                                                            "end_token": 141,
                                                                                                            "label": "node_index"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "start_token": 143,
                                                                                                            "end_token": 143,
                                                                                                            "label": "2"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "node_index * 2"
                                                                                                },
                                                                                                {
                                                                                                    "type": "false",
                                                                                                    "start_token": 145,
                                                                                                    "end_token": 145,
                                                                                                    "label": "False"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 147,
                                                                                                    "end_token": 147,
                                                                                                    "label": "scores"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 149,
                                                                                                    "end_token": 149,
                                                                                                    "label": "height"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(depth + 1, node_index * 2, False, scores, height)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "minimax(depth + 1, node_index * 2, False, scores, height)"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 153,
                                                                                    "end_token": 170,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 153,
                                                                                            "end_token": 153,
                                                                                            "label": "minimax"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 154,
                                                                                            "end_token": 170,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 155,
                                                                                                    "end_token": 157,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 155,
                                                                                                            "end_token": 155,
                                                                                                            "label": "depth"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "start_token": 157,
                                                                                                            "end_token": 157,
                                                                                                            "label": "1"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "depth + 1"
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 159,
                                                                                                    "end_token": 163,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "start_token": 159,
                                                                                                            "end_token": 161,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 159,
                                                                                                                    "end_token": 159,
                                                                                                                    "label": "node_index"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "integer",
                                                                                                                    "start_token": 161,
                                                                                                                    "end_token": 161,
                                                                                                                    "label": "2"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "node_index * 2"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "start_token": 163,
                                                                                                            "end_token": 163,
                                                                                                            "label": "1"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "node_index * 2 + 1"
                                                                                                },
                                                                                                {
                                                                                                    "type": "false",
                                                                                                    "start_token": 165,
                                                                                                    "end_token": 165,
                                                                                                    "label": "False"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 167,
                                                                                                    "end_token": 167,
                                                                                                    "label": "scores"
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 169,
                                                                                                    "end_token": 169,
                                                                                                    "label": "height"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(depth + 1, node_index * 2 + 1, False, scores, height)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "minimax(depth + 1, node_index * 2 + 1, False, scores, height)"
                                                                                }
                                                                            ],
                                                                            "label": "(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),"
                                                                        }
                                                                    ],
                                                                    "label": "max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n"
                                                                }
                                                            ],
                                                            "label": "return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )"
                                                        }
                                                    ],
                                                    "label": "\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )"
                                                }
                                            ],
                                            "label": "if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 196,
                                            "end_token": 238,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 197,
                                                    "end_token": 238,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 197,
                                                            "end_token": 197,
                                                            "label": "min"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 198,
                                                            "end_token": 236,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 200,
                                                                    "end_token": 215,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 200,
                                                                            "end_token": 200,
                                                                            "label": "minimax"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 201,
                                                                            "end_token": 215,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 202,
                                                                                    "end_token": 204,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 202,
                                                                                            "end_token": 202,
                                                                                            "label": "depth"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 204,
                                                                                            "end_token": 204,
                                                                                            "label": "1"
                                                                                        }
                                                                                    ],
                                                                                    "label": "depth + 1"
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 206,
                                                                                    "end_token": 208,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 206,
                                                                                            "end_token": 206,
                                                                                            "label": "node_index"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 208,
                                                                                            "end_token": 208,
                                                                                            "label": "2"
                                                                                        }
                                                                                    ],
                                                                                    "label": "node_index * 2"
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "start_token": 210,
                                                                                    "end_token": 210,
                                                                                    "label": "True"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 212,
                                                                                    "end_token": 212,
                                                                                    "label": "scores"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 214,
                                                                                    "end_token": 214,
                                                                                    "label": "height"
                                                                                }
                                                                            ],
                                                                            "label": "(depth + 1, node_index * 2, True, scores, height)"
                                                                        }
                                                                    ],
                                                                    "label": "minimax(depth + 1, node_index * 2, True, scores, height)"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 218,
                                                                    "end_token": 235,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 218,
                                                                            "end_token": 218,
                                                                            "label": "minimax"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 219,
                                                                            "end_token": 235,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 220,
                                                                                    "end_token": 222,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 220,
                                                                                            "end_token": 220,
                                                                                            "label": "depth"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 222,
                                                                                            "end_token": 222,
                                                                                            "label": "1"
                                                                                        }
                                                                                    ],
                                                                                    "label": "depth + 1"
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 224,
                                                                                    "end_token": 228,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "start_token": 224,
                                                                                            "end_token": 226,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 224,
                                                                                                    "end_token": 224,
                                                                                                    "label": "node_index"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "start_token": 226,
                                                                                                    "end_token": 226,
                                                                                                    "label": "2"
                                                                                                }
                                                                                            ],
                                                                                            "label": "node_index * 2"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 228,
                                                                                            "end_token": 228,
                                                                                            "label": "1"
                                                                                        }
                                                                                    ],
                                                                                    "label": "node_index * 2 + 1"
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "start_token": 230,
                                                                                    "end_token": 230,
                                                                                    "label": "True"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 232,
                                                                                    "end_token": 232,
                                                                                    "label": "scores"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 234,
                                                                                    "end_token": 234,
                                                                                    "label": "height"
                                                                                }
                                                                            ],
                                                                            "label": "(depth + 1, node_index * 2 + 1, True, scores, height)"
                                                                        }
                                                                    ],
                                                                    "label": "minimax(depth + 1, node_index * 2 + 1, True, scores, height)"
                                                                }
                                                            ],
                                                            "label": "(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),"
                                                        }
                                                    ],
                                                    "label": "min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )"
                                                }
                                            ],
                                            "label": "return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )"
                                        }
                                    ],
                                    "label": "\n    if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")\n    if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")\n\n    # Base case: If the current depth equals the height of the tree,\n    # return the score of the current node.\n    if depth == height:\n        return scores[node_index]\n\n    # If it's the maximizer's turn, choose the maximum score\n    # between the two possible moves.\n    if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )\n\n    # If it's the minimizer's turn, choose the minimum score\n    # between the two possible moves.\n    return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )\n"
                                }
                            ],
                            "label": "def minimax(\n    depth: int, node_index: int, is_max: bool, scores: list[int], height: float\n) -> int:\n    \"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"\n\n    if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")\n    if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")\n\n    # Base case: If the current depth equals the height of the tree,\n    # return the score of the current node.\n    if depth == height:\n        return scores[node_index]\n\n    # If it's the maximizer's turn, choose the maximum score\n    # between the two possible moves.\n    if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )\n\n    # If it's the minimizer's turn, choose the minimum score\n    # between the two possible moves.\n    return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )\n"
                        }
                    ],
                    "label": "def minimax(\n    depth: int, node_index: int, is_max: bool, scores: list[int], height: float\n) -> int:\n    \"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"\n\n    if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")\n    if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")\n\n    # Base case: If the current depth equals the height of the tree,\n    # return the score of the current node.\n    if depth == height:\n        return scores[node_index]\n\n    # If it's the maximizer's turn, choose the maximum score\n    # between the two possible moves.\n    if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )\n\n    # If it's the minimizer's turn, choose the minimum score\n    # between the two possible moves.\n    return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )\n"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "main",
            "start_line": 81,
            "end_line": 88,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 86,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 86,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "main"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 3,
                                    "children": [],
                                    "label": "()"
                                },
                                {
                                    "type": "none",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "label": "None"
                                },
                                {
                                    "type": "block",
                                    "start_token": 8,
                                    "end_token": 86,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "start_token": 9,
                                            "end_token": 14,
                                            "label": "# Sample scores and height calculation"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 16,
                                            "end_token": 34,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 16,
                                                    "end_token": 16,
                                                    "label": "scores"
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 18,
                                                    "end_token": 34,
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "start_token": 19,
                                                            "end_token": 19,
                                                            "label": "90"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 21,
                                                            "end_token": 21,
                                                            "label": "23"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 23,
                                                            "end_token": 23,
                                                            "label": "6"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 25,
                                                            "end_token": 25,
                                                            "label": "33"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "label": "21"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 29,
                                                            "end_token": 29,
                                                            "label": "65"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 31,
                                                            "end_token": 31,
                                                            "label": "123"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 33,
                                                            "end_token": 33,
                                                            "label": "34423"
                                                        }
                                                    ],
                                                    "label": "[90, 23, 6, 33, 21, 65, 123, 34423]"
                                                }
                                            ],
                                            "label": "scores = [90, 23, 6, 33, 21, 65, 123, 34423]"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 36,
                                            "end_token": 48,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 36,
                                                    "end_token": 36,
                                                    "label": "height"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 38,
                                                    "end_token": 48,
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 38,
                                                            "end_token": 40,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 38,
                                                                    "end_token": 38,
                                                                    "label": "math"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 40,
                                                                    "end_token": 40,
                                                                    "label": "log"
                                                                }
                                                            ],
                                                            "label": "math.log"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 41,
                                                            "end_token": 48,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 42,
                                                                    "end_token": 45,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 42,
                                                                            "end_token": 42,
                                                                            "label": "len"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 43,
                                                                            "end_token": 45,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 44,
                                                                                    "end_token": 44,
                                                                                    "label": "scores"
                                                                                }
                                                                            ],
                                                                            "label": "(scores)"
                                                                        }
                                                                    ],
                                                                    "label": "len(scores)"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 47,
                                                                    "end_token": 47,
                                                                    "label": "2"
                                                                }
                                                            ],
                                                            "label": "(len(scores), 2)"
                                                        }
                                                    ],
                                                    "label": "math.log(len(scores), 2)"
                                                }
                                            ],
                                            "label": "height = math.log(len(scores), 2)"
                                        },
                                        {
                                            "type": "comment",
                                            "start_token": 51,
                                            "end_token": 61,
                                            "label": "# Calculate and print the optimal value using the minimax algorithm"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 63,
                                            "end_token": 70,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 63,
                                                    "end_token": 70,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 63,
                                                            "end_token": 63,
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 64,
                                                            "end_token": 70,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 65,
                                                                    "end_token": 65,
                                                                    "label": "\"Optimal value : \""
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 67,
                                                                    "end_token": 69,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 67,
                                                                            "end_token": 67,
                                                                            "label": "end"
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 69,
                                                                            "end_token": 69,
                                                                            "label": "\"\""
                                                                        }
                                                                    ],
                                                                    "label": "end=\"\""
                                                                }
                                                            ],
                                                            "label": "(\"Optimal value : \", end=\"\")"
                                                        }
                                                    ],
                                                    "label": "print(\"Optimal value : \", end=\"\")"
                                                }
                                            ],
                                            "label": "print(\"Optimal value : \", end=\"\")"
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 72,
                                            "end_token": 86,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 72,
                                                    "end_token": 86,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 72,
                                                            "end_token": 72,
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 73,
                                                            "end_token": 86,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 74,
                                                                    "end_token": 85,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 74,
                                                                            "end_token": 74,
                                                                            "label": "minimax"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 75,
                                                                            "end_token": 85,
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 76,
                                                                                    "end_token": 76,
                                                                                    "label": "0"
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 78,
                                                                                    "end_token": 78,
                                                                                    "label": "0"
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "start_token": 80,
                                                                                    "end_token": 80,
                                                                                    "label": "True"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 82,
                                                                                    "end_token": 82,
                                                                                    "label": "scores"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 84,
                                                                                    "end_token": 84,
                                                                                    "label": "height"
                                                                                }
                                                                            ],
                                                                            "label": "(0, 0, True, scores, height)"
                                                                        }
                                                                    ],
                                                                    "label": "minimax(0, 0, True, scores, height)"
                                                                }
                                                            ],
                                                            "label": "(minimax(0, 0, True, scores, height))"
                                                        }
                                                    ],
                                                    "label": "print(minimax(0, 0, True, scores, height))"
                                                }
                                            ],
                                            "label": "print(minimax(0, 0, True, scores, height))"
                                        }
                                    ],
                                    "label": "\n    # Sample scores and height calculation\n    scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    height = math.log(len(scores), 2)\n\n    # Calculate and print the optimal value using the minimax algorithm\n    print(\"Optimal value : \", end=\"\")\n    print(minimax(0, 0, True, scores, height))"
                                }
                            ],
                            "label": "def main() -> None:\n    # Sample scores and height calculation\n    scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    height = math.log(len(scores), 2)\n\n    # Calculate and print the optimal value using the minimax algorithm\n    print(\"Optimal value : \", end=\"\")\n    print(minimax(0, 0, True, scores, height))"
                        }
                    ],
                    "label": "def main() -> None:\n    # Sample scores and height calculation\n    scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    height = math.log(len(scores), 2)\n\n    # Calculate and print the optimal value using the minimax algorithm\n    print(\"Optimal value : \", end=\"\")\n    print(minimax(0, 0, True, scores, height))"
                }
            ]
        }
    ],
    "label": "\"\"\"\nMinimax helps to achieve maximum score in a game by checking all possible moves\ndepth is current depth in game tree.\n\nnodeIndex is index of current node in scores[].\nif move is of maximizer return true else false\nleaves of game tree is stored in scores[]\nheight is maximum height of Game tree\n\"\"\"\n\nfrom __future__ import annotations\n\nimport math\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()\n"
}