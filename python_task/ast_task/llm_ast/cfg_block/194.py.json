{
    "type": "module",
    "start_token": 0,
    "end_token": 70,
    "children": [
        {
            "type": "comment",
            "start_token": 1,
            "end_token": 1,
            "label": "\"\nIn this problem, we want to determine all possible permutations\nof the given sequence. We use backtracking to solve this problem.\n\nTime complexity: O(n! * n),\nwhere n denotes the length of the given sequence.\n\""
        },
        {
            "type": "future_import_statement",
            "start_token": 5,
            "end_token": 8,
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 6,
                    "end_token": 6,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 6,
                            "end_token": 6,
                            "label": "__future__"
                        }
                    ],
                    "label": "__future__"
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "annotations"
                }
            ],
            "label": "from __future__ import annotations"
        },
        {
            "type": "comment",
            "start_token": 15,
            "end_token": 15,
            "label": "\"\""
        },
        {
            "type": "assignment",
            "start_token": 24,
            "end_token": 41,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 24,
                    "end_token": 24,
                    "label": "sequence"
                },
                {
                    "type": "list",
                    "start_token": 27,
                    "end_token": 41,
                    "children": [
                        {
                            "type": "integer",
                            "start_token": 34,
                            "end_token": 34,
                            "label": "3"
                        },
                        {
                            "type": "integer",
                            "start_token": 36,
                            "end_token": 36,
                            "label": "1"
                        },
                        {
                            "type": "integer",
                            "start_token": 38,
                            "end_token": 38,
                            "label": "2"
                        },
                        {
                            "type": "integer",
                            "start_token": 40,
                            "end_token": 40,
                            "label": "4"
                        }
                    ],
                    "label": "[int | str] = [3, 1, 2, 4]"
                }
            ],
            "label": "sequence: list[int | str] = [3, 1, 2, 4]"
        },
        {
            "type": "call",
            "start_token": 43,
            "end_token": 46,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 43,
                    "end_token": 43,
                    "label": "generate_all_permutations"
                },
                {
                    "type": "argument_list",
                    "start_token": 45,
                    "end_token": 45,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 45,
                            "end_token": 45,
                            "label": "sequence"
                        }
                    ],
                    "label": "sequence"
                }
            ],
            "label": "generate_all_permutations(sequence)"
        },
        {
            "type": "assignment",
            "start_token": 49,
            "end_token": 64,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 49,
                    "end_token": 49,
                    "label": "sequence_2"
                },
                {
                    "type": "list",
                    "start_token": 52,
                    "end_token": 64,
                    "children": [
                        {
                            "type": "string",
                            "start_token": 59,
                            "end_token": 59,
                            "label": "\"A\""
                        },
                        {
                            "type": "string",
                            "start_token": 61,
                            "end_token": 61,
                            "label": "\"B\""
                        },
                        {
                            "type": "string",
                            "start_token": 63,
                            "end_token": 63,
                            "label": "\"C\""
                        }
                    ],
                    "label": "[int | str] = [\"A\", \"B\", \"C\"]"
                }
            ],
            "label": "sequence_2: list[int | str] = [\"A\", \"B\", \"C\"]"
        },
        {
            "type": "call",
            "start_token": 66,
            "end_token": 69,
            "children": [
                {
                    "type": "identifier",
                    "start_token": 66,
                    "end_token": 66,
                    "label": "generate_all_permutations"
                },
                {
                    "type": "argument_list",
                    "start_token": 68,
                    "end_token": 68,
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 68,
                            "end_token": 68,
                            "label": "sequence_2"
                        }
                    ],
                    "label": "sequence_2"
                }
            ],
            "label": "generate_all_permutations(sequence_2)"
        },
        {
            "type": "function_placeholder",
            "name": "generate_all_permutations",
            "start_line": 12,
            "end_line": 14,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 41,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 16,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "generate_all_permutations"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 11,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 3,
                                            "end_token": 3,
                                            "label": "sequence"
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 5,
                                            "end_token": 10,
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "start_token": 6,
                                                    "end_token": 10,
                                                    "children": [
                                                        {
                                                            "type": "union_type",
                                                            "start_token": 7,
                                                            "end_token": 9,
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 7,
                                                                    "end_token": 7,
                                                                    "label": "int"
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "start_token": 9,
                                                                    "end_token": 9,
                                                                    "label": "str"
                                                                }
                                                            ],
                                                            "label": "int | str"
                                                        }
                                                    ],
                                                    "label": "[int | str]"
                                                }
                                            ],
                                            "label": "list[int | str]"
                                        }
                                    ],
                                    "label": "(sequence: list[int | str])"
                                },
                                {
                                    "type": "type",
                                    "start_token": 13,
                                    "end_token": 14,
                                    "label": "> None"
                                }
                            ],
                            "label": "def generate_all_permutations(sequence: list[int | str]) -> None:\n"
                        },
                        {
                            "type": "block",
                            "start_token": 17,
                            "end_token": 40,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 17,
                                    "end_token": 39,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 17,
                                            "end_token": 17,
                                            "label": "create_state_space_tree"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 18,
                                            "end_token": 39,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 19,
                                                    "end_token": 19,
                                                    "label": "sequence"
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 21,
                                                    "end_token": 23,
                                                    "children": [],
                                                    "label": "[],"
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 24,
                                                    "end_token": 24,
                                                    "label": "0"
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 26,
                                                    "end_token": 38,
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "label": "0"
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 28,
                                                            "end_token": 37,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 29,
                                                                    "end_token": 29,
                                                                    "label": "i"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 31,
                                                                    "end_token": 37,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 31,
                                                                            "end_token": 31,
                                                                            "label": "range"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 32,
                                                                            "end_token": 37,
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 33,
                                                                                    "end_token": 36,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 33,
                                                                                            "end_token": 33,
                                                                                            "label": "len"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 34,
                                                                                            "end_token": 36,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 35,
                                                                                                    "end_token": 35,
                                                                                                    "label": "sequence"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(sequence)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "len(sequence)"
                                                                                }
                                                                            ],
                                                                            "label": "(len(sequence))"
                                                                        }
                                                                    ],
                                                                    "label": "range(len(sequence))"
                                                                }
                                                            ],
                                                            "label": "for i in range(len(sequence))"
                                                        }
                                                    ],
                                                    "label": "[0 for i in range(len(sequence))]"
                                                }
                                            ],
                                            "label": "(sequence, [], 0, [0 for i in range(len(sequence))])"
                                        }
                                    ],
                                    "label": "create_state_space_tree(sequence, [], 0, [0 for i in range(len(sequence))])"
                                }
                            ],
                            "label": "create_state_space_tree(sequence, [], 0, [0 for i in range(len(sequence))])\n"
                        }
                    ],
                    "label": "def generate_all_permutations(sequence: list[int | str]) -> None:\n    create_state_space_tree(sequence, [], 0, [0 for i in range(len(sequence))])\n\n"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "create_state_space_tree",
            "start_line": 16,
            "end_line": 74,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 134,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 52,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "create_state_space_tree"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 37,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 4,
                                            "end_token": 4,
                                            "label": "sequence"
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 6,
                                            "end_token": 11,
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "start_token": 7,
                                                    "end_token": 11,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 8,
                                                            "end_token": 8,
                                                            "label": "int"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 10,
                                                            "end_token": 10,
                                                            "label": "str"
                                                        }
                                                    ],
                                                    "label": "[int | str]"
                                                }
                                            ],
                                            "label": "list[int | str]"
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 14,
                                            "end_token": 14,
                                            "label": "current_sequence"
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 16,
                                            "end_token": 21,
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "start_token": 17,
                                                    "end_token": 21,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 18,
                                                            "end_token": 18,
                                                            "label": "int"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 20,
                                                            "end_token": 20,
                                                            "label": "str"
                                                        }
                                                    ],
                                                    "label": "[int | str]"
                                                }
                                            ],
                                            "label": "list[int | str]"
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 24,
                                            "end_token": 24,
                                            "label": "index"
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 26,
                                            "end_token": 26,
                                            "label": "int"
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 29,
                                            "end_token": 29,
                                            "label": "index_used"
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 31,
                                            "end_token": 34,
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "start_token": 32,
                                                    "end_token": 34,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 33,
                                                            "end_token": 33,
                                                            "label": "int"
                                                        }
                                                    ],
                                                    "label": "[int]"
                                                }
                                            ],
                                            "label": "list[int]"
                                        }
                                    ],
                                    "label": "(\n    sequence: list[int | str],\n    current_sequence: list[int | str],\n    index: int,\n    index_used: list[int],\n)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 40,
                                    "end_token": 40,
                                    "label": "None"
                                },
                                {
                                    "type": "string",
                                    "start_token": 43,
                                    "end_token": 51,
                                    "children": [
                                        {
                                            "type": "string_content",
                                            "start_token": 44,
                                            "end_token": 50,
                                            "label": "\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly len(sequence) - index children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which permutations are generated.\n    :param current_sequence: The current permutation being built.\n    :param index: The current index in the sequence.\n    :param index_used: list to track which elements are used in permutation.\n\n    Example 1:\n    >>> sequence = [1, 2, 3]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1, 2, 3]\n    [1, 3, 2]\n    [2, 1, 3]\n    [2, 3, 1]\n    [3, 1, 2]\n    [3, 2, 1]\n\n    Example 2:\n    >>> sequence = [\"A\", \"B\", \"C\"]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    ['A', 'B', 'C']\n    ['A', 'C', 'B']\n    ['B', 'A', 'C']\n    ['B', 'C', 'A']\n    ['C', 'A', 'B']\n    ['C', 'B', 'A']\n\n    Example 3:\n    >>> sequence = [1]\n    >>> current_sequence = []\n    >>> index_used = [False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1]\n    \""
                                        }
                                    ],
                                    "label": "\"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly len(sequence) - index children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which permutations are generated.\n    :param current_sequence: The current permutation being built.\n    :param index: The current index in the sequence.\n    :param index_used: list to track which elements are used in permutation.\n\n    Example 1:\n    >>> sequence = [1, 2, 3]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1, 2, 3]\n    [1, 3, 2]\n    [2, 1, 3]\n    [2, 3, 1]\n    [3, 1, 2]\n    [3, 2, 1]\n\n    Example 2:\n    >>> sequence = [\"A\", \"B\", \"C\"]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    ['A', 'B', 'C']\n    ['A', 'C', 'B']\n    ['B', 'A', 'C']\n    ['B', 'C', 'A']\n    ['C', 'A', 'B']\n    ['C', 'B', 'A']\n\n    Example 3:\n    >>> sequence = [1]\n    >>> current_sequence = []\n    >>> index_used = [False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1]\n    \"\"\""
                                }
                            ],
                            "label": "def create_state_space_tree(\n    sequence: list[int | str],\n    current_sequence: list[int | str],\n    index: int,\n    index_used: list[int],\n) -> None:\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly len(sequence) - index children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which permutations are generated.\n    :param current_sequence: The current permutation being built.\n    :param index: The current index in the sequence.\n    :param index_used: list to track which elements are used in permutation.\n\n    Example 1:\n    >>> sequence = [1, 2, 3]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1, 2, 3]\n    [1, 3, 2]\n    [2, 1, 3]\n    [2, 3, 1]\n    [3, 1, 2]\n    [3, 2, 1]\n\n    Example 2:\n    >>> sequence = [\"A\", \"B\", \"C\"]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    ['A', 'B', 'C']\n    ['A', 'C', 'B']\n    ['B', 'A', 'C']\n    ['B', 'C', 'A']\n    ['C', 'A', 'B']\n    ['C', 'B', 'A']\n\n    Example 3:\n    >>> sequence = [1]\n    >>> current_sequence = []\n    >>> index_used = [False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1]\n    \"\"\"\n"
                        },
                        {
                            "type": "block",
                            "start_token": 52,
                            "end_token": 134,
                            "children": [
                                {
                                    "type": "if_statement",
                                    "start_token": 54,
                                    "end_token": 70,
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 55,
                                            "end_token": 61,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 55,
                                                    "end_token": 55,
                                                    "label": "index"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 59,
                                                    "end_token": 61,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 59,
                                                            "end_token": 59,
                                                            "label": "("
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 60,
                                                            "end_token": 60,
                                                            "label": "sequence"
                                                        }
                                                    ],
                                                    "label": "(sequence)"
                                                }
                                            ],
                                            "label": "index == len(sequence)"
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 63,
                                            "end_token": 70,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 64,
                                                    "end_token": 67,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 64,
                                                            "end_token": 64,
                                                            "label": "print"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 66,
                                                            "end_token": 66,
                                                            "label": "current_sequence"
                                                        }
                                                    ],
                                                    "label": "print(current_sequence)"
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "start_token": 69,
                                                    "end_token": 69,
                                                    "label": "return"
                                                }
                                            ],
                                            "label": "\n        print(current_sequence)\n        return\n"
                                        }
                                    ],
                                    "label": "if index == len(sequence):\n        print(current_sequence)\n        return\n"
                                },
                                {
                                    "type": "for_statement",
                                    "start_token": 72,
                                    "end_token": 134,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 73,
                                            "end_token": 73,
                                            "label": "i"
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 75,
                                            "end_token": 81,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 75,
                                                    "end_token": 75,
                                                    "label": "range"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 79,
                                                    "end_token": 81,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 79,
                                                            "end_token": 79,
                                                            "label": "sequence"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 80,
                                                            "end_token": 80,
                                                            "label": ")"
                                                        }
                                                    ],
                                                    "label": "sequence))"
                                                }
                                            ],
                                            "label": "range(len(sequence))"
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 83,
                                            "end_token": 134,
                                            "children": [
                                                {
                                                    "type": "if_statement",
                                                    "start_token": 84,
                                                    "end_token": 91,
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "start_token": 85,
                                                            "end_token": 85,
                                                            "label": "not"
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "start_token": 86,
                                                            "end_token": 89,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 86,
                                                                    "end_token": 86,
                                                                    "label": "index_used"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 88,
                                                                    "end_token": 88,
                                                                    "label": "i"
                                                                }
                                                            ],
                                                            "label": "index_used[i]"
                                                        }
                                                    ],
                                                    "label": "if not index_used[i]:\n"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 92,
                                                    "end_token": 134,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 92,
                                                            "end_token": 100,
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 92,
                                                                    "end_token": 94,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 92,
                                                                            "end_token": 92,
                                                                            "label": "current_sequence"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 94,
                                                                            "end_token": 94,
                                                                            "label": "append"
                                                                        }
                                                                    ],
                                                                    "label": "current_sequence.append"
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 96,
                                                                    "end_token": 99,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 96,
                                                                            "end_token": 96,
                                                                            "label": "sequence"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 98,
                                                                            "end_token": 98,
                                                                            "label": "i"
                                                                        }
                                                                    ],
                                                                    "label": "sequence[i]"
                                                                }
                                                            ],
                                                            "label": "current_sequence.append(sequence[i])"
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 102,
                                                            "end_token": 107,
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 102,
                                                                    "end_token": 105,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 102,
                                                                            "end_token": 102,
                                                                            "label": "index_used"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 104,
                                                                            "end_token": 104,
                                                                            "label": "i"
                                                                        }
                                                                    ],
                                                                    "label": "index_used[i]"
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "start_token": 107,
                                                                    "end_token": 107,
                                                                    "label": "True"
                                                                }
                                                            ],
                                                            "label": "index_used[i] = True"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 109,
                                                            "end_token": 120,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 109,
                                                                    "end_token": 109,
                                                                    "label": "create_state_space_tree"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 111,
                                                                    "end_token": 111,
                                                                    "label": "sequence"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 113,
                                                                    "end_token": 113,
                                                                    "label": "current_sequence"
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 115,
                                                                    "end_token": 117,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 115,
                                                                            "end_token": 115,
                                                                            "label": "index"
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 117,
                                                                            "end_token": 117,
                                                                            "label": "1"
                                                                        }
                                                                    ],
                                                                    "label": "index + 1"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 119,
                                                                    "end_token": 119,
                                                                    "label": "index_used"
                                                                }
                                                            ],
                                                            "label": "create_state_space_tree(sequence, current_sequence, index + 1, index_used)"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 122,
                                                            "end_token": 126,
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 122,
                                                                    "end_token": 124,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 122,
                                                                            "end_token": 122,
                                                                            "label": "current_sequence"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 124,
                                                                            "end_token": 124,
                                                                            "label": "pop"
                                                                        }
                                                                    ],
                                                                    "label": "current_sequence.pop"
                                                                }
                                                            ],
                                                            "label": "current_sequence.pop()"
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 128,
                                                            "end_token": 133,
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 128,
                                                                    "end_token": 131,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 128,
                                                                            "end_token": 128,
                                                                            "label": "index_used"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 130,
                                                                            "end_token": 130,
                                                                            "label": "i"
                                                                        }
                                                                    ],
                                                                    "label": "index_used[i]"
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "start_token": 133,
                                                                    "end_token": 133,
                                                                    "label": "False"
                                                                }
                                                            ],
                                                            "label": "index_used[i] = False"
                                                        }
                                                    ],
                                                    "label": "current_sequence.append(sequence[i])\n            index_used[i] = True\n            create_state_space_tree(sequence, current_sequence, index + 1, index_used)\n            current_sequence.pop()\n            index_used[i] = False\n"
                                                }
                                            ],
                                            "label": "\n        if not index_used[i]:\n            current_sequence.append(sequence[i])\n            index_used[i] = True\n            create_state_space_tree(sequence, current_sequence, index + 1, index_used)\n            current_sequence.pop()\n            index_used[i] = False\n"
                                        }
                                    ],
                                    "label": "for i in range(len(sequence)):\n        if not index_used[i]:\n            current_sequence.append(sequence[i])\n            index_used[i] = True\n            create_state_space_tree(sequence, current_sequence, index + 1, index_used)\n            current_sequence.pop()\n            index_used[i] = False\n"
                                }
                            ],
                            "label": "\n\n    if index == len(sequence):\n        print(current_sequence)\n        return\n\n    for i in range(len(sequence)):\n        if not index_used[i]:\n            current_sequence.append(sequence[i])\n            index_used[i] = True\n            create_state_space_tree(sequence, current_sequence, index + 1, index_used)\n            current_sequence.pop()\n            index_used[i] = False\n"
                        }
                    ],
                    "label": "def create_state_space_tree(\n    sequence: list[int | str],\n    current_sequence: list[int | str],\n    index: int,\n    index_used: list[int],\n) -> None:\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly len(sequence) - index children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which permutations are generated.\n    :param current_sequence: The current permutation being built.\n    :param index: The current index in the sequence.\n    :param index_used: list to track which elements are used in permutation.\n\n    Example 1:\n    >>> sequence = [1, 2, 3]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1, 2, 3]\n    [1, 3, 2]\n    [2, 1, 3]\n    [2, 3, 1]\n    [3, 1, 2]\n    [3, 2, 1]\n\n    Example 2:\n    >>> sequence = [\"A\", \"B\", \"C\"]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    ['A', 'B', 'C']\n    ['A', 'C', 'B']\n    ['B', 'A', 'C']\n    ['B', 'C', 'A']\n    ['C', 'A', 'B']\n    ['C', 'B', 'A']\n\n    Example 3:\n    >>> sequence = [1]\n    >>> current_sequence = []\n    >>> index_used = [False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1]\n    \"\"\"\n\n    if index == len(sequence):\n        print(current_sequence)\n        return\n\n    for i in range(len(sequence)):\n        if not index_used[i]:\n            current_sequence.append(sequence[i])\n            index_used[i] = True\n            create_state_space_tree(sequence, current_sequence, index + 1, index_used)\n            current_sequence.pop()\n            index_used[i] = False\n"
                }
            ]
        }
    ],
    "label": "\"\"\"\nIn this problem, we want to determine all possible permutations\nof the given sequence. We use backtracking to solve this problem.\n\nTime complexity: O(n! * n),\nwhere n denotes the length of the given sequence.\n\"\"\"\n\nfrom __future__ import annotations\n\n\n\n\n\n\"\"\"\nremove the comment to take an input from the user\n\nprint(\"Enter the elements\")\nsequence = list(map(int, input().split()))\n\"\"\"\n\nsequence: list[int | str] = [3, 1, 2, 4]\ngenerate_all_permutations(sequence)\n\nsequence_2: list[int | str] = [\"A\", \"B\", \"C\"]\ngenerate_all_permutations(sequence_2)\n"
}