{
    "type": "module",
    "start_token": 0,
    "end_token": 29,
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 5,
            "children": [],
            "label": "# Information on binary shifts:"
        },
        {
            "type": "block",
            "start_token": 7,
            "end_token": 9,
            "children": [
                {
                    "type": "comment",
                    "start_token": 7,
                    "end_token": 29,
                    "children": [],
                    "label": ""
                }
            ],
            "label": "# https:"
        },
        {
            "type": "if_statement",
            "start_token": 30,
            "end_token": 43,
            "children": [
                {
                    "type": "boolean_operator",
                    "start_token": 32,
                    "end_token": 35,
                    "children": [],
                    "label": ""
                },
                {
                    "type": "block",
                    "start_token": 37,
                    "end_token": 43,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 37,
                            "end_token": 39,
                            "children": [],
                            "label": ""
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 41,
                            "end_token": 43,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 41,
                                    "end_token": 43,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 41,
                                            "end_token": 42,
                                            "children": [],
                                            "label": ""
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 43,
                                            "end_token": 43,
                                            "children": [],
                                            "label": ""
                                        }
                                    ],
                                    "label": ""
                                }
                            ],
                            "label": ""
                        }
                    ],
                    "label": ""
                }
            ],
            "label": ""
        },
        {
            "type": "function_placeholder",
            "name": "logical_left_shift",
            "start_line": 6,
            "end_line": 33,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 55,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 55,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "logical_left_shift"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 10,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "children": [],
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "children": [],
                                                    "label": "shift_amount"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "shift_amount: int"
                                        }
                                    ],
                                    "label": "(number: int, shift_amount: int)"
                                },
                                {
                                    "type": "union_type",
                                    "start_token": 12,
                                    "end_token": 13,
                                    "children": [],
                                    "label": "> str"
                                },
                                {
                                    "type": "string",
                                    "start_token": 14,
                                    "end_token": 18,
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "start_token": 16,
                                            "end_token": 16,
                                            "children": [],
                                            "label": "\"\""
                                        },
                                        {
                                            "type": "string_content",
                                            "start_token": 17,
                                            "end_token": 17,
                                            "children": [],
                                            "label": "\"\n    Take in 2 positive integers.\n    'number' is the integer to be logically left shifted 'shift_amount' times.\n    i.e. (number << shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_left_shift(0, 1)\n    '0b00'\n    >>> logical_left_shift(1, 1)\n    '0b10'\n    >>> logical_left_shift(1, 5)\n    '0b100000'\n    >>> logical_left_shift(17, 2)\n    '0b1000100'\n    >>> logical_left_shift(1983, 4)\n    '0b111101111110000'\n    >>> logical_left_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \""
                                        },
                                        {
                                            "type": "string_end",
                                            "start_token": 18,
                                            "end_token": 18,
                                            "children": [],
                                            "label": "\"\""
                                        }
                                    ],
                                    "label": ":\n    \"\"\"\n    Take in 2 positive integers.\n    'number' is the integer to be logically left shifted 'shift_amount' times.\n    i.e. (number << shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_left_shift(0, 1)\n    '0b00'\n    >>> logical_left_shift(1, 1)\n    '0b10'\n    >>> logical_left_shift(1, 5)\n    '0b100000'\n    >>> logical_left_shift(17, 2)\n    '0b1000100'\n    >>> logical_left_shift(1983, 4)\n    '0b111101111110000'\n    >>> logical_left_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 19,
                                    "end_token": 55,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 20,
                                            "end_token": 33,
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "start_token": 21,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 21,
                                                            "end_token": 23,
                                                            "children": [],
                                                            "label": "number < 0"
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 25,
                                                            "end_token": 27,
                                                            "children": [],
                                                            "label": "shift_amount < 0"
                                                        }
                                                    ],
                                                    "label": "number < 0 or shift_amount < 0"
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 30,
                                                    "end_token": 33,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 31,
                                                            "end_token": 33,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 31,
                                                                    "end_token": 31,
                                                                    "children": [],
                                                                    "label": "ValueError"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 32,
                                                                    "end_token": 33,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 33,
                                                                            "end_token": 33,
                                                                            "children": [],
                                                                            "label": "\"both inputs must be positive integers\""
                                                                        }
                                                                    ],
                                                                    "label": "(\"both inputs must be positive integers\""
                                                                }
                                                            ],
                                                            "label": "ValueError(\"both inputs must be positive integers\""
                                                        }
                                                    ],
                                                    "label": "raise ValueError(\"both inputs must be positive integers\""
                                                }
                                            ],
                                            "label": "if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\""
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 37,
                                            "end_token": 45,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 37,
                                                    "end_token": 37,
                                                    "children": [],
                                                    "label": "binary_number"
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 39,
                                                    "end_token": 45,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 39,
                                                            "end_token": 39,
                                                            "children": [],
                                                            "label": "str"
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "start_token": 40,
                                                            "end_token": 44,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 41,
                                                                    "end_token": 43,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 41,
                                                                            "end_token": 41,
                                                                            "children": [],
                                                                            "label": "bin"
                                                                        },
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "start_token": 42,
                                                                            "end_token": 43,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 43,
                                                                                    "end_token": 43,
                                                                                    "children": [],
                                                                                    "label": "number"
                                                                                }
                                                                            ],
                                                                            "label": "(number"
                                                                        }
                                                                    ],
                                                                    "label": "bin(number"
                                                                }
                                                            ],
                                                            "label": "(bin(number)"
                                                        }
                                                    ],
                                                    "label": "str(bin(number))"
                                                }
                                            ],
                                            "label": "binary_number = str(bin(number))"
                                        },
                                        {
                                            "type": "augmented_assignment",
                                            "start_token": 47,
                                            "end_token": 52,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 47,
                                                    "end_token": 47,
                                                    "children": [],
                                                    "label": "binary_number"
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 48,
                                                    "end_token": 52,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 50,
                                                            "end_token": 50,
                                                            "children": [],
                                                            "label": "\"0\""
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 52,
                                                            "end_token": 52,
                                                            "children": [],
                                                            "label": "shift_amount"
                                                        }
                                                    ],
                                                    "label": "+= \"0\" * shift_amount"
                                                }
                                            ],
                                            "label": "binary_number += \"0\" * shift_amount"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 54,
                                            "end_token": 55,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 55,
                                                    "end_token": 55,
                                                    "children": [],
                                                    "label": "binary_number"
                                                }
                                            ],
                                            "label": "return binary_number"
                                        }
                                    ],
                                    "label": "\n    if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")\n\n    binary_number = str(bin(number))\n    binary_number += \"0\" * shift_amount\n    return binary_number"
                                }
                            ],
                            "label": "def logical_left_shift(number: int, shift_amount: int) -> str:\n    \"\"\"\n    Take in 2 positive integers.\n    'number' is the integer to be logically left shifted 'shift_amount' times.\n    i.e. (number << shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_left_shift(0, 1)\n    '0b00'\n    >>> logical_left_shift(1, 1)\n    '0b10'\n    >>> logical_left_shift(1, 5)\n    '0b100000'\n    >>> logical_left_shift(17, 2)\n    '0b1000100'\n    >>> logical_left_shift(1983, 4)\n    '0b111101111110000'\n    >>> logical_left_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \"\"\"\n    if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")\n\n    binary_number = str(bin(number))\n    binary_number += \"0\" * shift_amount\n    return binary_number"
                        }
                    ],
                    "label": "def logical_left_shift(number: int, shift_amount: int) -> str:\n    \"\"\"\n    Take in 2 positive integers.\n    'number' is the integer to be logically left shifted 'shift_amount' times.\n    i.e. (number << shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_left_shift(0, 1)\n    '0b00'\n    >>> logical_left_shift(1, 1)\n    '0b10'\n    >>> logical_left_shift(1, 5)\n    '0b100000'\n    >>> logical_left_shift(17, 2)\n    '0b1000100'\n    >>> logical_left_shift(1983, 4)\n    '0b111101111110000'\n    >>> logical_left_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \"\"\"\n    if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")\n\n    binary_number = str(bin(number))\n    binary_number += \"0\" * shift_amount\n    return binary_number"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "logical_right_shift",
            "start_line": 36,
            "end_line": 65,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 81,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 81,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "logical_right_shift"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 10,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "children": [],
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "children": [],
                                                    "label": "shift_amount"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "shift_amount: int"
                                        }
                                    ],
                                    "label": "(number: int, shift_amount: int)"
                                },
                                {
                                    "type": "union_type",
                                    "start_token": 12,
                                    "end_token": 13,
                                    "children": [
                                        {
                                            "type": "type",
                                            "start_token": 13,
                                            "end_token": 13,
                                            "children": [],
                                            "label": "str"
                                        }
                                    ],
                                    "label": "> str"
                                },
                                {
                                    "type": "string",
                                    "start_token": 16,
                                    "end_token": 18,
                                    "children": [
                                        {
                                            "type": "string_content",
                                            "start_token": 17,
                                            "end_token": 17,
                                            "children": [],
                                            "label": "\"\n    Take in positive 2 integers.\n    'number' is the integer to be logically right shifted 'shift_amount' times.\n    i.e. (number >>> shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_right_shift(0, 1)\n    '0b0'\n    >>> logical_right_shift(1, 1)\n    '0b0'\n    >>> logical_right_shift(1, 5)\n    '0b0'\n    >>> logical_right_shift(17, 2)\n    '0b100'\n    >>> logical_right_shift(1983, 4)\n    '0b1111011'\n    >>> logical_right_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \""
                                        }
                                    ],
                                    "label": "\"\"\"\n    Take in positive 2 integers.\n    'number' is the integer to be logically right shifted 'shift_amount' times.\n    i.e. (number >>> shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_right_shift(0, 1)\n    '0b0'\n    >>> logical_right_shift(1, 1)\n    '0b0'\n    >>> logical_right_shift(1, 5)\n    '0b0'\n    >>> logical_right_shift(17, 2)\n    '0b100'\n    >>> logical_right_shift(1983, 4)\n    '0b1111011'\n    >>> logical_right_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \"\"\""
                                },
                                {
                                    "type": "block",
                                    "start_token": 20,
                                    "end_token": 81,
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 20,
                                            "end_token": 34,
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "start_token": 21,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 21,
                                                            "end_token": 23,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 21,
                                                                    "end_token": 21,
                                                                    "children": [],
                                                                    "label": "number"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 23,
                                                                    "end_token": 23,
                                                                    "children": [],
                                                                    "label": "0"
                                                                }
                                                            ],
                                                            "label": "number < 0"
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 25,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 25,
                                                                    "end_token": 25,
                                                                    "children": [],
                                                                    "label": "shift_amount"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [],
                                                                    "label": "0"
                                                                }
                                                            ],
                                                            "label": "shift_amount < 0"
                                                        }
                                                    ],
                                                    "label": "number < 0 or shift_amount < 0"
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 30,
                                                    "end_token": 34,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 31,
                                                            "end_token": 34,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 31,
                                                                    "end_token": 31,
                                                                    "children": [],
                                                                    "label": "ValueError"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 32,
                                                                    "end_token": 34,
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 32,
                                                                            "end_token": 34,
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "start_token": 33,
                                                                                    "end_token": 33,
                                                                                    "children": [],
                                                                                    "label": "\"both inputs must be positive integers\""
                                                                                }
                                                                            ],
                                                                            "label": "(\"both inputs must be positive integers\")"
                                                                        }
                                                                    ],
                                                                    "label": "(\"both inputs must be positive integers\")"
                                                                }
                                                            ],
                                                            "label": "ValueError(\"both inputs must be positive integers\")"
                                                        }
                                                    ],
                                                    "label": "raise ValueError(\"both inputs must be positive integers\")"
                                                }
                                            ],
                                            "label": "if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")"
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 37,
                                            "end_token": 49,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 37,
                                                    "end_token": 37,
                                                    "children": [],
                                                    "label": "binary_number"
                                                },
                                                {
                                                    "type": "subscript",
                                                    "start_token": 39,
                                                    "end_token": 49,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 39,
                                                            "end_token": 45,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 39,
                                                                    "end_token": 39,
                                                                    "children": [],
                                                                    "label": "str"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 41,
                                                                    "end_token": 44,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 41,
                                                                            "end_token": 41,
                                                                            "children": [],
                                                                            "label": "bin"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 42,
                                                                            "end_token": 44,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 43,
                                                                                    "end_token": 43,
                                                                                    "children": [],
                                                                                    "label": "number"
                                                                                }
                                                                            ],
                                                                            "label": "(number)"
                                                                        }
                                                                    ],
                                                                    "label": "bin(number)"
                                                                }
                                                            ],
                                                            "label": "str(bin(number))"
                                                        },
                                                        {
                                                            "type": "slice",
                                                            "start_token": 46,
                                                            "end_token": 49,
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 47,
                                                                    "end_token": 47,
                                                                    "children": [],
                                                                    "label": "2"
                                                                }
                                                            ],
                                                            "label": "[2:]"
                                                        }
                                                    ],
                                                    "label": "str(bin(number))[2:]"
                                                }
                                            ],
                                            "label": "binary_number = str(bin(number))[2:]"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 51,
                                            "end_token": 62,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 52,
                                                    "end_token": 58,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 52,
                                                            "end_token": 52,
                                                            "children": [],
                                                            "label": "shift_amount"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 55,
                                                            "end_token": 58,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 55,
                                                                    "end_token": 55,
                                                                    "children": [],
                                                                    "label": "len"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 56,
                                                                    "end_token": 58,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 57,
                                                                            "end_token": 57,
                                                                            "children": [],
                                                                            "label": "binary_number"
                                                                        }
                                                                    ],
                                                                    "label": "(binary_number)"
                                                                }
                                                            ],
                                                            "label": "len(binary_number)"
                                                        }
                                                    ],
                                                    "label": "shift_amount >= len(binary_number)"
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "start_token": 61,
                                                    "end_token": 62,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 61,
                                                            "end_token": 62,
                                                            "children": [
                                                                {
                                                                    "type": "string_content",
                                                                    "start_token": 62,
                                                                    "end_token": 62,
                                                                    "children": [],
                                                                    "label": "\"0b0\""
                                                                }
                                                            ],
                                                            "label": "return \"0b0\""
                                                        }
                                                    ],
                                                    "label": "return \"0b0\""
                                                }
                                            ],
                                            "label": "if shift_amount >= len(binary_number):\n        return \"0b0\""
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 64,
                                            "end_token": 75,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 64,
                                                    "end_token": 64,
                                                    "children": [],
                                                    "label": "shifted_binary_number"
                                                },
                                                {
                                                    "type": "subscript",
                                                    "start_token": 66,
                                                    "end_token": 75,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 66,
                                                            "end_token": 66,
                                                            "children": [],
                                                            "label": "binary_number"
                                                        },
                                                        {
                                                            "type": "slice",
                                                            "start_token": 67,
                                                            "end_token": 75,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 69,
                                                                    "end_token": 72,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 69,
                                                                            "end_token": 69,
                                                                            "children": [],
                                                                            "label": "len"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 70,
                                                                            "end_token": 72,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 71,
                                                                                    "end_token": 71,
                                                                                    "children": [],
                                                                                    "label": "binary_number"
                                                                                }
                                                                            ],
                                                                            "label": "(binary_number)"
                                                                        }
                                                                    ],
                                                                    "label": "len(binary_number)"
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 73,
                                                                    "end_token": 74,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 73,
                                                                            "end_token": 73,
                                                                            "children": [],
                                                                            "label": "-"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 74,
                                                                            "end_token": 74,
                                                                            "children": [],
                                                                            "label": "shift_amount"
                                                                        }
                                                                    ],
                                                                    "label": "- shift_amount"
                                                                }
                                                            ],
                                                            "label": "[: len(binary_number) - shift_amount]"
                                                        }
                                                    ],
                                                    "label": "binary_number[: len(binary_number) - shift_amount]"
                                                }
                                            ],
                                            "label": "shifted_binary_number = binary_number[: len(binary_number) - shift_amount]"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 77,
                                            "end_token": 80,
                                            "children": [
                                                {
                                                    "type": "concatenated_string",
                                                    "start_token": 78,
                                                    "end_token": 80,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 78,
                                                            "end_token": 78,
                                                            "children": [
                                                                {
                                                                    "type": "string_content",
                                                                    "start_token": 78,
                                                                    "end_token": 78,
                                                                    "children": [],
                                                                    "label": "\"0b\""
                                                                }
                                                            ],
                                                            "label": "\"0b\""
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 80,
                                                            "end_token": 80,
                                                            "children": [],
                                                            "label": "shifted_binary_number"
                                                        }
                                                    ],
                                                    "label": "\"0b\" + shifted_binary_number"
                                                }
                                            ],
                                            "label": "return \"0b\" + shifted_binary_number"
                                        }
                                    ],
                                    "label": "if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")\n\n    binary_number = str(bin(number))[2:]\n    if shift_amount >= len(binary_number):\n        return \"0b0\"\n    shifted_binary_number = binary_number[: len(binary_number) - shift_amount]\n    return \"0b\" + shifted_binary_number\n"
                                }
                            ],
                            "label": "def logical_right_shift(number: int, shift_amount: int) -> str:\n    \"\"\"\n    Take in positive 2 integers.\n    'number' is the integer to be logically right shifted 'shift_amount' times.\n    i.e. (number >>> shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_right_shift(0, 1)\n    '0b0'\n    >>> logical_right_shift(1, 1)\n    '0b0'\n    >>> logical_right_shift(1, 5)\n    '0b0'\n    >>> logical_right_shift(17, 2)\n    '0b100'\n    >>> logical_right_shift(1983, 4)\n    '0b1111011'\n    >>> logical_right_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \"\"\"\n    if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")\n\n    binary_number = str(bin(number))[2:]\n    if shift_amount >= len(binary_number):\n        return \"0b0\"\n    shifted_binary_number = binary_number[: len(binary_number) - shift_amount]\n    return \"0b\" + shifted_binary_number\n"
                        }
                    ],
                    "label": "def logical_right_shift(number: int, shift_amount: int) -> str:\n    \"\"\"\n    Take in positive 2 integers.\n    'number' is the integer to be logically right shifted 'shift_amount' times.\n    i.e. (number >>> shift_amount)\n    Return the shifted binary representation.\n\n    >>> logical_right_shift(0, 1)\n    '0b0'\n    >>> logical_right_shift(1, 1)\n    '0b0'\n    >>> logical_right_shift(1, 5)\n    '0b0'\n    >>> logical_right_shift(17, 2)\n    '0b100'\n    >>> logical_right_shift(1983, 4)\n    '0b1111011'\n    >>> logical_right_shift(1, -1)\n    Traceback (most recent call last):\n        ...\n    ValueError: both inputs must be positive integers\n    \"\"\"\n    if number < 0 or shift_amount < 0:\n        raise ValueError(\"both inputs must be positive integers\")\n\n    binary_number = str(bin(number))[2:]\n    if shift_amount >= len(binary_number):\n        return \"0b0\"\n    shifted_binary_number = binary_number[: len(binary_number) - shift_amount]\n    return \"0b\" + shifted_binary_number\n"
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "arithmetic_right_shift",
            "start_line": 68,
            "end_line": 103,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 159,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 159,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "children": [],
                                    "label": "arithmetic_right_shift"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 10,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "children": [],
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 7,
                                            "end_token": 9,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 7,
                                                    "end_token": 7,
                                                    "children": [],
                                                    "label": "shift_amount"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 9,
                                                    "end_token": 9,
                                                    "children": [],
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "shift_amount: int"
                                        }
                                    ],
                                    "label": "(number: int, shift_amount: int)"
                                },
                                {
                                    "type": "block",
                                    "start_token": 15,
                                    "end_token": 159,
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 16,
                                            "end_token": 18,
                                            "children": [],
                                            "label": "\"\"\"\n    Take in 2 integers.\n    'number' is the integer to be arithmetically right shifted 'shift_amount' times.\n    i.e. (number >> shift_amount)\n    Return the shifted binary representation.\n\n    >>> arithmetic_right_shift(0, 1)\n    '0b00'\n    >>> arithmetic_right_shift(1, 1)\n    '0b00'\n    >>> arithmetic_right_shift(-1, 1)\n    '0b11'\n    >>> arithmetic_right_shift(17, 2)\n    '0b000100'\n    >>> arithmetic_right_shift(-17, 2)\n    '0b111011'\n    >>> arithmetic_right_shift(-1983, 4)\n    '0b111110000100'\n    \"\"\""
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 20,
                                            "end_token": 54,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 21,
                                                    "end_token": 24,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 21,
                                                            "end_token": 21,
                                                            "children": [],
                                                            "label": "number"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 24,
                                                            "end_token": 24,
                                                            "children": [],
                                                            "label": "0"
                                                        }
                                                    ],
                                                    "label": "number >= 0"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 25,
                                                    "end_token": 54,
                                                    "children": [
                                                        {
                                                            "type": "comment",
                                                            "start_token": 26,
                                                            "end_token": 33,
                                                            "children": [],
                                                            "label": "# Get binary representation of positive number\n"
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 34,
                                                            "end_token": 53,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 34,
                                                                    "end_token": 34,
                                                                    "children": [],
                                                                    "label": "binary_number"
                                                                },
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "start_token": 36,
                                                                    "end_token": 53,
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 36,
                                                                            "end_token": 36,
                                                                            "children": [],
                                                                            "label": "\"0\""
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "start_token": 38,
                                                                            "end_token": 53,
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 38,
                                                                                    "end_token": 44,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 38,
                                                                                            "end_token": 38,
                                                                                            "children": [],
                                                                                            "label": "str"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 39,
                                                                                            "end_token": 43,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "start_token": 40,
                                                                                                    "end_token": 42,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 40,
                                                                                                            "end_token": 40,
                                                                                                            "children": [],
                                                                                                            "label": "bin"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "start_token": 41,
                                                                                                            "end_token": 42,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 42,
                                                                                                                    "end_token": 42,
                                                                                                                    "children": [],
                                                                                                                    "label": "number"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "(number"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "bin(number"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(bin(number)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "str(bin(number))"
                                                                                },
                                                                                {
                                                                                    "type": "slice",
                                                                                    "start_token": 46,
                                                                                    "end_token": 53,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 51,
                                                                                            "end_token": 51,
                                                                                            "children": [],
                                                                                            "label": "2"
                                                                                        }
                                                                                    ],
                                                                                    "label": "strip(\"-\")[2:]"
                                                                                }
                                                                            ],
                                                                            "label": "str(bin(number)).strip(\"-\")[2:]"
                                                                        }
                                                                    ],
                                                                    "label": "\"0\" + str(bin(number)).strip(\"-\")[2:]"
                                                                }
                                                            ],
                                                            "label": "binary_number = \"0\" + str(bin(number)).strip(\"-\")[2:]"
                                                        }
                                                    ],
                                                    "label": ":  # Get binary representation of positive number\n        binary_number = \"0\" + str(bin(number)).strip(\"-\")[2:]\n"
                                                }
                                            ],
                                            "label": "if number >= 0:  # Get binary representation of positive number\n        binary_number = \"0\" + str(bin(number)).strip(\"-\")[2:]\n"
                                        },
                                        {
                                            "type": "else_clause",
                                            "start_token": 55,
                                            "end_token": 108,
                                            "children": [
                                                {
                                                    "type": "comment",
                                                    "start_token": 57,
                                                    "end_token": 67,
                                                    "children": [],
                                                    "label": "# Get binary (2's complement) representation of negative number\n        binary_number_length = len(bin(number)[3:])  # Find 2's complement of number\n"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "start_token": 68,
                                                    "end_token": 87,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 68,
                                                            "end_token": 68,
                                                            "children": [],
                                                            "label": "binary_number"
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "start_token": 70,
                                                            "end_token": 87,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 70,
                                                                    "end_token": 83,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 70,
                                                                            "end_token": 70,
                                                                            "children": [],
                                                                            "label": "bin"
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 71,
                                                                            "end_token": 83,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 72,
                                                                                    "end_token": 82,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "start_token": 72,
                                                                                            "end_token": 74,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 72,
                                                                                                    "end_token": 72,
                                                                                                    "children": [],
                                                                                                    "label": "abs"
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "start_token": 73,
                                                                                                    "end_token": 74,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 74,
                                                                                                            "end_token": 74,
                                                                                                            "children": [],
                                                                                                            "label": "number"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "(number"
                                                                                                }
                                                                                            ],
                                                                                            "label": "abs(number"
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "start_token": 76,
                                                                                            "end_token": 82,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "start_token": 77,
                                                                                                    "end_token": 77,
                                                                                                    "children": [],
                                                                                                    "label": "("
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "start_token": 79,
                                                                                                    "end_token": 82,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "start_token": 81,
                                                                                                            "end_token": 81,
                                                                                                            "children": [],
                                                                                                            "label": "binary_number_length"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 82,
                                                                                                            "end_token": 82,
                                                                                                            "children": [],
                                                                                                            "label": ")"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "<< binary_number_length)"
                                                                                                }
                                                                                            ],
                                                                                            "label": "- (1 << binary_number_length)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "abs(number) - (1 << binary_number_length)"
                                                                                }
                                                                            ],
                                                                            "label": "(abs(number) - (1 << binary_number_length))"
                                                                        }
                                                                    ],
                                                                    "label": "bin(abs(number) - (1 << binary_number_length))"
                                                                },
                                                                {
                                                                    "type": "slice",
                                                                    "start_token": 84,
                                                                    "end_token": 87,
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 85,
                                                                            "end_token": 85,
                                                                            "children": [],
                                                                            "label": "3"
                                                                        }
                                                                    ],
                                                                    "label": "[3:]"
                                                                }
                                                            ],
                                                            "label": "bin(abs(number) - (1 << binary_number_length))[3:]"
                                                        }
                                                    ],
                                                    "label": "binary_number = bin(abs(number) - (1 << binary_number_length))[3:]"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "start_token": 89,
                                                    "end_token": 108,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 89,
                                                            "end_token": 89,
                                                            "children": [],
                                                            "label": "binary_number"
                                                        },
                                                        {
                                                            "type": "concatenated_string",
                                                            "start_token": 91,
                                                            "end_token": 108,
                                                            "children": [
                                                                {
                                                                    "type": "string_content",
                                                                    "start_token": 91,
                                                                    "end_token": 93,
                                                                    "children": [],
                                                                    "label": "(\n            \"1\""
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 95,
                                                                    "end_token": 106,
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 95,
                                                                            "end_token": 95,
                                                                            "children": [],
                                                                            "label": "\"0\""
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "start_token": 96,
                                                                            "end_token": 100,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "start_token": 98,
                                                                                    "end_token": 99,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 98,
                                                                                            "end_token": 98,
                                                                                            "children": [],
                                                                                            "label": "binary_number_length"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 99,
                                                                                            "end_token": 99,
                                                                                            "children": [],
                                                                                            "label": "-"
                                                                                        }
                                                                                    ],
                                                                                    "label": "binary_number_length -"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 100,
                                                                                    "end_token": 103,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 100,
                                                                                            "end_token": 100,
                                                                                            "children": [],
                                                                                            "label": "len"
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 101,
                                                                                            "end_token": 103,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 102,
                                                                                                    "end_token": 102,
                                                                                                    "children": [],
                                                                                                    "label": "binary_number"
                                                                                                }
                                                                                            ],
                                                                                            "label": "(binary_number)"
                                                                                        }
                                                                                    ],
                                                                                    "label": "len(binary_number)"
                                                                                }
                                                                            ],
                                                                            "label": "* (binary_number_length - len"
                                                                        }
                                                                    ],
                                                                    "label": "\"0\" * (binary_number_length - len(binary_number)) + binary_number"
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "start_token": 106,
                                                                    "end_token": 106,
                                                                    "children": [],
                                                                    "label": "binary_number"
                                                                }
                                                            ],
                                                            "label": "(\n            \"1\" + \"0\" * (binary_number_length - len(binary_number)) + binary_number\n        )"
                                                        }
                                                    ],
                                                    "label": "binary_number = (\n            \"1\" + \"0\" * (binary_number_length - len(binary_number)) + binary_number\n        )"
                                                }
                                            ],
                                            "label": "else:  # Get binary (2's complement) representation of negative number\n        binary_number_length = len(bin(number)[3:])  # Find 2's complement of number\n        binary_number = bin(abs(number) - (1 << binary_number_length))[3:]\n        binary_number = (\n            \"1\" + \"0\" * (binary_number_length - len(binary_number)) + binary_number\n        )"
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 111,
                                            "end_token": 129,
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 112,
                                                    "end_token": 118,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 112,
                                                            "end_token": 112,
                                                            "children": [],
                                                            "label": "shift_amount"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 115,
                                                            "end_token": 117,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 115,
                                                                    "end_token": 115,
                                                                    "children": [],
                                                                    "label": "len"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 116,
                                                                    "end_token": 117,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 117,
                                                                            "end_token": 117,
                                                                            "children": [],
                                                                            "label": "binary_number"
                                                                        }
                                                                    ],
                                                                    "label": "(binary_number"
                                                                }
                                                            ],
                                                            "label": "len(binary_number"
                                                        }
                                                    ],
                                                    "label": "shift_amount >= len(binary_number)"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 119,
                                                    "end_token": 129,
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 121,
                                                            "end_token": 133,
                                                            "children": [
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "start_token": 121,
                                                                    "end_token": 133,
                                                                    "children": [
                                                                        {
                                                                            "type": "string_content",
                                                                            "start_token": 121,
                                                                            "end_token": 122,
                                                                            "children": [],
                                                                            "label": "return \"0b\""
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "start_token": 124,
                                                                            "end_token": 132,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 124,
                                                                                    "end_token": 124,
                                                                                    "children": [],
                                                                                    "label": "binary_number"
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 127,
                                                                                    "end_token": 132,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 129,
                                                                                            "end_token": 131,
                                                                                            "children": [],
                                                                                            "label": "len(binary_number"
                                                                                        }
                                                                                    ],
                                                                                    "label": "] * len(binary_number)"
                                                                                }
                                                                            ],
                                                                            "label": "binary_number[0] * len(binary_number)"
                                                                        }
                                                                    ],
                                                                    "label": "return \"0b\" + binary_number[0] * len(binary_number)\n"
                                                                }
                                                            ],
                                                            "label": "return \"0b\" + binary_number[0] * len(binary_number)\n"
                                                        }
                                                    ],
                                                    "label": ":\n        return \"0b\" + binary_number[0] * len"
                                                }
                                            ],
                                            "label": "if shift_amount >= len(binary_number):\n        return \"0b\" + binary_number[0] * len"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 134,
                                            "end_token": 159,
                                            "children": [
                                                {
                                                    "type": "concatenated_string",
                                                    "start_token": 134,
                                                    "end_token": 159,
                                                    "children": [
                                                        {
                                                            "type": "string_content",
                                                            "start_token": 137,
                                                            "end_token": 138,
                                                            "children": [],
                                                            "label": "\"0b\"\n"
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "start_token": 140,
                                                            "end_token": 146,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 140,
                                                                    "end_token": 140,
                                                                    "children": [],
                                                                    "label": "binary_number"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 145,
                                                                    "end_token": 145,
                                                                    "children": [],
                                                                    "label": "shift_amount"
                                                                }
                                                            ],
                                                            "label": "binary_number[0] * shift_amount\n"
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "start_token": 148,
                                                            "end_token": 157,
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 150,
                                                                    "end_token": 150,
                                                                    "children": [],
                                                                    "label": ":"
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 153,
                                                                    "end_token": 156,
                                                                    "children": [
                                                                        {
                                                                            "type": "len",
                                                                            "start_token": 153,
                                                                            "end_token": 154,
                                                                            "children": [
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 154,
                                                                                    "end_token": 155,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 155,
                                                                                            "end_token": 155,
                                                                                            "children": [],
                                                                                            "label": "-"
                                                                                        }
                                                                                    ],
                                                                                    "label": ") -"
                                                                                }
                                                                            ],
                                                                            "label": "binary_number)"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 156,
                                                                            "end_token": 156,
                                                                            "children": [],
                                                                            "label": "shift_amount"
                                                                        }
                                                                    ],
                                                                    "label": "binary_number) - shift_amount"
                                                                }
                                                            ],
                                                            "label": "binary_number[: len(binary_number) - shift_amount]"
                                                        }
                                                    ],
                                                    "label": "return (\n        \"0b\"\n        + binary_number[0] * shift_amount\n        + binary_number[: len(binary_number) - shift_amount]\n    )"
                                                }
                                            ],
                                            "label": "return (\n        \"0b\"\n        + binary_number[0] * shift_amount\n        + binary_number[: len(binary_number) - shift_amount]\n    )"
                                        }
                                    ],
                                    "label": "\n    \"\"\"\n    Take in 2 integers.\n    'number' is the integer to be arithmetically right shifted 'shift_amount' times.\n    i.e. (number >> shift_amount)\n    Return the shifted binary representation.\n\n    >>> arithmetic_right_shift(0, 1)\n    '0b00'\n    >>> arithmetic_right_shift(1, 1)\n    '0b00'\n    >>> arithmetic_right_shift(-1, 1)\n    '0b11'\n    >>> arithmetic_right_shift(17, 2)\n    '0b000100'\n    >>> arithmetic_right_shift(-17, 2)\n    '0b111011'\n    >>> arithmetic_right_shift(-1983, 4)\n    '0b111110000100'\n    \"\"\"\n    if number >= 0:  # Get binary representation of positive number\n        binary_number = \"0\" + str(bin(number)).strip(\"-\")[2:]\n    else:  # Get binary (2's complement) representation of negative number\n        binary_number_length = len(bin(number)[3:])  # Find 2's complement of number\n        binary_number = bin(abs(number) - (1 << binary_number_length))[3:]\n        binary_number = (\n            \"1\" + \"0\" * (binary_number_length - len(binary_number)) + binary_number\n        )\n\n    if shift_amount >= len(binary_number):\n        return \"0b\" + binary_number[0] * len(binary_number)\n    return (\n        \"0b\"\n        + binary_number[0] * shift_amount\n        + binary_number[: len(binary_number) - shift_amount]\n    )"
                                }
                            ],
                            "label": "def arithmetic_right_shift(number: int, shift_amount: int) -> str:\n    \"\"\"\n    Take in 2 integers.\n    'number' is the integer to be arithmetically right shifted 'shift_amount' times.\n    i.e. (number >> shift_amount)\n    Return the shifted binary representation.\n\n    >>> arithmetic_right_shift(0, 1)\n    '0b00'\n    >>> arithmetic_right_shift(1, 1)\n    '0b00'\n    >>> arithmetic_right_shift(-1, 1)\n    '0b11'\n    >>> arithmetic_right_shift(17, 2)\n    '0b000100'\n    >>> arithmetic_right_shift(-17, 2)\n    '0b111011'\n    >>> arithmetic_right_shift(-1983, 4)\n    '0b111110000100'\n    \"\"\"\n    if number >= 0:  # Get binary representation of positive number\n        binary_number = \"0\" + str(bin(number)).strip(\"-\")[2:]\n    else:  # Get binary (2's complement) representation of negative number\n        binary_number_length = len(bin(number)[3:])  # Find 2's complement of number\n        binary_number = bin(abs(number) - (1 << binary_number_length))[3:]\n        binary_number = (\n            \"1\" + \"0\" * (binary_number_length - len(binary_number)) + binary_number\n        )\n\n    if shift_amount >= len(binary_number):\n        return \"0b\" + binary_number[0] * len(binary_number)\n    return (\n        \"0b\"\n        + binary_number[0] * shift_amount\n        + binary_number[: len(binary_number) - shift_amount]\n    )"
                        }
                    ],
                    "label": "def arithmetic_right_shift(number: int, shift_amount: int) -> str:\n    \"\"\"\n    Take in 2 integers.\n    'number' is the integer to be arithmetically right shifted 'shift_amount' times.\n    i.e. (number >> shift_amount)\n    Return the shifted binary representation.\n\n    >>> arithmetic_right_shift(0, 1)\n    '0b00'\n    >>> arithmetic_right_shift(1, 1)\n    '0b00'\n    >>> arithmetic_right_shift(-1, 1)\n    '0b11'\n    >>> arithmetic_right_shift(17, 2)\n    '0b000100'\n    >>> arithmetic_right_shift(-17, 2)\n    '0b111011'\n    >>> arithmetic_right_shift(-1983, 4)\n    '0b111110000100'\n    \"\"\"\n    if number >= 0:  # Get binary representation of positive number\n        binary_number = \"0\" + str(bin(number)).strip(\"-\")[2:]\n    else:  # Get binary (2's complement) representation of negative number\n        binary_number_length = len(bin(number)[3:])  # Find 2's complement of number\n        binary_number = bin(abs(number) - (1 << binary_number_length))[3:]\n        binary_number = (\n            \"1\" + \"0\" * (binary_number_length - len(binary_number)) + binary_number\n        )\n\n    if shift_amount >= len(binary_number):\n        return \"0b\" + binary_number[0] * len(binary_number)\n    return (\n        \"0b\"\n        + binary_number[0] * shift_amount\n        + binary_number[: len(binary_number) - shift_amount]\n    )"
                }
            ]
        }
    ],
    "label": ""
}