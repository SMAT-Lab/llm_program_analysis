{
    "type": "module",
    "start_token": 0,
    "end_token": 18,
    "children": [
        {
            "type": "if_statement",
            "start_token": 2,
            "end_token": 17,
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 2,
                    "end_token": 7,
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 2,
                            "end_token": 6,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 3,
                                    "end_token": 3,
                                    "children": [],
                                    "label": "__name__"
                                },
                                {
                                    "type": "string",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": [],
                                    "label": "\"__main__\""
                                }
                            ],
                            "label": "if __name__ == \"__main__\""
                        }
                    ],
                    "label": "if __name__ == \"__main__\":"
                },
                {
                    "type": "block",
                    "start_token": 8,
                    "end_token": 17,
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 9,
                            "end_token": 10,
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "start_token": 10,
                                    "end_token": 10,
                                    "children": [],
                                    "label": "doctest"
                                }
                            ],
                            "label": "import doctest"
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 13,
                            "end_token": 17,
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 13,
                                    "end_token": 17,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 13,
                                            "end_token": 15,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 13,
                                                    "end_token": 13,
                                                    "children": [],
                                                    "label": "doctest"
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 15,
                                                    "end_token": 15,
                                                    "children": [],
                                                    "label": "testmod"
                                                }
                                            ],
                                            "label": "doctest.testmod"
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 16,
                                            "end_token": 17,
                                            "children": [],
                                            "label": "()"
                                        }
                                    ],
                                    "label": "doctest.testmod()"
                                }
                            ],
                            "label": "doctest.testmod()"
                        }
                    ],
                    "label": "\n    import doctest\n\n    doctest.testmod()"
                }
            ],
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
        },
        {
            "type": "function_placeholder",
            "name": "excess_3_code",
            "start_line": 1,
            "end_line": 21,
            "children": [
                {
                    "type": "module",
                    "start_token": 0,
                    "end_token": 63,
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 0,
                            "end_token": 63,
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 1,
                                    "end_token": 1,
                                    "label": "excess_3_code"
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 2,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 3,
                                            "end_token": 5,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 3,
                                                    "end_token": 3,
                                                    "label": "number"
                                                },
                                                {
                                                    "type": "type",
                                                    "start_token": 5,
                                                    "end_token": 5,
                                                    "label": "int"
                                                }
                                            ],
                                            "label": "number: int"
                                        }
                                    ],
                                    "label": "(number: int)"
                                },
                                {
                                    "type": "type",
                                    "start_token": 8,
                                    "end_token": 9,
                                    "label": "> str"
                                },
                                {
                                    "type": "block",
                                    "start_token": 10,
                                    "end_token": 63,
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 12,
                                            "end_token": 14,
                                            "children": [
                                                {
                                                    "type": "string_content",
                                                    "start_token": 13,
                                                    "end_token": 13,
                                                    "label": "\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \""
                                                }
                                            ],
                                            "label": "\"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\""
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 16,
                                            "end_token": 18,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 16,
                                                    "end_token": 16,
                                                    "label": "num"
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 18,
                                                    "end_token": 18,
                                                    "label": "\"\""
                                                }
                                            ],
                                            "label": "num = \"\""
                                        },
                                        {
                                            "type": "for_statement",
                                            "start_token": 20,
                                            "end_token": 58,
                                            "children": [
                                                {
                                                    "type": "for_in_clause",
                                                    "start_token": 20,
                                                    "end_token": 31,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 21,
                                                            "end_token": 21,
                                                            "label": "digit"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "start_token": 23,
                                                            "end_token": 31,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 23,
                                                                    "end_token": 23,
                                                                    "label": "str"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 24,
                                                                    "end_token": 30,
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 25,
                                                                            "end_token": 30,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 25,
                                                                                    "end_token": 25,
                                                                                    "label": "max"
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 26,
                                                                                    "end_token": 29,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "label": "0"
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 29,
                                                                                            "end_token": 29,
                                                                                            "label": "number"
                                                                                        }
                                                                                    ],
                                                                                    "label": "(0, number"
                                                                                }
                                                                            ],
                                                                            "label": "max(0, number)"
                                                                        }
                                                                    ],
                                                                    "label": "(max(0, number)"
                                                                }
                                                            ],
                                                            "label": "str(max(0, number))"
                                                        }
                                                    ],
                                                    "label": "for digit in str(max(0, number))"
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 32,
                                                    "end_token": 58,
                                                    "children": [
                                                        {
                                                            "type": "augmented_assignment",
                                                            "start_token": 34,
                                                            "end_token": 57,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 34,
                                                                    "end_token": 34,
                                                                    "label": "num"
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 37,
                                                                    "end_token": 57,
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 37,
                                                                            "end_token": 55,
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "start_token": 37,
                                                                                    "end_token": 52,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "start_token": 39,
                                                                                            "end_token": 47,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 39,
                                                                                                    "end_token": 39,
                                                                                                    "label": "bin"
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "start_token": 40,
                                                                                                    "end_token": 46,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "start_token": 41,
                                                                                                            "end_token": 45,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "start_token": 41,
                                                                                                                    "end_token": 44,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "start_token": 41,
                                                                                                                            "end_token": 41,
                                                                                                                            "label": "int"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "start_token": 42,
                                                                                                                            "end_token": 43,
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "start_token": 43,
                                                                                                                                    "end_token": 43,
                                                                                                                                    "label": "digit"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "label": "(digit"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "label": "int(digit)"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "integer",
                                                                                                                    "start_token": 46,
                                                                                                                    "end_token": 46,
                                                                                                                    "label": "3"
                                                                                                                }
                                                                                                            ],
                                                                                                            "label": "int(digit) +"
                                                                                                        }
                                                                                                    ],
                                                                                                    "label": "(int(digit) + 3"
                                                                                                }
                                                                                            ],
                                                                                            "label": "bin(int(digit) + 3)"
                                                                                        },
                                                                                        {
                                                                                            "type": "slice",
                                                                                            "start_token": 50,
                                                                                            "end_token": 51,
                                                                                            "label": "2:"
                                                                                        }
                                                                                    ],
                                                                                    "label": "str(bin(int(digit) + 3))[2:]"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 54,
                                                                                    "end_token": 54,
                                                                                    "label": "zfill"
                                                                                }
                                                                            ],
                                                                            "label": "str(bin(int(digit) + 3))[2:].zfill("
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 55,
                                                                            "end_token": 56,
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 56,
                                                                                    "end_token": 56,
                                                                                    "label": "4"
                                                                                }
                                                                            ],
                                                                            "label": "(4"
                                                                        }
                                                                    ],
                                                                    "label": "str(bin(int(digit) + 3))[2:].zfill(4)"
                                                                }
                                                            ],
                                                            "label": "num += str(bin(int(digit) + 3))[2:].zfill(4)"
                                                        }
                                                    ],
                                                    "label": ":\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n"
                                                }
                                            ],
                                            "label": "for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n"
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 59,
                                            "end_token": 63,
                                            "children": [
                                                {
                                                    "type": "concatenated_string",
                                                    "start_token": 60,
                                                    "end_token": 62,
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 60,
                                                            "end_token": 60,
                                                            "label": "\"0b\""
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 62,
                                                            "end_token": 62,
                                                            "label": "num"
                                                        }
                                                    ],
                                                    "label": "\"0b\" + num"
                                                }
                                            ],
                                            "label": "return \"0b\" + num\n"
                                        }
                                    ],
                                    "label": ":\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num\n"
                                }
                            ],
                            "label": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num\n"
                        }
                    ],
                    "label": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num\n"
                }
            ]
        }
    ],
    "label": "\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n"
}