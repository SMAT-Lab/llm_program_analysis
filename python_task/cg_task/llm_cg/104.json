{
    "main": [],
    "AgentQueryError": [],
    "TopAgentsDBResponse": [],
    "FeaturedAgentResponse": [],
    "delete_agent": [
        "AgentQueryError",
        "prisma.errors.PrismaError",
        "prisma.models.Agents.prisma"
    ],
    "create_agent_entry": [
        "AgentQueryError",
        "prisma.errors.PrismaError",
        "prisma.models.Agents.prisma"
    ],
    "update_agent_entry": [
        "AgentQueryError",
        "prisma.errors.PrismaError",
        "datetime.datetime.now",
        "prisma.models.Agents.prisma"
    ],
    "get_agents": [
        "AgentQueryError",
        "prisma.errors.PrismaError",
        "fuzzywuzzy.fuzz.partial_ratio",
        "prisma.models.Agents.prisma"
    ],
    "get_agent_details": [
        "AgentQueryError",
        "prisma.errors.PrismaError",
        "prisma.models.Agents.prisma"
    ],
    "search_db": [
        "AgentQueryError",
        "market.model.ListResponse",
        "market.utils.extension_types",
        "prisma.errors.PrismaError",
        "prisma.client.get_client"
    ],
    "get_top_agents_by_downloads": [
        "prisma.errors.PrismaError",
        "prisma.models.AnalyticsTracker.prisma",
        "market.model.ListResponse"
    ],
    "set_agent_featured": [
        "AgentQueryError",
        "prisma.models.FeaturedAgent.prisma",
        "prisma.errors.PrismaError",
        "prisma.models.Agents.prisma"
    ],
    "get_featured_agents": [
        "prisma.models.FeaturedAgent.prisma",
        "prisma.errors.PrismaError",
        "FeaturedAgentResponse"
    ],
    "remove_featured_category": [
        "AgentQueryError",
        "prisma.models.FeaturedAgent.prisma",
        "prisma.errors.PrismaError"
    ],
    "add_featured_category": [
        "AgentQueryError",
        "prisma.models.FeaturedAgent.prisma",
        "prisma.errors.PrismaError"
    ],
    "get_agent_featured": [
        "AgentQueryError",
        "prisma.models.FeaturedAgent.prisma",
        "prisma.errors.PrismaError"
    ],
    "get_not_featured_agents": [
        "prisma.models.Agents",
        "prisma.errors.PrismaError",
        "prisma.client.get_client"
    ],
    "get_all_categories": [
        "market.model.CategoriesResponse",
        "prisma.errors.PrismaError",
        "prisma.models.Agents.prisma"
    ],
    "create_agent_installed_event": [
        "AgentQueryError",
        "prisma.models.InstallTracker.prisma",
        "prisma.errors.PrismaError"
    ]
}