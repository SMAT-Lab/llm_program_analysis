{
    "main": [
        "IntegrationCredentialsManager",
        "logging.getLogger",
        "Settings",
        "APIRouter"
    ],
    "LoginResponse": [],
    "CredentialsMetaResponse": [],
    "CredentialsDeletionResponse": [],
    "CredentialsDeletionNeedsConfirmationResponse": [],
    "login": [
        "IntegrationCredentialsManager.store.store_state_token",
        "_get_provider_oauth_handler",
        "handler.get_login_url"
    ],
    "callback": [
        "creds_manager.create",
        "logging.getLogger.warning",
        "CredentialsMetaResponse",
        "handler.handle_default_scopes",
        "_get_provider_oauth_handler",
        "creds_manager.store.get_any_valid_scopes_from_state_token",
        "logging.getLogger.debug",
        "IntegrationCredentialsManager.store.verify_state_token",
        "handler.exchange_code_for_tokens"
    ],
    "list_credentials": [
        "IntegrationCredentialsManager.store.get_all_creds"
    ],
    "list_credentials_by_provider": [
        "IntegrationCredentialsManager.store.get_creds_by_provider"
    ],
    "get_credential": [
        "IntegrationCredentialsManager.get",
        "HTTPException"
    ],
    "create_api_key_credentials": [
        "HTTPException",
        "APIKeyCredentials"
    ],
    "delete_credentials": [
        "HTTPException",
        "remove_all_webhooks_for_credentials",
        "_get_provider_oauth_handler",
        "creds_manager.delete",
        "IntegrationCredentialsManager.store.get_creds_by_id"
    ],
    "webhook_ingress_generic": [
        "WEBHOOK_MANAGERS_BY_NAME",
        "publish_webhook_event",
        "logging.getLogger.debug",
        "get_service_client",
        "get_webhook"
    ],
    "webhook_ping": [
        "WEBHOOK_MANAGERS_BY_NAME",
        "get_webhook"
    ],
    "remove_all_webhooks_for_credentials": [
        "get_all_webhooks_by_creds",
        "NeedConfirmation",
        "WEBHOOK_MANAGERS_BY_NAME",
        "set_node_webhook",
        "logging.getLogger.error"
    ],
    "_get_provider_oauth_handler": [
        "HTTPException",
        "HANDLERS_BY_NAME",
        "getattr"
    ]
}