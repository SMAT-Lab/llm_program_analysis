{
    "main": [],
    "mock_settings": [
        "Settings",
        "monkeypatch.setattr"
    ],
    "mock_storage_client": [
        "unittest.mock.MagicMock",
        "unittest.mock.MagicMock",
        "unittest.mock.MagicMock",
        "mocker.patch"
    ],
    "test_upload_media_success": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "backend.server.v2.store.media.upload_media",
        "<builtin>.assert",
        "mock_storage_client.bucket",
        "mock_storage_client.bucket.blob",
        "mock_storage_client.bucket.blob.upload_from_string.assert_called_once"
    ],
    "test_upload_media_invalid_type": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "pytest.raises",
        "backend.server.v2.store.exceptions.InvalidFileTypeError",
        "backend.server.v2.store.media.upload_media",
        "mock_storage_client.bucket",
        "mock_storage_client.bucket.blob",
        "mock_storage_client.bucket.blob.upload_from_string.assert_not_called"
    ],
    "test_upload_media_missing_credentials": [
        "Settings",
        "monkeypatch.setattr",
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "pytest.raises",
        "backend.server.v2.store.exceptions.StorageConfigError",
        "backend.server.v2.store.media.upload_media"
    ],
    "test_upload_media_video_type": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "backend.server.v2.store.media.upload_media",
        "<builtin>.assert",
        "mock_storage_client.bucket",
        "mock_storage_client.bucket.blob",
        "mock_storage_client.bucket.blob.upload_from_string.assert_called_once"
    ],
    "test_upload_media_file_too_large": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "pytest.raises",
        "backend.server.v2.store.exceptions.FileSizeTooLargeError",
        "backend.server.v2.store.media.upload_media"
    ],
    "test_upload_media_file_read_error": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "unittest.mock.AsyncMock",
        "pytest.raises",
        "backend.server.v2.store.exceptions.FileReadError",
        "backend.server.v2.store.media.upload_media"
    ],
    "test_upload_media_png_success": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "backend.server.v2.store.media.upload_media",
        "<builtin>.assert"
    ],
    "test_upload_media_gif_success": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "backend.server.v2.store.media.upload_media",
        "<builtin>.assert"
    ],
    "test_upload_media_webp_success": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "backend.server.v2.store.media.upload_media",
        "<builtin>.assert"
    ],
    "test_upload_media_webm_success": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "backend.server.v2.store.media.upload_media",
        "<builtin>.assert"
    ],
    "test_upload_media_mismatched_signature": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "pytest.raises",
        "backend.server.v2.store.exceptions.InvalidFileTypeError",
        "backend.server.v2.store.media.upload_media"
    ],
    "test_upload_media_invalid_signature": [
        "io.BytesIO",
        "fastapi.UploadFile",
        "starlette.datastructures.Headers",
        "pytest.raises",
        "backend.server.v2.store.exceptions.InvalidFileTypeError",
        "backend.server.v2.store.media.upload_media"
    ]
}