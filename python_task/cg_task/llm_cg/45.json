{
    "main": [
        "logging.getLogger"
    ],
    "APIKey": [],
    "APIKey.from_db": [
        "APIKeyError",
        "APIKeyPermission",
        "APIKeyStatus",
        "prisma.models.APIKey"
    ],
    "APIKeyWithoutHash": [],
    "APIKeyWithoutHash.from_db": [
        "APIKeyError",
        "APIKeyPermission",
        "APIKeyStatus"
    ],
    "generate_api_key": [
        "APIKeyCreateInput",
        "PrismaAPIKey.prisma().create",
        "APIKeyWithoutHash.from_db",
        "APIKeyError",
        "uuid.uuid4",
        "APIKeyManager.generate_api_key",
        "PrismaAPIKey.prisma",
        "APIKeyManager"
    ],
    "validate_api_key": [
        "APIKey.from_db",
        "PrismaAPIKey.prisma().find_first",
        "APIKeyValidationError",
        "APIKeyManager.verify_api_key",
        "PrismaAPIKey.prisma",
        "APIKeyManager"
    ],
    "revoke_api_key": [
        "APIKeyPermissionError",
        "PrismaAPIKey.prisma().update",
        "APIKeyStatus",
        "datetime.now",
        "datetime",
        "APIKeyUpdateInput",
        "APIKeyError",
        "APIKeyWithoutHash.from_db",
        "APIKeyNotFoundError",
        "timezone.utc",
        "PrismaAPIKey.prisma().find_unique",
        "PrismaAPIKey.prisma"
    ],
    "list_user_api_keys": [
        "APIKeyWhereInput",
        "PrismaAPIKey.prisma().find_many",
        "APIKeyWithoutHash.from_db",
        "APIKeyError",
        "PrismaAPIKey.prisma"
    ],
    "suspend_api_key": [
        "APIKeyPermissionError",
        "PrismaAPIKey.prisma().update",
        "APIKeyStatus",
        "APIKeyUpdateInput",
        "APIKeyError",
        "APIKeyWithoutHash.from_db",
        "APIKeyNotFoundError",
        "PrismaAPIKey.prisma().find_unique",
        "PrismaAPIKey.prisma"
    ],
    "has_permission": [],
    "get_api_key_by_id": [
        "APIKeyWhereInput",
        "PrismaAPIKey.prisma().find_first",
        "APIKeyError",
        "APIKeyWithoutHash.from_db",
        "PrismaAPIKey.prisma"
    ],
    "update_api_key_permissions": [
        "APIKeyPermissionError",
        "PrismaAPIKey.prisma().update",
        "APIKeyUpdateInput",
        "APIKeyError",
        "APIKeyWithoutHash.from_db",
        "APIKeyNotFoundError",
        "PrismaAPIKey.prisma().find_unique",
        "PrismaAPIKey.prisma"
    ],
    "APIKeyError": [],
    "APIKeyNotFoundError": [],
    "APIKeyPermissionError": [],
    "APIKeyValidationError": []
}