{
    "main": [],
    "APIKey": [
        "APIKeyStatus",
        "APIKeyPermission",
        "PrismaAPIKey",
        "APIKeyError",
        "logger.error"
    ],
    "APIKey.from_db": [
        "APIKeyStatus",
        "APIKeyPermission",
        "logger.error",
        "APIKeyError"
    ],
    "APIKeyWithoutHash": [
        "APIKeyStatus",
        "APIKeyPermission",
        "PrismaAPIKey",
        "APIKeyError",
        "logger.error"
    ],
    "APIKeyWithoutHash.from_db": [
        "APIKeyStatus",
        "APIKeyPermission",
        "logger.error",
        "APIKeyError"
    ],
    "generate_api_key": [
        "APIKeyManager",
        "uuid.uuid4",
        "PrismaAPIKey.prisma.create",
        "APIKeyCreateInput",
        "APIKeyWithoutHash.from_db",
        "PrismaError",
        "logger.error",
        "APIKeyError"
    ],
    "validate_api_key": [
        "APIKeyManager.PREFIX",
        "logger.warning",
        "APIKeyManager",
        "PrismaAPIKey.prisma.find_first",
        "APIKeyWhereInput",
        "APIKeyStatus",
        "APIKeyManager.verify_api_key",
        "APIKey.from_db",
        "logger.error",
        "APIKeyValidationError"
    ],
    "revoke_api_key": [
        "PrismaAPIKey.prisma.find_unique",
        "logger.error",
        "APIKeyError",
        "APIKeyNotFoundError",
        "APIKeyPermissionError",
        "APIKeyWhereUniqueInput",
        "PrismaAPIKey.prisma.update",
        "APIKeyUpdateInput",
        "datetime.now",
        "timezone.utc",
        "PrismaError"
    ],
    "list_user_api_keys": [
        "APIKeyWhereInput",
        "PrismaAPIKey.prisma.find_many",
        "APIKeyWithoutHash.from_db",
        "PrismaError",
        "logger.error",
        "APIKeyError"
    ],
    "suspend_api_key": [
        "PrismaAPIKey.prisma.find_unique",
        "logger.error",
        "APIKeyError",
        "APIKeyNotFoundError",
        "APIKeyPermissionError",
        "APIKeyWhereUniqueInput",
        "PrismaAPIKey.prisma.update",
        "APIKeyUpdateInput",
        "PrismaError"
    ],
    "has_permission": [
        "logger.error"
    ],
    "get_api_key_by_id": [
        "PrismaAPIKey.prisma.find_first",
        "APIKeyWhereInput",
        "APIKeyWithoutHash.from_db",
        "PrismaError",
        "logger.error",
        "APIKeyError"
    ],
    "update_api_key_permissions": [
        "PrismaAPIKey.prisma.find_unique",
        "logger.error",
        "APIKeyError",
        "APIKeyNotFoundError",
        "APIKeyPermissionError",
        "APIKeyWhereUniqueInput",
        "PrismaAPIKey.prisma.update",
        "APIKeyUpdateInput",
        "PrismaError"
    ]
}