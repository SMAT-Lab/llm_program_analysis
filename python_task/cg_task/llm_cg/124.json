{
    "main": [],
    "GithubWebhookType": [],
    "GithubWebhooksManager": [],
    "GithubWebhooksManager.validate_payload": [
        "request.headers.get",
        "HTTPException",
        "request.headers.get",
        "HTTPException",
        "request.body",
        "<builtin>.hmac.new",
        "webhook.secret.encode",
        "<builtin>.<iter>.hexdigest",
        "hmac.compare_digest",
        "HTTPException",
        "request.json",
        "payload.get"
    ],
    "GithubWebhooksManager.trigger_ping": [
        "HTTPException",
        "credentials.bearer",
        "requests.post",
        "response.status_code",
        "extract_github_error_msg",
        "ValueError"
    ],
    "GithubWebhooksManager._register_webhook": [
        "webhook_type.__eq__",
        "ValueError",
        "<builtin>.list",
        "<builtin>.<dict>.split",
        "credentials.bearer",
        "requests.post",
        "response.status_code",
        "extract_github_error_msg",
        "<builtin>.<string>.lower",
        "ValueError",
        "response.json",
        "response.json"
    ],
    "GithubWebhooksManager._deregister_webhook": [
        "self.WebhookType",
        "credentials.id",
        "ValueError",
        "credentials.bearer",
        "webhook_type.__eq__",
        "requests.delete",
        "response.status_code",
        "extract_github_error_msg",
        "ValueError"
    ],
    "extract_github_error_msg": [
        "response.json",
        "resp.get",
        "resp.get",
        "<builtin>.<list>.extend",
        "resp.get",
        "resp.get",
        "<builtin>.<dict>.get",
        "<builtin>.join"
    ]
}