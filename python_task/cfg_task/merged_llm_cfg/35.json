{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 32,
  "functions": [
    {
      "name": "test_type_conversion",
      "type": "function",
      "start_line": 4,
      "end_line": 32,
      "functions": [],
      "classes": [],
      "simplified_code": "def test_type_conversion():\n    assert convert(5.5, int) == 5\n    assert convert(\"5.5\", int) == 5\n    assert convert([1, 2, 3], int) == 3\n\n    assert convert(\"5.5\", float) == 5.5\n    assert convert(5, float) == 5.0\n\n    assert convert(\"True\", bool) is True\n    assert convert(\"False\", bool) is False\n\n    assert convert(5, str) == \"5\"\n    assert convert({\"a\": 1, \"b\": 2}, str) == '{\"a\": 1, \"b\": 2}'\n    assert convert([1, 2, 3], str) == \"[1, 2, 3]\"\n\n    assert convert(\"5\", list) == [\"5\"]\n    assert convert((1, 2, 3), list) == [1, 2, 3]\n    assert convert({1, 2, 3}, list) == [1, 2, 3]\n\n    assert convert(\"5\", dict) == {\"value\": 5}\n    assert convert('{\"a\": 1, \"b\": 2}', dict) == {\"a\": 1, \"b\": 2}\n    assert convert([1, 2, 3], dict) == {0: 1, 1: 2, 2: 3}\n    assert convert((1, 2, 3), dict) == {0: 1, 1: 2, 2: 3}\n\n    from typing import List\n\n    assert convert(\"5\", List[int]) == [5]\n    assert convert(\"[5,4,2]\", List[int]) == [5, 4, 2]\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
      "blocks": [
        {
          "id": 1,
          "label": "def test_type_conversion():\n    assert convert(5.5, int) == 5\n    assert convert(\"5.5\", int) == 5\n    assert convert([1, 2, 3], int) == 3\n\n    assert convert(\"5.5\", float) == 5.5\n    assert convert(5, float) == 5.0\n\n    assert convert(\"True\", bool) is True\n    assert convert(\"False\", bool) is False\n\n    assert convert(5, str) == \"5\"\n    assert convert({\"a\": 1, \"b\": 2}, str) == '{\"a\": 1, \"b\": 2}'\n    assert convert([1, 2, 3], str) == \"[1, 2, 3]\"\n\n    assert convert(\"5\", list) == [\"5\"]\n    assert convert((1, 2, 3), list) == [1, 2, 3]\n    assert convert({1, 2, 3}, list) == [1, 2, 3]\n\n    assert convert(\"5\", dict) == {\"value\": 5}\n    assert convert('{\"a\": 1, \"b\": 2}', dict) == {\"a\": 1, \"b\": 2}\n    assert convert([1, 2, 3], dict) == {0: 1, 1: 2, 2: 3}\n    assert convert((1, 2, 3), dict) == {0: 1, 1: 2, 2: 3}\n",
          "successors": [
            {
              "id": 3,
              "label": "    from typing import List\n    assert convert(\"5\", List[int]) == [5]\n    assert convert(\"[5,4,2]\", List[int]) == [5, 4, 2]\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "from backend.util.type import convert\n\n\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
  "blocks": [
    {
      "id": 1,
      "label": "from backend.util.type import convert\n\n\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
      "successors": []
    }
  ]
}