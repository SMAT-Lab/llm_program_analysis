{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 12,
  "functions": [],
  "classes": [
    {
      "name": "BelowLevelFilter",
      "type": "class",
      "start_line": 4,
      "end_line": 12,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 7,
          "end_line": 9,
          "functions": [],
          "classes": [],
          "simplified_code": "    def __init__(self, below_level: int):\n        super().__init__()\n        self.below_level = below_level",
          "blocks": [
            {
              "id": 1,
              "label": "super().__init__()\nself.below_level = below_level",
              "successors": []
            }
          ]
        },
        {
          "name": "filter",
          "type": "function",
          "start_line": 11,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": "    def filter(self, record: logging.LogRecord):\n        return record.levelno < self.below_level",
          "blocks": [
            {
              "id": 1,
              "label": "def filter(self, record: logging.LogRecord):\nreturn record.levelno < self.below_level",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "class BelowLevelFilter(logging.Filter):\n    \"\"\"Filter for logging levels below a certain threshold.\"\"\"\n\n        self.below_level = below_level\n\n        return record.levelno < self.below_level",
      "blocks": [
        {
          "id": 1,
          "label": "class BelowLevelFilter(logging.Filter):\n\"\"\"Filter for logging levels below a certain threshold.\"\"\"\nself.below_level = below_level\nreturn record.levelno < self.below_level",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "import logging\n\n\n        return record.levelno < self.below_level",
  "blocks": [
    {
      "id": 1,
      "label": "return record.levelno < self.below_level",
      "successors": []
    }
  ]
}