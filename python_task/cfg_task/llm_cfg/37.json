[
  {
    "decl_name": "GlobalBlock",
    "start_line": 0,
    "end_line": 11,
    "children": [],
    "code": "from datetime import datetime, timedelta\n\nfrom backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "GlobalBlock_1",
          "code": "from datetime import datetime, timedelta\n"
        },
        {
          "id": "GlobalBlock_2",
          "code": "from backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)\n"
        },
        {
          "id": "GlobalBlock_3",
          "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\n"
        },
        {
          "id": "GlobalBlock_4",
          "code": "from backend.data.model import SchemaField\n"
        },
        {
          "id": "GlobalBlock_5",
          "code": "from backend.util.request import requests\n"
        }
      ],
      "edges": [
        {
          "from": "GlobalBlock_1",
          "to": "GlobalBlock_2"
        },
        {
          "from": "GlobalBlock_2",
          "to": "GlobalBlock_3"
        },
        {
          "from": "GlobalBlock_3",
          "to": "GlobalBlock_4"
        },
        {
          "from": "GlobalBlock_4",
          "to": "GlobalBlock_5"
        }
      ]
    }
  },
  {
    "decl_name": "HubSpotEngagementBlock",
    "start_line": 12,
    "end_line": 121,
    "children": [
      {
        "decl_name": "HubSpotEngagementBlock.Input",
        "start_line": 13,
        "end_line": 30,
        "children": [],
        "code": "    class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (send_email, track_engagement)\",\n            default=\"send_email\",\n        )\n        email_data: dict = SchemaField(\n            description=\"Email data including recipient, subject, content\",\n            default={},\n        )\n        contact_id: str = SchemaField(\n            description=\"Contact ID for engagement tracking\", default=\"\"\n        )\n        timeframe_days: int = SchemaField(\n            description=\"Number of days to look back for engagement\",\n            default=30,\n            optional=True,\n        )\n",
        "cfg": {
          "nodes": [
            {
              "id": "HubSpotEngagementBlock.Input_1",
              "code": "class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n"
            },
            {
              "id": "HubSpotEngagementBlock.Input_2",
              "code": "        operation: str = SchemaField(\n            description=\"Operation to perform (send_email, track_engagement)\",\n            default=\"send_email\",\n        )\n"
            },
            {
              "id": "HubSpotEngagementBlock.Input_3",
              "code": "        email_data: dict = SchemaField(\n            description=\"Email data including recipient, subject, content\",\n            default={},\n        )\n"
            },
            {
              "id": "HubSpotEngagementBlock.Input_4",
              "code": "        contact_id: str = SchemaField(\n            description=\"Contact ID for engagement tracking\", default=\"\"\n        )\n"
            },
            {
              "id": "HubSpotEngagementBlock.Input_5",
              "code": "        timeframe_days: int = SchemaField(\n            description=\"Number of days to look back for engagement\",\n            default=30,\n            optional=True,\n        )\n"
            }
          ],
          "edges": [
            {
              "from": "HubSpotEngagementBlock.Input_1",
              "to": "HubSpotEngagementBlock.Input_2"
            },
            {
              "from": "HubSpotEngagementBlock.Input_2",
              "to": "HubSpotEngagementBlock.Input_3"
            },
            {
              "from": "HubSpotEngagementBlock.Input_3",
              "to": "HubSpotEngagementBlock.Input_4"
            },
            {
              "from": "HubSpotEngagementBlock.Input_4",
              "to": "HubSpotEngagementBlock.Input_5"
            }
          ]
        }
      },
      {
        "decl_name": "HubSpotEngagementBlock.Output",
        "start_line": 32,
        "end_line": 34,
        "children": [],
        "code": "    class Output(BlockSchema):\n        result: dict = SchemaField(description=\"Operation result\")\n        status: str = SchemaField(description=\"Operation status\")\n",
        "cfg": {
          "nodes": [
            {
              "id": "HubSpotEngagementBlock.Output_1",
              "code": "class Output(BlockSchema):\n        result: dict = SchemaField(description=\"Operation result\")\n        status: str = SchemaField(description=\"Operation status\")\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "HubSpotEngagementBlock.__init__",
        "start_line": 36,
        "end_line": 43,
        "children": [],
        "code": "    def __init__(self):\n        super().__init__(\n            id=\"c6524385-7d87-49d6-a470-248bd29ca765\",\n            description=\"Manages HubSpot engagements - sends emails and tracks engagement metrics\",\n            categories={BlockCategory.CRM, BlockCategory.COMMUNICATION},\n            input_schema=HubSpotEngagementBlock.Input,\n            output_schema=HubSpotEngagementBlock.Output,\n        )\n",
        "cfg": {
          "nodes": [
            {
              "id": "HubSpotEngagementBlock.__init___1",
              "code": "def __init__(self):\n        super().__init__(\n            id=\"c6524385-7d87-49d6-a470-248bd29ca765\",\n            description=\"Manages HubSpot engagements - sends emails and tracks engagement metrics\",\n            categories={BlockCategory.CRM, BlockCategory.COMMUNICATION},\n            input_schema=HubSpotEngagementBlock.Input,\n            output_schema=HubSpotEngagementBlock.Output,\n        )\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "HubSpotEngagementBlock.run",
        "start_line": 45,
        "end_line": 120,
        "children": [],
        "code": "    def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n        base_url = \"https://api.hubapi.com\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n        if input_data.operation == \"send_email\":\n            # Using the email send API\n            email_url = f\"{base_url}/crm/v3/objects/emails\"\n            email_data = {\n                \"properties\": {\n                    \"hs_timestamp\": datetime.now().isoformat(),\n                    \"hubspot_owner_id\": \"1\",  # This should be configurable\n                    \"hs_email_direction\": \"OUTBOUND\",\n                    \"hs_email_status\": \"SEND\",\n                    \"hs_email_subject\": input_data.email_data.get(\"subject\"),\n                    \"hs_email_text\": input_data.email_data.get(\"content\"),\n                    \"hs_email_to_email\": input_data.email_data.get(\"recipient\"),\n                }\n            }\n\n            response = requests.post(email_url, headers=headers, json=email_data)\n            result = response.json()\n            yield \"result\", result\n            yield \"status\", \"email_sent\"\n\n        elif input_data.operation == \"track_engagement\":\n            # Get engagement events for the contact\n            from_date = datetime.now() - timedelta(days=input_data.timeframe_days)\n            engagement_url = (\n                f\"{base_url}/crm/v3/objects/contacts/{input_data.contact_id}/engagement\"\n            )\n\n            params = {\"limit\": 100, \"after\": from_date.isoformat()}\n\n            response = requests.get(engagement_url, headers=headers, params=params)\n            engagements = response.json()\n\n            # Process engagement metrics\n            metrics = {\n                \"email_opens\": 0,\n                \"email_clicks\": 0,\n                \"email_replies\": 0,\n                \"last_engagement\": None,\n                \"engagement_score\": 0,\n            }\n\n            for engagement in engagements.get(\"results\", []):\n                eng_type = engagement.get(\"properties\", {}).get(\"hs_engagement_type\")\n                if eng_type == \"EMAIL\":\n                    metrics[\"email_opens\"] += 1\n                elif eng_type == \"EMAIL_CLICK\":\n                    metrics[\"email_clicks\"] += 1\n                elif eng_type == \"EMAIL_REPLY\":\n                    metrics[\"email_replies\"] += 1\n\n                # Update last engagement time\n                eng_time = engagement.get(\"properties\", {}).get(\"hs_timestamp\")\n                if eng_time and (\n                    not metrics[\"last_engagement\"]\n                    or eng_time > metrics[\"last_engagement\"]\n                ):\n                    metrics[\"last_engagement\"] = eng_time\n\n            # Calculate simple engagement score\n            metrics[\"engagement_score\"] = (\n                metrics[\"email_opens\"]\n                + metrics[\"email_clicks\"] * 2\n                + metrics[\"email_replies\"] * 3\n            )\n\n            yield \"result\", metrics\n            yield \"status\", \"engagement_tracked\"\n",
        "cfg": {
          "nodes": [
            {
              "id": "HubSpotEngagementBlock.run_1",
              "code": "def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_2",
              "code": "        base_url = \"https://api.hubapi.com\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_3",
              "code": "        if input_data.operation == \"send_email\":\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_4",
              "code": "            email_url = f\"{base_url}/crm/v3/objects/emails\"\n            email_data = {\n                \"properties\": {\n                    \"hs_timestamp\": datetime.now().isoformat(),\n                    \"hubspot_owner_id\": \"1\",  # This should be configurable\n                    \"hs_email_direction\": \"OUTBOUND\",\n                    \"hs_email_status\": \"SEND\",\n                    \"hs_email_subject\": input_data.email_data.get(\"subject\"),\n                    \"hs_email_text\": input_data.email_data.get(\"content\"),\n                    \"hs_email_to_email\": input_data.email_data.get(\"recipient\"),\n                }\n            }\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_5",
              "code": "            response = requests.post(email_url, headers=headers, json=email_data)\n            result = response.json()\n            yield \"result\", result\n            yield \"status\", \"email_sent\"\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_6",
              "code": "        elif input_data.operation == \"track_engagement\":\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_7",
              "code": "            from_date = datetime.now() - timedelta(days=input_data.timeframe_days)\n            engagement_url = (\n                f\"{base_url}/crm/v3/objects/contacts/{input_data.contact_id}/engagement\"\n            )\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_8",
              "code": "            params = {\"limit\": 100, \"after\": from_date.isoformat()}\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_9",
              "code": "            response = requests.get(engagement_url, headers=headers, params=params)\n            engagements = response.json()\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_10",
              "code": "            metrics = {\n                \"email_opens\": 0,\n                \"email_clicks\": 0,\n                \"email_replies\": 0,\n                \"last_engagement\": None,\n                \"engagement_score\": 0,\n            }\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_11",
              "code": "            for engagement in engagements.get(\"results\", []):\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_12",
              "code": "                eng_type = engagement.get(\"properties\", {}).get(\"hs_engagement_type\")\n                if eng_type == \"EMAIL\":\n                    metrics[\"email_opens\"] += 1\n                elif eng_type == \"EMAIL_CLICK\":\n                    metrics[\"email_clicks\"] += 1\n                elif eng_type == \"EMAIL_REPLY\":\n                    metrics[\"email_replies\"] += 1\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_13",
              "code": "                # Update last engagement time\n                eng_time = engagement.get(\"properties\", {}).get(\"hs_timestamp\")\n                if eng_time and (\n                    not metrics[\"last_engagement\"]\n                    or eng_time > metrics[\"last_engagement\"]\n                ):\n                    metrics[\"last_engagement\"] = eng_time\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_14",
              "code": "            # Calculate simple engagement score\n            metrics[\"engagement_score\"] = (\n                metrics[\"email_opens\"]\n                + metrics[\"email_clicks\"] * 2\n                + metrics[\"email_replies\"] * 3\n            )\n"
            },
            {
              "id": "HubSpotEngagementBlock.run_15",
              "code": "            yield \"result\", metrics\n            yield \"status\", \"engagement_tracked\"\n"
            }
          ],
          "edges": [
            {
              "from": "HubSpotEngagementBlock.run_1",
              "to": "HubSpotEngagementBlock.run_2"
            },
            {
              "from": "HubSpotEngagementBlock.run_2",
              "to": "HubSpotEngagementBlock.run_3"
            },
            {
              "from": "HubSpotEngagementBlock.run_3",
              "to": "HubSpotEngagementBlock.run_4"
            },
            {
              "from": "HubSpotEngagementBlock.run_3",
              "to": "HubSpotEngagementBlock.run_6"
            },
            {
              "from": "HubSpotEngagementBlock.run_4",
              "to": "HubSpotEngagementBlock.run_5"
            },
            {
              "from": "HubSpotEngagementBlock.run_6",
              "to": "HubSpotEngagementBlock.run_7"
            },
            {
              "from": "HubSpotEngagementBlock.run_7",
              "to": "HubSpotEngagementBlock.run_8"
            },
            {
              "from": "HubSpotEngagementBlock.run_8",
              "to": "HubSpotEngagementBlock.run_9"
            },
            {
              "from": "HubSpotEngagementBlock.run_9",
              "to": "HubSpotEngagementBlock.run_10"
            },
            {
              "from": "HubSpotEngagementBlock.run_10",
              "to": "HubSpotEngagementBlock.run_11"
            },
            {
              "from": "HubSpotEngagementBlock.run_11",
              "to": "HubSpotEngagementBlock.run_12"
            },
            {
              "from": "HubSpotEngagementBlock.run_12",
              "to": "HubSpotEngagementBlock.run_13"
            },
            {
              "from": "HubSpotEngagementBlock.run_13",
              "to": "HubSpotEngagementBlock.run_11"
            },
            {
              "from": "HubSpotEngagementBlock.run_13",
              "to": "HubSpotEngagementBlock.run_14"
            },
            {
              "from": "HubSpotEngagementBlock.run_14",
              "to": "HubSpotEngagementBlock.run_15"
            }
          ]
        }
      }
    ],
    "code": "class HubSpotEngagementBlock(Block):\n\n\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "HubSpotEngagementBlock_1",
          "code": "class HubSpotEngagementBlock(Block):\n"
        }
      ],
      "edges": []
    }
  }
]