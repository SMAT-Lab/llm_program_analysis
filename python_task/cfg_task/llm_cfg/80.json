[
  {
    "decl_name": "GlobalBlock",
    "start_line": 0,
    "end_line": 2,
    "children": [],
    "code": "import logging\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "GlobalBlock_1",
          "code": "import logging\n"
        }
      ],
      "edges": []
    }
  },
  {
    "decl_name": "BelowLevelFilter",
    "start_line": 3,
    "end_line": 12,
    "children": [
      {
        "decl_name": "BelowLevelFilter.__init__",
        "start_line": 6,
        "end_line": 8,
        "children": [],
        "code": "    def __init__(self, below_level: int):\n        super().__init__()\n        self.below_level = below_level\n",
        "cfg": {
          "nodes": [
            {
              "id": "BelowLevelFilter.__init___1",
              "code": "def __init__(self, below_level: int):\n        super().__init__()\n        self.below_level = below_level\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "BelowLevelFilter.filter",
        "start_line": 10,
        "end_line": 11,
        "children": [],
        "code": "    def filter(self, record: logging.LogRecord):\n        return record.levelno < self.below_level\n",
        "cfg": {
          "nodes": [
            {
              "id": "BelowLevelFilter.filter_1",
              "code": "def filter(self, record: logging.LogRecord):\n        return record.levelno < self.below_level\n"
            }
          ],
          "edges": []
        }
      }
    ],
    "code": "class BelowLevelFilter(logging.Filter):\n    \"\"\"Filter for logging levels below a certain threshold.\"\"\"\n\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "BelowLevelFilter_1",
          "code": "class BelowLevelFilter(logging.Filter):\n    \"\"\"Filter for logging levels below a certain threshold.\"\"\"\n"
        }
      ],
      "edges": []
    }
  }
]