[
  {
    "decl_name": "GlobalBlock",
    "start_line": 0,
    "end_line": 9,
    "children": [],
    "code": "from backend.blocks.jina._auth import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "GlobalBlock_1",
          "code": "from backend.blocks.jina._auth import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)\n"
        },
        {
          "id": "GlobalBlock_2",
          "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\n"
        },
        {
          "id": "GlobalBlock_3",
          "code": "from backend.data.model import SchemaField\n"
        },
        {
          "id": "GlobalBlock_4",
          "code": "from backend.util.request import requests\n"
        }
      ],
      "edges": [
        {
          "from": "GlobalBlock_1",
          "to": "GlobalBlock_2"
        },
        {
          "from": "GlobalBlock_2",
          "to": "GlobalBlock_3"
        },
        {
          "from": "GlobalBlock_3",
          "to": "GlobalBlock_4"
        }
      ]
    }
  },
  {
    "decl_name": "JinaEmbeddingBlock",
    "start_line": 10,
    "end_line": 42,
    "children": [
      {
        "decl_name": "JinaEmbeddingBlock.Input",
        "start_line": 11,
        "end_line": 17,
        "children": [],
        "code": "    class Input(BlockSchema):\n        texts: list = SchemaField(description=\"List of texts to embed\")\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n        model: str = SchemaField(\n            description=\"Jina embedding model to use\",\n            default=\"jina-embeddings-v2-base-en\",\n        )\n",
        "cfg": {
          "nodes": [
            {
              "id": "JinaEmbeddingBlock.Input_1",
              "code": "class Input(BlockSchema):\n        texts: list = SchemaField(description=\"List of texts to embed\")\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n        model: str = SchemaField(\n            description=\"Jina embedding model to use\",\n            default=\"jina-embeddings-v2-base-en\",\n        )\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "JinaEmbeddingBlock.Output",
        "start_line": 19,
        "end_line": 20,
        "children": [],
        "code": "    class Output(BlockSchema):\n        embeddings: list = SchemaField(description=\"List of embeddings\")\n",
        "cfg": {
          "nodes": [
            {
              "id": "JinaEmbeddingBlock.Output_1",
              "code": "class Output(BlockSchema):\n        embeddings: list = SchemaField(description=\"List of embeddings\")\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "JinaEmbeddingBlock.__init__",
        "start_line": 22,
        "end_line": 29,
        "children": [],
        "code": "    def __init__(self):\n        super().__init__(\n            id=\"7c56b3ab-62e7-43a2-a2dc-4ec4245660b6\",\n            description=\"Generates embeddings using Jina AI\",\n            categories={BlockCategory.AI},\n            input_schema=JinaEmbeddingBlock.Input,\n            output_schema=JinaEmbeddingBlock.Output,\n        )\n",
        "cfg": {
          "nodes": [
            {
              "id": "JinaEmbeddingBlock.__init___1",
              "code": "def __init__(self):\n        super().__init__(\n            id=\"7c56b3ab-62e7-43a2-a2dc-4ec4245660b6\",\n            description=\"Generates embeddings using Jina AI\",\n            categories={BlockCategory.AI},\n            input_schema=JinaEmbeddingBlock.Input,\n            output_schema=JinaEmbeddingBlock.Output,\n        )\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "JinaEmbeddingBlock.run",
        "start_line": 31,
        "end_line": 42,
        "children": [],
        "code": "    def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        url = \"https://api.jina.ai/v1/embeddings\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n        data = {\"input\": input_data.texts, \"model\": input_data.model}\n        response = requests.post(url, headers=headers, json=data)\n        embeddings = [e[\"embedding\"] for e in response.json()[\"data\"]]\n        yield \"embeddings\", embeddings\n",
        "cfg": {
          "nodes": [
            {
              "id": "JinaEmbeddingBlock.run_1",
              "code": "def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n"
            },
            {
              "id": "JinaEmbeddingBlock.run_2",
              "code": "        url = \"https://api.jina.ai/v1/embeddings\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n"
            },
            {
              "id": "JinaEmbeddingBlock.run_3",
              "code": "        data = {\"input\": input_data.texts, \"model\": input_data.model}\n"
            },
            {
              "id": "JinaEmbeddingBlock.run_4",
              "code": "        response = requests.post(url, headers=headers, json=data)\n"
            },
            {
              "id": "JinaEmbeddingBlock.run_5",
              "code": "        embeddings = [e[\"embedding\"] for e in response.json()[\"data\"]]\n"
            },
            {
              "id": "JinaEmbeddingBlock.run_6",
              "code": "        yield \"embeddings\", embeddings\n"
            }
          ],
          "edges": [
            {
              "from": "JinaEmbeddingBlock.run_1",
              "to": "JinaEmbeddingBlock.run_2"
            },
            {
              "from": "JinaEmbeddingBlock.run_2",
              "to": "JinaEmbeddingBlock.run_3"
            },
            {
              "from": "JinaEmbeddingBlock.run_3",
              "to": "JinaEmbeddingBlock.run_4"
            },
            {
              "from": "JinaEmbeddingBlock.run_4",
              "to": "JinaEmbeddingBlock.run_5"
            },
            {
              "from": "JinaEmbeddingBlock.run_5",
              "to": "JinaEmbeddingBlock.run_6"
            }
          ]
        }
      }
    ],
    "code": "class JinaEmbeddingBlock(Block):\n\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "JinaEmbeddingBlock_1",
          "code": "class JinaEmbeddingBlock(Block):\n"
        }
      ],
      "edges": []
    }
  }
]