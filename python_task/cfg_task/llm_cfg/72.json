[
  {
    "decl_name": "GlobalBlock",
    "start_line": 0,
    "end_line": 8,
    "children": [],
    "code": "import json\nfrom enum import Enum\nfrom typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "GlobalBlock_1",
          "code": "import json\nfrom enum import Enum\nfrom typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n"
        }
      ],
      "edges": []
    }
  },
  {
    "decl_name": "HttpMethod",
    "start_line": 9,
    "end_line": 16,
    "children": [],
    "code": "class HttpMethod(Enum):\n    GET = \"GET\"\n    POST = \"POST\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"\n    OPTIONS = \"OPTIONS\"\n    HEAD = \"HEAD\"\n",
    "cfg": {
      "nodes": [
        {
          "id": "HttpMethod_1",
          "code": "class HttpMethod(Enum):\n    GET = \"GET\"\n    POST = \"POST\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"\n    OPTIONS = \"OPTIONS\"\n    HEAD = \"HEAD\"\n"
        }
      ],
      "edges": []
    }
  },
  {
    "decl_name": "SendWebRequestBlock",
    "start_line": 19,
    "end_line": 77,
    "children": [
      {
        "decl_name": "SendWebRequestBlock.Input",
        "start_line": 20,
        "end_line": 41,
        "children": [],
        "code": "    class Input(BlockSchema):\n        url: str = SchemaField(\n            description=\"The URL to send the request to\",\n            placeholder=\"https://api.example.com\",\n        )\n        method: HttpMethod = SchemaField(\n            description=\"The HTTP method to use for the request\",\n            default=HttpMethod.POST,\n        )\n        headers: dict[str, str] = SchemaField(\n            description=\"The headers to include in the request\",\n            default={},\n        )\n        json_format: bool = SchemaField(\n            title=\"JSON format\",\n            description=\"Whether to send and receive body as JSON\",\n            default=True,\n        )\n        body: Any = SchemaField(\n            description=\"The body of the request\",\n            default=None,\n        )\n",
        "cfg": {
          "nodes": [
            {
              "id": "SendWebRequestBlock.Input_1",
              "code": "class Input(BlockSchema):\n"
            },
            {
              "id": "SendWebRequestBlock.Input_2",
              "code": "        url: str = SchemaField(\n            description=\"The URL to send the request to\",\n            placeholder=\"https://api.example.com\",\n        )\n"
            },
            {
              "id": "SendWebRequestBlock.Input_3",
              "code": "        method: HttpMethod = SchemaField(\n            description=\"The HTTP method to use for the request\",\n            default=HttpMethod.POST,\n        )\n"
            },
            {
              "id": "SendWebRequestBlock.Input_4",
              "code": "        headers: dict[str, str] = SchemaField(\n            description=\"The headers to include in the request\",\n            default={},\n        )\n"
            },
            {
              "id": "SendWebRequestBlock.Input_5",
              "code": "        json_format: bool = SchemaField(\n            title=\"JSON format\",\n            description=\"Whether to send and receive body as JSON\",\n            default=True,\n        )\n"
            },
            {
              "id": "SendWebRequestBlock.Input_6",
              "code": "        body: Any = SchemaField(\n            description=\"The body of the request\",\n            default=None,\n        )\n"
            }
          ],
          "edges": [
            {
              "from": "SendWebRequestBlock.Input_1",
              "to": "SendWebRequestBlock.Input_2"
            },
            {
              "from": "SendWebRequestBlock.Input_2",
              "to": "SendWebRequestBlock.Input_3"
            },
            {
              "from": "SendWebRequestBlock.Input_3",
              "to": "SendWebRequestBlock.Input_4"
            },
            {
              "from": "SendWebRequestBlock.Input_4",
              "to": "SendWebRequestBlock.Input_5"
            },
            {
              "from": "SendWebRequestBlock.Input_5",
              "to": "SendWebRequestBlock.Input_6"
            }
          ]
        }
      },
      {
        "decl_name": "SendWebRequestBlock.Output",
        "start_line": 43,
        "end_line": 46,
        "children": [],
        "code": "    class Output(BlockSchema):\n        response: object = SchemaField(description=\"The response from the server\")\n        client_error: object = SchemaField(description=\"The error on 4xx status codes\")\n        server_error: object = SchemaField(description=\"The error on 5xx status codes\")\n",
        "cfg": {
          "nodes": [
            {
              "id": "SendWebRequestBlock.Output_1",
              "code": "class Output(BlockSchema):\n"
            },
            {
              "id": "SendWebRequestBlock.Output_2",
              "code": "        response: object = SchemaField(description=\"The response from the server\")\n        client_error: object = SchemaField(description=\"The error on 4xx status codes\")\n        server_error: object = SchemaField(description=\"The error on 5xx status codes\")\n"
            }
          ],
          "edges": [
            {
              "from": "SendWebRequestBlock.Output_1",
              "to": "SendWebRequestBlock.Output_2"
            }
          ]
        }
      },
      {
        "decl_name": "SendWebRequestBlock.__init__",
        "start_line": 48,
        "end_line": 55,
        "children": [],
        "code": "    def __init__(self):\n        super().__init__(\n            id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\",\n            description=\"This block makes an HTTP request to the given URL.\",\n            categories={BlockCategory.OUTPUT},\n            input_schema=SendWebRequestBlock.Input,\n            output_schema=SendWebRequestBlock.Output,\n        )\n",
        "cfg": {
          "nodes": [
            {
              "id": "SendWebRequestBlock.__init___1",
              "code": "def __init__(self):\n        super().__init__(\n            id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\",\n            description=\"This block makes an HTTP request to the given URL.\",\n            categories={BlockCategory.OUTPUT},\n            input_schema=SendWebRequestBlock.Input,\n            output_schema=SendWebRequestBlock.Output,\n        )\n"
            }
          ],
          "edges": []
        }
      },
      {
        "decl_name": "SendWebRequestBlock.run",
        "start_line": 57,
        "end_line": 77,
        "children": [],
        "code": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        if isinstance(input_data.body, str):\n            input_data.body = json.loads(input_data.body)\n\n        response = requests.request(\n            input_data.method.value,\n            input_data.url,\n            headers=input_data.headers,\n            json=input_data.body if input_data.json_format else None,\n            data=input_data.body if not input_data.json_format else None,\n        )\n        result = response.json() if input_data.json_format else response.text\n\n        if response.status_code // 100 == 2:\n            yield \"response\", result\n        elif response.status_code // 100 == 4:\n            yield \"client_error\", result\n        elif response.status_code // 100 == 5:\n            yield \"server_error\", result\n        else:\n            raise ValueError(f\"Unexpected status code: {response.status_code}\")\n",
        "cfg": {
          "nodes": [
            {
              "id": "SendWebRequestBlock.run_1",
              "code": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n"
            },
            {
              "id": "SendWebRequestBlock.run_2",
              "code": "        if isinstance(input_data.body, str):\n            input_data.body = json.loads(input_data.body)\n"
            },
            {
              "id": "SendWebRequestBlock.run_3",
              "code": "        response = requests.request(\n            input_data.method.value,\n            input_data.url,\n            headers=input_data.headers,\n            json=input_data.body if input_data.json_format else None,\n            data=input_data.body if not input_data.json_format else None,\n        )\n"
            },
            {
              "id": "SendWebRequestBlock.run_4",
              "code": "        result = response.json() if input_data.json_format else response.text\n"
            },
            {
              "id": "SendWebRequestBlock.run_5",
              "code": "        if response.status_code // 100 == 2:\n            yield \"response\", result\n"
            },
            {
              "id": "SendWebRequestBlock.run_6",
              "code": "        elif response.status_code // 100 == 4:\n            yield \"client_error\", result\n"
            },
            {
              "id": "SendWebRequestBlock.run_7",
              "code": "        elif response.status_code // 100 == 5:\n            yield \"server_error\", result\n"
            },
            {
              "id": "SendWebRequestBlock.run_8",
              "code": "        else:\n            raise ValueError(f\"Unexpected status code: {response.status_code}\")\n"
            }
          ],
          "edges": [
            {
              "from": "SendWebRequestBlock.run_1",
              "to": "SendWebRequestBlock.run_2"
            },
            {
              "from": "SendWebRequestBlock.run_2",
              "to": "SendWebRequestBlock.run_3"
            },
            {
              "from": "SendWebRequestBlock.run_3",
              "to": "SendWebRequestBlock.run_4"
            },
            {
              "from": "SendWebRequestBlock.run_4",
              "to": "SendWebRequestBlock.run_5"
            },
            {
              "from": "SendWebRequestBlock.run_4",
              "to": "SendWebRequestBlock.run_6"
            },
            {
              "from": "SendWebRequestBlock.run_4",
              "to": "SendWebRequestBlock.run_7"
            },
            {
              "from": "SendWebRequestBlock.run_4",
              "to": "SendWebRequestBlock.run_8"
            }
          ]
        }
      }
    ],
    "code": "class SendWebRequestBlock(Block):\n\n\n\n",
    "cfg": {
      "nodes": [
        {
          "id": "SendWebRequestBlock_1",
          "code": "class SendWebRequestBlock(Block):\n"
        }
      ],
      "edges": []
    }
  }
]