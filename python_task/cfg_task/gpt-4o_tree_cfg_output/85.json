{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 12,
      "label": "from google.oauth2.credentials import Credentials\nfrom googleapiclient.discovery import build\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom ._auth import (\n    GOOGLE_OAUTH_IS_CONFIGURED,\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    GoogleCredentials,\n    GoogleCredentialsField,\n    GoogleCredentialsInput,\n)",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "GoogleSheetsReadBlock",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 30,
              "label": "def __init__(self):\n        super().__init__(\n            id=\"5724e902-3635-47e9-a108-aaa0263a4988\",\n            description=\"This block reads data from a Google Sheets spreadsheet.\",\n            categories={BlockCategory.DATA},\n            input_schema=GoogleSheetsReadBlock.Input,\n            output_schema=GoogleSheetsReadBlock.Output,\n            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,\n            test_input={\n                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\",\n                \"range\": \"Sheet1!A1:B2\",\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"result\",\n                    [\n                        [\"Name\", \"Score\"],\n                        [\"Alice\", \"85\"],\n                    ],\n                ),\n            ],\n            test_mock={\n                \"_read_sheet\": lambda *args, **kwargs: [\n                    [\"Name\", \"Score\"],\n                    [\"Alice\", \"85\"],\n                ],\n            },\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 6,
              "label": "def run(\n        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs\n    ) -> BlockOutput:\n        service = self._build_service(credentials, **kwargs)\n        data = self._read_sheet(service, input_data.spreadsheet_id, input_data.range)\n        yield \"result\", data",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_build_service",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 18,
              "label": "def _build_service(credentials: GoogleCredentials, **kwargs):\n        creds = Credentials(\n            token=(\n                credentials.access_token.get_secret_value()\n                if credentials.access_token\n                else None\n            ),\n            refresh_token=(\n                credentials.refresh_token.get_secret_value()\n                if credentials.refresh_token\n                else None\n            ),\n            token_uri=\"https://oauth2.googleapis.com/token\",\n            client_id=kwargs.get(\"client_id\"),\n            client_secret=kwargs.get(\"client_secret\"),\n            scopes=credentials.scopes,\n        )\n        return build(\"sheets\", \"v4\", credentials=creds)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_read_sheet",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 4,
              "label": "def _read_sheet(self, service, spreadsheet_id: str, range: str) -> list[list[str]]:\n        sheet = service.spreadsheets()\n        result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range).execute()\n        return result.get(\"values\", [])",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 10,
              "label": "class Input(BlockSchema):\n        credentials: GoogleCredentialsInput = GoogleCredentialsField(\n            [\"https://www.googleapis.com/auth/spreadsheets.readonly\"]\n        )\n        spreadsheet_id: str = SchemaField(\n            description=\"The ID of the spreadsheet to read from\",\n        )\n        range: str = SchemaField(\n            description=\"The A1 notation of the range to read\",\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [],
          "functions": [],
          "classes": []
        }
      ]
    },
    {
      "name": "GoogleSheetsWriteBlock",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 32,
              "label": "def __init__(self):\n        super().__init__(\n            id=\"d9291e87-301d-47a8-91fe-907fb55460e5\",\n            description=\"This block writes data to a Google Sheets spreadsheet.\",\n            categories={BlockCategory.DATA},\n            input_schema=GoogleSheetsWriteBlock.Input,\n            output_schema=GoogleSheetsWriteBlock.Output,\n            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,\n            test_input={\n                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\",\n                \"range\": \"Sheet1!A1:B2\",\n                \"values\": [\n                    [\"Name\", \"Score\"],\n                    [\"Bob\", \"90\"],\n                ],\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"result\",\n                    {\"updatedCells\": 4, \"updatedColumns\": 2, \"updatedRows\": 2},\n                ),\n            ],\n            test_mock={\n                \"_write_sheet\": lambda *args, **kwargs: {\n                    \"updatedCells\": 4,\n                    \"updatedColumns\": 2,\n                    \"updatedRows\": 2,\n                },\n            },\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 4,
              "end_line": 10,
              "label": "service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)\n        result = self._write_sheet(\n            service,\n            input_data.spreadsheet_id,\n            input_data.range,\n            input_data.values,\n        )",
              "successors": [
                {
                  "id": 2,
                  "start_line": 11,
                  "end_line": 11,
                  "label": "yield \"result\", result",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_write_sheet",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 16,
              "label": "def _write_sheet(\n        self, service, spreadsheet_id: str, range: str, values: list[list[str]]\n    ) -> dict:\n        body = {\"values\": values}\n        result = (\n            service.spreadsheets()\n            .values()\n            .update(\n                spreadsheetId=spreadsheet_id,\n                range=range,\n                valueInputOption=\"USER_ENTERED\",\n                body=body,\n            )\n            .execute()\n        )\n        return result",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}