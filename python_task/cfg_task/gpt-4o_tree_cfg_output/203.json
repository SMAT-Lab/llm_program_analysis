{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 21,
      "label": "import contextlib\nimport logging.config\nimport os\nimport dotenv\nimport fastapi\nimport fastapi.middleware.cors\nimport fastapi.middleware.gzip\nimport prisma\nimport prometheus_fastapi_instrumentator\nimport sentry_sdk\nimport sentry_sdk.integrations.asyncio\nimport sentry_sdk.integrations.fastapi\nimport sentry_sdk.integrations.starlette\nimport market.config\nimport market.routes.admin\nimport market.routes.agents\nimport market.routes.analytics\nimport market.routes.search\nimport market.routes.submissions\ndotenv.load_dotenv()\nlogging.config.dictConfig(market.config.LogConfig().model_dump())",
      "successors": [
        {
          "id": 2,
          "start_line": 22,
          "end_line": 36,
          "label": "if os.environ.get(\"SENTRY_DSN\"):\n    sentry_sdk.init(\n        dsn=os.environ.get(\"SENTRY_DSN\"),\n        traces_sample_rate=1.0,\n        profiles_sample_rate=1.0,\n        enable_tracing=True,\n        environment=os.environ.get(\"RUN_ENV\", default=\"CLOUD\").lower(),\n        integrations=[\n            sentry_sdk.integrations.starlette.StarletteIntegration(\n                transaction_style=\"url\"\n            ),\n            sentry_sdk.integrations.fastapi.FastApiIntegration(transaction_style=\"url\"),\n            sentry_sdk.integrations.asyncio.AsyncioIntegration(),\n        ],\n    )",
          "successors": []
        }
      ]
    },
    {
      "id": 3,
      "start_line": 37,
      "end_line": 38,
      "label": "db_client = prisma.Prisma(auto_register=True)\n@contextlib.asynccontextmanager",
      "successors": []
    },
    {
      "id": 4,
      "start_line": 39,
      "end_line": 48,
      "label": "docs_url = \"/docs\"\napp = fastapi.FastAPI(\n    title=\"Marketplace API\",\n    description=\"AutoGPT Marketplace API is a service that allows users to share AI agents.\",\n    summary=\"Maketplace API\",\n    version=\"0.1\",\n    lifespan=lifespan,\n    root_path=\"/api/v1/market\",\n    docs_url=docs_url,\n)",
      "successors": []
    },
    {
      "id": 5,
      "start_line": 49,
      "end_line": 58,
      "label": "app.add_middleware(fastapi.middleware.gzip.GZipMiddleware, minimum_size=1000)\napp.add_middleware(\n    middleware_class=fastapi.middleware.cors.CORSMiddleware,\n    allow_origins=os.environ.get(\n        \"BACKEND_CORS_ALLOW_ORIGINS\", \"http://localhost:3000,http://127.0.0.1:3000\"\n    ).split(\",\"),\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)",
      "successors": []
    },
    {
      "id": 6,
      "start_line": 59,
      "end_line": 65,
      "label": "app.include_router(market.routes.agents.router, tags=[\"agents\"])\napp.include_router(market.routes.search.router, tags=[\"search\"])\napp.include_router(market.routes.submissions.router, tags=[\"submissions\"])\napp.include_router(market.routes.admin.router, prefix=\"/admin\", tags=[\"admin\"])\napp.include_router(\n    market.routes.analytics.router, prefix=\"/analytics\", tags=[\"analytics\"]\n)",
      "successors": []
    },
    {
      "id": 7,
      "start_line": 66,
      "end_line": 68,
      "label": "@app.get(\"/health\")\n@app.get(\"/\")\nprometheus_fastapi_instrumentator.Instrumentator().instrument(app).expose(app)",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "lifespan",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 1,
          "end_line": 2,
          "label": "async def lifespan(app: fastapi.FastAPI):\n    await db_client.connect()",
          "successors": [
            {
              "id": 2,
              "start_line": 3,
              "end_line": 3,
              "label": "yield",
              "successors": [
                {
                  "id": 3,
                  "start_line": 4,
                  "end_line": 4,
                  "label": "await db_client.disconnect()",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "health",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 4,
          "label": "return fastapi.responses.HTMLResponse(\n        content=\"<h1>Marketplace API</h1>\", status_code=200\n    )",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "default",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 4,
          "label": "return fastapi.responses.HTMLResponse(\n        content=\"<h1>Marketplace API</h1>\", status_code=200\n    )",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}