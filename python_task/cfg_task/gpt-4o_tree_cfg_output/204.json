{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 8,
      "label": "from backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "HubSpotCompanyBlock",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 8,
              "label": "def __init__(self):\n        super().__init__(\n            id=\"3ae02219-d540-47cd-9c78-3ad6c7d9820a\",\n            description=\"Manages HubSpot companies - create, update, and retrieve company information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotCompanyBlock.Input,\n            output_schema=HubSpotCompanyBlock.Output,\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 8,
              "label": "def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n        base_url = \"https://api.hubapi.com/crm/v3/objects/companies\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }",
              "successors": [
                {
                  "id": 2,
                  "start_line": 9,
                  "end_line": 9,
                  "label": "if input_data.operation == \"create\":",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 10,
                      "end_line": 15,
                      "label": "response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.company_data}\n            )\n            result = response.json()\n            yield \"company\", result\n            yield \"status\", \"created\"",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "start_line": 16,
                      "end_line": 16,
                      "label": "elif input_data.operation == \"get\":",
                      "successors": [
                        {
                          "id": 5,
                          "start_line": 17,
                          "end_line": 34,
                          "label": "search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"domain\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.domain,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"company\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 6,
                      "start_line": 35,
                      "end_line": 35,
                      "label": "elif input_data.operation == \"update\":",
                      "successors": [
                        {
                          "id": 7,
                          "start_line": 36,
                          "end_line": 54,
                          "label": "# First get company ID by domain\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"domain\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.domain,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            company_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")",
                          "successors": [
                            {
                              "id": 8,
                              "start_line": 55,
                              "end_line": 55,
                              "label": "if company_id:",
                              "successors": [
                                {
                                  "id": 9,
                                  "start_line": 56,
                                  "end_line": 63,
                                  "label": "response = requests.patch(\n                    f\"{base_url}/{company_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.company_data},\n                )\n                result = response.json()\n                yield \"company\", result\n                yield \"status\", \"updated\"",
                                  "successors": []
                                },
                                {
                                  "id": 10,
                                  "start_line": 64,
                                  "end_line": 66,
                                  "label": "else:\n                yield \"company\", {}\n                yield \"status\", \"company_not_found\"",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 11,
              "label": "class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        company_data: dict = SchemaField(\n            description=\"Company data for create/update operations\", default={}\n        )\n        domain: str = SchemaField(\n            description=\"Company domain for get/update operations\", default=\"\"\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}