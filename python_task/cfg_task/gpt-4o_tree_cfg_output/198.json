{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 2,
      "label": "from backend.util.settings import AppEnvironment, BehaveAs, Settings\nsettings = Settings()",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "configure_logging",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 1,
          "end_line": 7,
          "label": "def configure_logging():\n    import logging\n    import autogpt_libs.logging.config\n    if (\n        settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL\n    ):",
          "successors": [
            {
              "id": 2,
              "start_line": 8,
              "end_line": 8,
              "label": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 10,
              "end_line": 10,
              "label": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)",
              "successors": []
            }
          ]
        },
        {
          "id": 4,
          "start_line": 11,
          "end_line": 12,
          "label": "# Silence httpx logger\n    logging.getLogger(\"httpx\").setLevel(logging.WARNING)",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}