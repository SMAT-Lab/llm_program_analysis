{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 2,
      "label": "# -*- coding: utf-8 -*-\nfrom mrjob.job import MRJob",
      "successors": [
        {
          "id": 2,
          "start_line": 3,
          "end_line": 3,
          "label": "if __name__ == '__main__':",
          "successors": [
            {
              "id": 3,
              "start_line": 4,
              "end_line": 4,
              "label": "HitCounts.run()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "HitCounts",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "extract_url",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 3,
              "label": "def extract_url(self, line):\n        \"\"\"Extract the generated url from the log line.\"\"\"\n        pass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "extract_year_month",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 3,
              "label": "def extract_year_month(self, line):\n        \"\"\"Return the year and month portions of the timestamp.\"\"\"\n        pass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "mapper",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 10,
              "label": "def mapper(self, _, line):\n        \"\"\"Parse each log line, extract and transform relevant lines.\n        Emit key value pairs of the form:\n        (2016-01, url0), 1\n        (2016-01, url0), 1\n        (2016-01, url1), 1\n        \"\"\"\n        url = self.extract_url(line)\n        period = self.extract_year_month(line)\n        yield (period, url), 1",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "reducer",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 6,
              "label": "def reducer(self, key, values):\n        \"\"\"Sum values for each key.\n        (2016-01, url0), 2\n        (2016-01, url1), 1\n        \"\"\"\n        yield key, sum(values)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "steps",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 3,
              "end_line": 6,
              "label": "return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}