{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 9,
      "label": "from backend.data.block import BlockOutput, BlockSchema\nfrom backend.data.model import APIKeyCredentials, SchemaField\nfrom ._api import (\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    Slant3DCredentialsField,\n    Slant3DCredentialsInput,\n)\nfrom .base import Slant3DBlockBase",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "Slant3DSlicerBlock",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 19,
              "label": "def __init__(self):\n        super().__init__(\n            id=\"f8a12c8d-3e4b-4d5f-b6a7-8c9d0e1f2g3h\",\n            description=\"Slice a 3D model file and get pricing information\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"file_url\": \"https://example.com/model.stl\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"message\", \"Slicing successful\"), (\"price\", 8.23)],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"message\": \"Slicing successful\",\n                    \"data\": {\"price\": 8.23},\n                }\n            },\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 4,
              "label": "def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 5,
                  "end_line": 12,
                  "label": "result = self._make_request(\n                \"POST\",\n                \"slicer\",\n                credentials.api_key.get_secret_value(),\n                json={\"fileURL\": input_data.file_url},\n            )\n            yield \"message\", result[\"message\"]\n            yield \"price\", result[\"data\"][\"price\"]",
                  "successors": []
                },
                {
                  "id": 3,
                  "start_line": 13,
                  "end_line": 15,
                  "label": "except Exception as e:\n            yield \"error\", str(e)\n            raise",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 5,
              "label": "class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n        file_url: str = SchemaField(\n            description=\"URL of the 3D model file to slice (STL)\"\n        )",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}