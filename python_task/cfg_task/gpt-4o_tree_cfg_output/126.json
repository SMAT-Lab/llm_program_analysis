{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "if __name__ == \"__main__\":",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 3,
          "label": "import doctest\n    doctest.testmod()",
          "successors": []
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "find_previous_power_of_two",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 16,
          "end_line": 16,
          "label": "if not isinstance(number, int) or number < 0:",
          "successors": [
            {
              "id": 2,
              "start_line": 17,
              "end_line": 17,
              "label": "raise ValueError(\"Input must be a non-negative integer\")",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 18,
              "end_line": 18,
              "label": "if number == 0:",
              "successors": [
                {
                  "id": 4,
                  "start_line": 19,
                  "end_line": 19,
                  "label": "return 0",
                  "successors": []
                },
                {
                  "id": 5,
                  "start_line": 20,
                  "end_line": 21,
                  "label": "power = 1\n    while power <= number:",
                  "successors": [
                    {
                      "id": 6,
                      "start_line": 22,
                      "end_line": 22,
                      "label": "power <<= 1  # Equivalent to multiplying by 2",
                      "successors": [
                        {
                          "id": 7,
                          "start_line": 23,
                          "end_line": 23,
                          "label": "return power >> 1 if number > 1 else 1",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}