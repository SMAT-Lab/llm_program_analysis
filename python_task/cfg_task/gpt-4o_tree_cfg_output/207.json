{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 9,
      "label": "\"\"\"\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n\"\"\"",
      "successors": []
    },
    {
      "id": 2,
      "start_line": 10,
      "end_line": 10,
      "label": "import string",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "backtrack",
      "type": "CFG",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "word_ladder",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 22,
          "end_line": 22,
          "label": "if end_word not in word_set:  # no valid transformation possible",
          "successors": [
            {
              "id": 2,
              "start_line": 23,
              "end_line": 23,
              "label": "return []",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 24,
              "end_line": 25,
              "label": "# Perform backtracking starting from the begin_word\n    return backtrack(begin_word, [begin_word], end_word, word_set)",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}