{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 5,
      "label": "import logging\nfrom backend.data import integrations\nfrom backend.data.model import APIKeyCredentials, Credentials, OAuth2Credentials\nfrom ._base import WT, BaseWebhooksManager\nlogger = logging.getLogger(__name__)",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "ManualWebhookManagerBase",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "_register_webhook",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 9,
              "label": "async def _register_webhook(\n        self,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n        ingress_url: str,\n        secret: str,\n    ) -> tuple[str, dict]:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 10,
                  "end_line": 11,
                  "label": "print(ingress_url)  # FIXME: pass URL to user in front end\n        return \"\", {}",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_deregister_webhook",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 6,
              "label": "async def _deregister_webhook(\n        self,\n        webhook: integrations.Webhook,\n        credentials: OAuth2Credentials | APIKeyCredentials,\n    ) -> None:\n        pass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}