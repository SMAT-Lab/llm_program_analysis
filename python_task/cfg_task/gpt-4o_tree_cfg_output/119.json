{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 2,
      "label": "from timeit import timeit\nif __name__ == \"__main__\":",
      "successors": [
        {
          "id": 2,
          "start_line": 3,
          "end_line": 5,
          "label": "import doctest\n    doctest.testmod()\n    benchmark()",
          "successors": []
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "get_set_bits_count_using_brian_kernighans_algorithm",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 21,
          "end_line": 21,
          "label": "if number < 0:",
          "successors": [
            {
              "id": 2,
              "start_line": 22,
              "end_line": 22,
              "label": "raise ValueError(\"the value of input must not be negative\")",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 23,
              "end_line": 23,
              "label": "result = 0",
              "successors": [
                {
                  "id": 4,
                  "start_line": 24,
                  "end_line": 24,
                  "label": "",
                  "successors": [
                    {
                      "id": 5,
                      "start_line": 25,
                      "end_line": 26,
                      "label": "number &= number - 1\n        result += 1",
                      "successors": [
                        {
                          "id": 6,
                          "start_line": 24,
                          "end_line": 24,
                          "label": "while number:",
                          "successors": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 7,
                  "start_line": 27,
                  "end_line": 27,
                  "label": "return result",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_set_bits_count_using_modulo_operator",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 21,
          "end_line": 21,
          "label": "if number < 0:",
          "successors": [
            {
              "id": 2,
              "start_line": 22,
              "end_line": 22,
              "label": "raise ValueError(\"the value of input must not be negative\")",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 23,
              "end_line": 23,
              "label": "result = 0",
              "successors": [
                {
                  "id": 4,
                  "start_line": 24,
                  "end_line": 24,
                  "label": "while number:",
                  "successors": [
                    {
                      "id": 5,
                      "start_line": 25,
                      "end_line": 25,
                      "label": "if number % 2 == 1:",
                      "successors": [
                        {
                          "id": 6,
                          "start_line": 26,
                          "end_line": 26,
                          "label": "result += 1",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 7,
                      "start_line": 27,
                      "end_line": 27,
                      "label": "number >>= 1",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 8,
                  "start_line": 28,
                  "end_line": 28,
                  "label": "return result",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "benchmark",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 6,
          "end_line": 6,
          "label": "for number in (25, 37, 58, 0):",
          "successors": [
            {
              "id": 2,
              "start_line": 7,
              "end_line": 8,
              "label": "do_benchmark(number)\n        print()",
              "successors": []
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "do_benchmark",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 2,
              "label": "def do_benchmark(number: int) -> None:\n        setup = \"import __main__ as z\"",
              "successors": [
                {
                  "id": 2,
                  "start_line": 3,
                  "end_line": 4,
                  "label": "print(f\"Benchmark when {number = }:\")\n        print(f\"{get_set_bits_count_using_modulo_operator(number) = }\")",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 5,
                      "end_line": 7,
                      "label": "timing = timeit(\n            f\"z.get_set_bits_count_using_modulo_operator({number})\", setup=setup\n        )",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 8,
                          "end_line": 9,
                          "label": "print(f\"timeit() runs in {timing} seconds\")\n        print(f\"{get_set_bits_count_using_brian_kernighans_algorithm(number) = }\")",
                          "successors": [
                            {
                              "id": 5,
                              "start_line": 10,
                              "end_line": 13,
                              "label": "timing = timeit(\n            f\"z.get_set_bits_count_using_brian_kernighans_algorithm({number})\",\n            setup=setup,\n        )",
                              "successors": [
                                {
                                  "id": 6,
                                  "start_line": 14,
                                  "end_line": 14,
                                  "label": "print(f\"timeit() runs in {timing} seconds\")",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ],
  "classes": []
}