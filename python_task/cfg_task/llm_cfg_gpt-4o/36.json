{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 44,
  "functions": [
    {
      "name": "binary_count_trailing_zeros",
      "type": "function",
      "start_line": 4,
      "end_line": 38,
      "functions": [],
      "classes": [],
      "simplified_code": "def binary_count_trailing_zeros(a: int) -> int:\n    \"\"\"\n    Take in 1 integer, return a number that is\n    the number of trailing zeros in binary representation of that number.\n\n    >>> binary_count_trailing_zeros(25)\n    0\n    >>> binary_count_trailing_zeros(36)\n    2\n    >>> binary_count_trailing_zeros(16)\n    4\n    >>> binary_count_trailing_zeros(58)\n    1\n    >>> binary_count_trailing_zeros(4294967296)\n    32\n    >>> binary_count_trailing_zeros(0)\n    0\n    >>> binary_count_trailing_zeros(-10)\n    Traceback (most recent call last):\n        ...\n    ValueError: Input value must be a positive integer\n    >>> binary_count_trailing_zeros(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be a 'int' type\n    >>> binary_count_trailing_zeros(\"0\")\n    Traceback (most recent call last):\n        ...\n    TypeError: '<' not supported between instances of 'str' and 'int'\n    \"\"\"\n    if a < 0:\n        raise ValueError(\"Input value must be a positive integer\")\n    elif isinstance(a, float):\n        raise TypeError(\"Input value must be a 'int' type\")\n    return 0 if (a == 0) else int(log2(a & -a))",
      "blocks": [
        {
          "id": 1,
          "label": "def binary_count_trailing_zeros(a: int) -> int:",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "if a < 0:",
          "successors": [
            3,
            4
          ]
        },
        {
          "id": 3,
          "label": "raise ValueError(\"Input value must be a positive integer\")",
          "successors": []
        },
        {
          "id": 4,
          "label": "elif isinstance(a, float):",
          "successors": [
            5,
            6
          ]
        },
        {
          "id": 5,
          "label": "raise TypeError(\"Input value must be a 'int' type\")",
          "successors": []
        },
        {
          "id": 6,
          "label": "return 0 if (a == 0) else int(log2(a & -a))",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "from math import log2\n\n\n    return 0 if (a == 0) else int(log2(a & -a))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
  "blocks": [
    {
      "id": 1,
      "label": "from math import log2",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "return 0 if (a == 0) else int(log2(a & -a))",
      "successors": []
    },
    {
      "id": 3,
      "label": "if __name__ == \"__main__\":",
      "successors": [
        4,
        5
      ]
    },
    {
      "id": 4,
      "label": "import doctest",
      "successors": [
        5
      ]
    },
    {
      "id": 5,
      "label": "doctest.testmod()",
      "successors": []
    }
  ]
}