{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 32,
  "functions": [
    {
      "name": "test_type_conversion",
      "type": "function",
      "start_line": 4,
      "end_line": 32,
      "functions": [],
      "classes": [],
      "simplified_code": "def test_type_conversion():\n    assert convert(5.5, int) == 5\n    assert convert(\"5.5\", int) == 5\n    assert convert([1, 2, 3], int) == 3\n\n    assert convert(\"5.5\", float) == 5.5\n    assert convert(5, float) == 5.0\n\n    assert convert(\"True\", bool) is True\n    assert convert(\"False\", bool) is False\n\n    assert convert(5, str) == \"5\"\n    assert convert({\"a\": 1, \"b\": 2}, str) == '{\"a\": 1, \"b\": 2}'\n    assert convert([1, 2, 3], str) == \"[1, 2, 3]\"\n\n    assert convert(\"5\", list) == [\"5\"]\n    assert convert((1, 2, 3), list) == [1, 2, 3]\n    assert convert({1, 2, 3}, list) == [1, 2, 3]\n\n    assert convert(\"5\", dict) == {\"value\": 5}\n    assert convert('{\"a\": 1, \"b\": 2}', dict) == {\"a\": 1, \"b\": 2}\n    assert convert([1, 2, 3], dict) == {0: 1, 1: 2, 2: 3}\n    assert convert((1, 2, 3), dict) == {0: 1, 1: 2, 2: 3}\n\n    from typing import List\n\n    assert convert(\"5\", List[int]) == [5]\n    assert convert(\"[5,4,2]\", List[int]) == [5, 4, 2]\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
      "blocks": [
        {
          "id": 1,
          "label": "assert convert(5.5, int) == 5",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "assert convert('5.5', int) == 5",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "assert convert([1, 2, 3], int) == 3",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "assert convert('5.5', float) == 5.5",
          "successors": [
            5
          ]
        },
        {
          "id": 5,
          "label": "assert convert(5, float) == 5.0",
          "successors": [
            6
          ]
        },
        {
          "id": 6,
          "label": "assert convert('True', bool) is True",
          "successors": [
            7
          ]
        },
        {
          "id": 7,
          "label": "assert convert('False', bool) is False",
          "successors": [
            8
          ]
        },
        {
          "id": 8,
          "label": "assert convert(5, str) == '5'",
          "successors": [
            9
          ]
        },
        {
          "id": 9,
          "label": "assert convert({'a': 1, 'b': 2}, str) == '{\"a\": 1, \"b\": 2}'",
          "successors": [
            10
          ]
        },
        {
          "id": 10,
          "label": "assert convert([1, 2, 3], str) == '[1, 2, 3]'",
          "successors": [
            11
          ]
        },
        {
          "id": 11,
          "label": "assert convert('5', list) == ['5']",
          "successors": [
            12
          ]
        },
        {
          "id": 12,
          "label": "assert convert((1, 2, 3), list) == [1, 2, 3]",
          "successors": [
            13
          ]
        },
        {
          "id": 13,
          "label": "assert convert({1, 2, 3}, list) == [1, 2, 3]",
          "successors": [
            14
          ]
        },
        {
          "id": 14,
          "label": "assert convert('5', dict) == {'value': 5}",
          "successors": [
            15
          ]
        },
        {
          "id": 15,
          "label": "assert convert('{\"a\": 1, \"b\": 2}', dict) == {'a': 1, 'b': 2}",
          "successors": [
            16
          ]
        },
        {
          "id": 16,
          "label": "assert convert([1, 2, 3], dict) == {0: 1, 1: 2, 2: 3}",
          "successors": [
            17
          ]
        },
        {
          "id": 17,
          "label": "assert convert((1, 2, 3), dict) == {0: 1, 1: 2, 2: 3}",
          "successors": [
            18
          ]
        },
        {
          "id": 18,
          "label": "from typing import List",
          "successors": [
            19
          ]
        },
        {
          "id": 19,
          "label": "assert convert('5', List[int]) == [5]",
          "successors": [
            20
          ]
        },
        {
          "id": 20,
          "label": "assert convert('[5,4,2]', List[int]) == [5, 4, 2]",
          "successors": [
            21
          ]
        },
        {
          "id": 21,
          "label": "assert convert([5, 4, 2], List[str]) == ['5', '4', '2']",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "from backend.util.type import convert\n\n\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
  "blocks": [
    {
      "id": 1,
      "label": "from backend.util.type import convert",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
      "successors": []
    }
  ]
}