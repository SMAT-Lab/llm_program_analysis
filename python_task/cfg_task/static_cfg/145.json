{
  "name": "145.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom abc import ABCMeta, abstractmethod\nfrom enum import Enum\nimport sys",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "Suit",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nHEART = 0\nDIAMOND = 1\nCLUBS = 2\nSPADE = 3",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "Card",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\nself.value = value\nself.suit = suit\nself.is_available = True",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "value",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "BlackJackCard",
      "type": "CFG",
      "blocks": [
        {
          "id": 18,
          "label": "#18",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 20,
              "label": "#20\nsuper(BlackJackCard, self).__init__(value, suit)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "is_ace",
          "type": "CFG",
          "blocks": [
            {
              "id": 23,
              "label": "#23\nreturn True if self._value == 1 else False",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "is_face_card",
          "type": "CFG",
          "blocks": [
            {
              "id": 27,
              "label": "#27\n\"\"\"Jack = 11, Queen = 12, King = 13\"\"\"\nreturn True if 10 < self._value <= 13 else False",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "value",
          "type": "CFG",
          "blocks": [
            {
              "id": 43,
              "label": "#43\nif 1 <= new_value <= 13:",
              "successors": [
                {
                  "id": 44,
                  "label": "#44\nself._value = new_value",
                  "successors": []
                },
                {
                  "id": 46,
                  "label": "#46\nraise ValueError('Invalid card value: {}'.format(new_value))",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Hand",
      "type": "CFG",
      "blocks": [
        {
          "id": 51,
          "label": "#51",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 53,
              "label": "#53\nself.cards = cards",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "add_card",
          "type": "CFG",
          "blocks": [
            {
              "id": 56,
              "label": "#56\nself.cards.append(card)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "score",
          "type": "CFG",
          "blocks": [
            {
              "id": 59,
              "label": "#59\ntotal_value = 0",
              "successors": [
                {
                  "id": 60,
                  "label": "#60\nfor card in self.cards:",
                  "successors": [
                    {
                      "id": 61,
                      "label": "#61\ntotal_value += card.value",
                      "successors": []
                    },
                    {
                      "id": 62,
                      "label": "#62\nreturn total_value",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "BlackJackHand",
      "type": "CFG",
      "blocks": [
        {
          "id": 67,
          "label": "#67\nBLACKJACK = 21",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 69,
              "label": "#69\nsuper(BlackJackHand, self).__init__(cards)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "score",
          "type": "CFG",
          "blocks": [
            {
              "id": 72,
              "label": "#72\nmin_over = sys.MAXSIZE\nmax_under = -sys.MAXSIZE",
              "successors": [
                {
                  "id": 73,
                  "label": "#73\nfor score in self.possible_scores():",
                  "successors": [
                    {
                      "id": 74,
                      "label": "#74\nif self.BLACKJACK < score < min_over:",
                      "successors": [
                        {
                          "id": 76,
                          "label": "#76\nmin_over = score",
                          "successors": []
                        },
                        {
                          "id": 78,
                          "label": "#78\nif max_under < score <= self.BLACKJACK:",
                          "successors": [
                            {
                              "id": 79,
                              "label": "#79\nmax_under = score",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 75,
                      "label": "#75\nreturn max_under if max_under != -sys.MAXSIZE else min_over",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "possible_scores",
          "type": "CFG",
          "blocks": [
            {
              "id": 84,
              "label": "#84\n\"\"\"Return a list of possible scores, taking Aces into account.\"\"\"\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Deck",
      "type": "CFG",
      "blocks": [
        {
          "id": 88,
          "label": "#88",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 90,
              "label": "#90\nself.cards = cards\nself.deal_index = 0",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "remaining_cards",
          "type": "CFG",
          "blocks": [
            {
              "id": 93,
              "label": "#93\nreturn len(self.cards) - self.deal_index",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "deal_card",
          "type": "CFG",
          "blocks": [
            {
              "id": 97,
              "label": "#97\ntry:",
              "successors": [
                {
                  "id": 98,
                  "label": "#98\ncard = self.cards[self.deal_index]\ncard.is_available = False\nself.deal_index += 1",
                  "successors": [
                    {
                      "id": 100,
                      "label": "#100\nreturn card",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 99,
                  "label": "#99\nreturn None",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "shuffle",
          "type": "CFG",
          "blocks": [
            {
              "id": 105,
              "label": "#105\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}