{
  "name": "142.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom pydantic import BaseModel, ConfigDict\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import BlockSecret, SchemaField, SecretField",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "EmailCredentials",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nsmtp_server: str = SchemaField(default='smtp.gmail.com', description=\n    'SMTP server address')\nsmtp_port: int = SchemaField(default=25, description='SMTP port number')\nsmtp_username: BlockSecret = SecretField(key='smtp_username')\nsmtp_password: BlockSecret = SecretField(key='smtp_password')\nmodel_config = ConfigDict(title='Email Credentials')",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "SendEmailBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\nsuper().__init__(disabled=True, id='4335878a-394e-4e67-adf2-919877ff49ae',\n    description=\n    'This block sends an email using the provided SMTP credentials.',\n    categories={BlockCategory.OUTPUT}, input_schema=SendEmailBlock.Input,\n    output_schema=SendEmailBlock.Output, test_input={'to_email':\n    'recipient@example.com', 'subject': 'Test Email', 'body':\n    'This is a test email.', 'creds': {'smtp_server': 'smtp.gmail.com',\n    'smtp_port': 25, 'smtp_username': 'your-email@gmail.com',\n    'smtp_password': 'your-gmail-password'}}, test_output=[('status',\n    'Email sent successfully')], test_mock={'send_email': lambda *args, **\n    kwargs: 'Email sent successfully'})",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "send_email",
          "type": "CFG",
          "blocks": [
            {
              "id": 17,
              "label": "#17\nsmtp_server = creds.smtp_server\nsmtp_port = creds.smtp_port\nsmtp_username = creds.smtp_username.get_secret_value()\nsmtp_password = creds.smtp_password.get_secret_value()\nmsg = MIMEMultipart()\nmsg['From'] = smtp_username\nmsg['To'] = to_email\nmsg['Subject'] = subject\nmsg.attach(MIMEText(body, 'plain'))\nwith smtplib.SMTP(smtp_server, smtp_port) as server:",
              "successors": [
                {
                  "id": 18,
                  "label": "#18\nserver.starttls()\nserver.login(smtp_username, smtp_password)\nserver.sendmail(smtp_username, to_email, msg.as_string())",
                  "successors": [
                    {
                      "id": 19,
                      "label": "#19\nreturn 'Email sent successfully'",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 23,
              "label": "#23\nyield 'status', self.send_email(input_data.creds, input_data.to_email,\n    input_data.subject, input_data.body)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\nto_email: str = SchemaField(description='Recipient email address',\n    placeholder='recipient@example.com')\nsubject: str = SchemaField(description='Subject of the email', placeholder=\n    'Enter the email subject')\nbody: str = SchemaField(description='Body of the email', placeholder=\n    'Enter the email body')\ncreds: EmailCredentials = SchemaField(description='SMTP credentials',\n    default=EmailCredentials())",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nstatus: str = SchemaField(description='Status of the email sending operation')\nerror: str = SchemaField(description=\n    'Error message if the email sending failed')",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}