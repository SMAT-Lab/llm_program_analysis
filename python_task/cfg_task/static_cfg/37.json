{
  "name": "37.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom datetime import datetime, timedelta\nfrom backend.blocks.hubspot._auth import HubSpotCredentials, HubSpotCredentialsField, HubSpotCredentialsInput\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "HubSpotEngagementBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nsuper().__init__(id='c6524385-7d87-49d6-a470-248bd29ca765', description=\n    'Manages HubSpot engagements - sends emails and tracks engagement metrics',\n    categories={BlockCategory.CRM, BlockCategory.COMMUNICATION},\n    input_schema=HubSpotEngagementBlock.Input, output_schema=\n    HubSpotEngagementBlock.Output)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\nbase_url = 'https://api.hubapi.com'\nheaders = {'Authorization':\n    f'Bearer {credentials.api_key.get_secret_value()}', 'Content-Type':\n    'application/json'}\nif input_data.operation == 'send_email':",
              "successors": [
                {
                  "id": 15,
                  "label": "#15\nemail_url = f'{base_url}/crm/v3/objects/emails'\nemail_data = {'properties': {'hs_timestamp': datetime.now().isoformat(),\n    'hubspot_owner_id': '1', 'hs_email_direction': 'OUTBOUND',\n    'hs_email_status': 'SEND', 'hs_email_subject': input_data.email_data.\n    get('subject'), 'hs_email_text': input_data.email_data.get('content'),\n    'hs_email_to_email': input_data.email_data.get('recipient')}}\nresponse = requests.post(email_url, headers=headers, json=email_data)\nresult = response.json()\nyield 'result', result",
                  "successors": [
                    {
                      "id": 35,
                      "label": "#35\nyield 'status', 'email_sent'",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 17,
                  "label": "#17\nif input_data.operation == 'track_engagement':",
                  "successors": [
                    {
                      "id": 18,
                      "label": "#18\nfrom_date = datetime.now() - timedelta(days=input_data.timeframe_days)\nengagement_url = (\n    f'{base_url}/crm/v3/objects/contacts/{input_data.contact_id}/engagement')\nparams = {'limit': 100, 'after': from_date.isoformat()}\nresponse = requests.get(engagement_url, headers=headers, params=params)\nengagements = response.json()\nmetrics = {'email_opens': 0, 'email_clicks': 0, 'email_replies': 0,\n    'last_engagement': None, 'engagement_score': 0}",
                      "successors": [
                        {
                          "id": 20,
                          "label": "#20\nfor engagement in engagements.get('results', []):",
                          "successors": [
                            {
                              "id": 21,
                              "label": "#21\neng_type = engagement.get('properties', {}).get('hs_engagement_type')\nif eng_type == 'EMAIL':",
                              "successors": [
                                {
                                  "id": 23,
                                  "label": "#23\nmetrics['email_opens'] += 1",
                                  "successors": [
                                    {
                                      "id": 24,
                                      "label": "#24\neng_time = engagement.get('properties', {}).get('hs_timestamp')\nif eng_time and (not metrics['last_engagement'] or eng_time > metrics[",
                                      "successors": [
                                        {
                                          "id": 31,
                                          "label": "#31\nmetrics['last_engagement'] = eng_time",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": 25,
                                  "label": "#25\nif eng_type == 'EMAIL_CLICK':",
                                  "successors": [
                                    {
                                      "id": 26,
                                      "label": "#26\nmetrics['email_clicks'] += 1",
                                      "successors": []
                                    },
                                    {
                                      "id": 28,
                                      "label": "#28\nif eng_type == 'EMAIL_REPLY':",
                                      "successors": [
                                        {
                                          "id": 29,
                                          "label": "#29\nmetrics['email_replies'] += 1",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 22,
                              "label": "#22\nmetrics['engagement_score'] = metrics['email_opens'] + metrics['email_clicks'\n    ] * 2 + metrics['email_replies'] * 3\nyield 'result', metrics",
                              "successors": [
                                {
                                  "id": 33,
                                  "label": "#33\nyield 'status', 'engagement_tracked'",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\ncredentials: HubSpotCredentialsInput = HubSpotCredentialsField()\noperation: str = SchemaField(description=\n    'Operation to perform (send_email, track_engagement)', default='send_email'\n    )\nemail_data: dict = SchemaField(description=\n    'Email data including recipient, subject, content', default={})\ncontact_id: str = SchemaField(description=\n    'Contact ID for engagement tracking', default='')\ntimeframe_days: int = SchemaField(description=\n    'Number of days to look back for engagement', default=30, optional=True)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\nresult: dict = SchemaField(description='Operation result')\nstatus: str = SchemaField(description='Operation status')",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}