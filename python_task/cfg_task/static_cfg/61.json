{
  "name": "61.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport json\nfrom typing import Any, Type, TypeVar, overload\nimport jsonschema\nfrom fastapi.encoders import jsonable_encoder\nfrom .type import type_match\nT = TypeVar('T')",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "to_dict",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nreturn jsonable_encoder(data)",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "dumps",
      "type": "CFG",
      "blocks": [
        {
          "id": 7,
          "label": "#7\nreturn json.dumps(jsonable_encoder(data))",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "loads",
      "type": "CFG",
      "blocks": [
        {
          "id": 17,
          "label": "#17\nparsed = json.loads(data, *args, **kwargs)\nif target_type:",
          "successors": [
            {
              "id": 18,
              "label": "#18\nreturn type_match(parsed, target_type)",
              "successors": []
            },
            {
              "id": 19,
              "label": "#19\nreturn parsed",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "validate_with_jsonschema",
      "type": "CFG",
      "blocks": [
        {
          "id": 24,
          "label": "#24\n\"\"\"\n    Validate the data against the schema.\n    Returns the validation error message if the data does not match the schema.\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 25,
              "label": "#25\njsonschema.validate(data, schema)\nreturn None",
              "successors": []
            },
            {
              "id": 26,
              "label": "#26\nreturn str(e)",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}