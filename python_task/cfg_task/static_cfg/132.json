{
  "name": "132.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nif __name__ == '__main__':",
      "successors": [
        {
          "id": 12,
          "label": "#12\nimport doctest\ndoctest.testmod()",
          "successors": []
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "get_1s_count",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"\n    Count the number of set bits in a 32 bit integer using Brian Kernighan's way.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan\n    >>> get_1s_count(25)\n    3\n    >>> get_1s_count(37)\n    3\n    >>> get_1s_count(21)\n    3\n    >>> get_1s_count(58)\n    4\n    >>> get_1s_count(0)\n    0\n    >>> get_1s_count(256)\n    1\n    >>> get_1s_count(-1)\n    Traceback (most recent call last):\n    ValueError: Input must be a non-negative integer\n    >>> get_1s_count(0.8)\n    Traceback (most recent call last):\n    ValueError: Input must be a non-negative integer\n    >>> get_1s_count(\"25\")\n    Traceback (most recent call last):\n    ValueError: Input must be a non-negative integer\n    \"\"\"\nif not isinstance(number, int) or number < 0:",
          "successors": [
            {
              "id": 4,
              "label": "#4\nraise ValueError('Input must be a non-negative integer')",
              "successors": []
            },
            {
              "id": 5,
              "label": "#5\ncount = 0",
              "successors": [
                {
                  "id": 7,
                  "label": "#7\nwhile number:",
                  "successors": [
                    {
                      "id": 8,
                      "label": "#8\nnumber &= number - 1\ncount += 1",
                      "successors": []
                    },
                    {
                      "id": 9,
                      "label": "#9\nreturn count",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}