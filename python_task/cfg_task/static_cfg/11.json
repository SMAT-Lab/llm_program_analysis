{
  "name": "11.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport functools\nimport logging\nimport os\nimport time\nfrom typing import Callable, ParamSpec, Tuple, TypeVar\nfrom pydantic import BaseModel\nP = ParamSpec('P')\nT = TypeVar('T')\nlogger = logging.getLogger(__name__)",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "_start_measurement",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6\nreturn time.time(), os.times()[0] + os.times()[1]",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "_end_measurement",
      "type": "CFG",
      "blocks": [
        {
          "id": 10,
          "label": "#10\nend_wall_time = time.time()\nend_cpu_time = os.times()[0] + os.times()[1]\nreturn end_wall_time - start_wall_time, end_cpu_time - start_cpu_time",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "time_measured",
      "type": "CFG",
      "blocks": [
        {
          "id": 14,
          "label": "#14\n\"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\nreturn wrapper",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "wrapper",
          "type": "CFG",
          "blocks": [
            {
              "id": 16,
              "label": "#16\nstart_wall_time, start_cpu_time = _start_measurement()\ntry:",
              "successors": [
                {
                  "id": 17,
                  "label": "#17\nresult = func(*args, **kwargs)",
                  "successors": [
                    {
                      "id": 18,
                      "label": "#18\nreturn timing_info, result",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "error_logged",
      "type": "CFG",
      "blocks": [
        {
          "id": 24,
          "label": "#24\n\"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\nreturn wrapper",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "wrapper",
          "type": "CFG",
          "blocks": [
            {
              "id": 26,
              "label": "#26\ntry:",
              "successors": [
                {
                  "id": 27,
                  "label": "#27\nreturn func(*args, **kwargs)",
                  "successors": []
                },
                {
                  "id": 28,
                  "label": "#28\nlogger.exception(\n    f'Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}'\n    )",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ],
  "classes": [
    {
      "name": "TimingInfo",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\ncpu_time: float\nwall_time: float",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    }
  ]
}