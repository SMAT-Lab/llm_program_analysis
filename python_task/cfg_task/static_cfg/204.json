{
  "name": "204.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom backend.blocks.hubspot._auth import HubSpotCredentials, HubSpotCredentialsField, HubSpotCredentialsInput\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "HubSpotCompanyBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nsuper().__init__(id='3ae02219-d540-47cd-9c78-3ad6c7d9820a', description=\n    'Manages HubSpot companies - create, update, and retrieve company information'\n    , categories={BlockCategory.CRM}, input_schema=HubSpotCompanyBlock.\n    Input, output_schema=HubSpotCompanyBlock.Output)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\nbase_url = 'https://api.hubapi.com/crm/v3/objects/companies'\nheaders = {'Authorization':\n    f'Bearer {credentials.api_key.get_secret_value()}', 'Content-Type':\n    'application/json'}\nif input_data.operation == 'create':",
              "successors": [
                {
                  "id": 15,
                  "label": "#15\nresponse = requests.post(base_url, headers=headers, json={'properties':\n    input_data.company_data})\nresult = response.json()\nyield 'company', result",
                  "successors": [
                    {
                      "id": 32,
                      "label": "#32\nyield 'status', 'created'",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 17,
                  "label": "#17\nif input_data.operation == 'get':",
                  "successors": [
                    {
                      "id": 18,
                      "label": "#18\nsearch_url = f'{base_url}/search'\nsearch_data = {'filterGroups': [{'filters': [{'propertyName': 'domain',\n    'operator': 'EQ', 'value': input_data.domain}]}]}\nresponse = requests.post(search_url, headers=headers, json=search_data)\nresult = response.json()\nyield 'company', result.get('results', [{}])[0]",
                      "successors": [
                        {
                          "id": 30,
                          "label": "#30\nyield 'status', 'retrieved'",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 20,
                      "label": "#20\nif input_data.operation == 'update':",
                      "successors": [
                        {
                          "id": 21,
                          "label": "#21\nsearch_response = requests.post(f'{base_url}/search', headers=headers, json\n    ={'filterGroups': [{'filters': [{'propertyName': 'domain', 'operator':\n    'EQ', 'value': input_data.domain}]}]})\ncompany_id = search_response.json().get('results', [{}])[0].get('id')\nif company_id:",
                          "successors": [
                            {
                              "id": 23,
                              "label": "#23\nresponse = requests.patch(f'{base_url}/{company_id}', headers=headers, json\n    ={'properties': input_data.company_data})\nresult = response.json()\nyield 'company', result",
                              "successors": [
                                {
                                  "id": 28,
                                  "label": "#28\nyield 'status', 'updated'",
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 25,
                              "label": "#25\nyield 'company', {}",
                              "successors": [
                                {
                                  "id": 26,
                                  "label": "#26\nyield 'status', 'company_not_found'",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\ncredentials: HubSpotCredentialsInput = HubSpotCredentialsField()\noperation: str = SchemaField(description=\n    'Operation to perform (create, update, get)', default='get')\ncompany_data: dict = SchemaField(description=\n    'Company data for create/update operations', default={})\ndomain: str = SchemaField(description=\n    'Company domain for get/update operations', default='')",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\ncompany: dict = SchemaField(description='Company information')\nstatus: str = SchemaField(description='Operation status')",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}