{
  "name": "170.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom mrjob.job import MRJob\nif __name__ == '__main__':",
      "successors": [
        {
          "id": 31,
          "label": "#31\nSpendingByCategory.run()",
          "successors": []
        }
      ]
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "SpendingByCategory",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\nself.categorizer = categorizer",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "current_year_month",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\n\"\"\"Return the current year and month.\"\"\"",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "extract_year_month",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\n\"\"\"Return the year and month portions of the timestamp.\"\"\"",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "handle_budget_notifications",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\n\"\"\"Call notification API if nearing or exceeded budget.\"\"\"",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "mapper",
          "type": "CFG",
          "blocks": [
            {
              "id": 17,
              "label": "#17\n\"\"\"Parse each log line, extract and transform relevant lines.\n\n        Emit key value pairs of the form:\n\n        (2016-01, shopping), 25\n        (2016-01, shopping), 100\n        (2016-01, gas), 50\n        \"\"\"\ntimestamp, category, amount = line.split('\\t')\nperiod = self.extract_year_month(timestamp)\nif period == self.current_year_month():",
              "successors": [
                {
                  "id": 18,
                  "label": "#18\nyield (period, category), amount",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "reducer",
          "type": "CFG",
          "blocks": [
            {
              "id": 23,
              "label": "#23\n\"\"\"Sum values for each key.\n\n        (2016-01, shopping), 125\n        (2016-01, gas), 50\n        \"\"\"\ntotal = sum(values)\nself.handle_budget_notifications(key, total)\nyield key, sum(values)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "steps",
          "type": "CFG",
          "blocks": [
            {
              "id": 27,
              "label": "#27\n\"\"\"Run the map and reduce steps.\"\"\"\nreturn [self.mr(mapper=self.mapper, reducer=self.reducer)]",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}