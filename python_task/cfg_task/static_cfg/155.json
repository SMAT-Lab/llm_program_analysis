{
  "name": "155.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom abc import ABCMeta, abstractmethod\nfrom enum import Enum",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "VehicleSize",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nMOTORCYCLE = 0\nCOMPACT = 1\nLARGE = 2",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "Vehicle",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\nself.vehicle_size = vehicle_size\nself.license_plate = license_plate\nself.spot_size\nself.spots_taken = []",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "clear_spots",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nfor spot in self.spots_taken:",
              "successors": [
                {
                  "id": 12,
                  "label": "#12\nspot.remove_vehicle(self)",
                  "successors": []
                },
                {
                  "id": 13,
                  "label": "#13\nself.spots_taken = []",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "take_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 16,
              "label": "#16\nself.spots_taken.append(spot)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "can_fit_in_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 19,
              "label": "#19\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Motorcycle",
      "type": "CFG",
      "blocks": [
        {
          "id": 23,
          "label": "#23",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 25,
              "label": "#25\nsuper(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate,\n    spot_size=1)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "can_fit_in_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 28,
              "label": "#28\nreturn True",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Car",
      "type": "CFG",
      "blocks": [
        {
          "id": 33,
          "label": "#33",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 35,
              "label": "#35\nsuper(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "can_fit_in_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 38,
              "label": "#38\nreturn spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Bus",
      "type": "CFG",
      "blocks": [
        {
          "id": 43,
          "label": "#43",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 45,
              "label": "#45\nsuper(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "can_fit_in_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 48,
              "label": "#48\nreturn spot.size == VehicleSize.LARGE",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "ParkingLot",
      "type": "CFG",
      "blocks": [
        {
          "id": 53,
          "label": "#53",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 55,
              "label": "#55\nself.num_levels = num_levels\nself.levels = []",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "park_vehicle",
          "type": "CFG",
          "blocks": [
            {
              "id": 58,
              "label": "#58\nfor level in self.levels:",
              "successors": [
                {
                  "id": 59,
                  "label": "#59\nif level.park_vehicle(vehicle):",
                  "successors": [
                    {
                      "id": 61,
                      "label": "#61\nreturn True",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 60,
                  "label": "#60\nreturn False",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Level",
      "type": "CFG",
      "blocks": [
        {
          "id": 68,
          "label": "#68\nSPOTS_PER_ROW = 10",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 70,
              "label": "#70\nself.floor = floor\nself.num_spots = total_spots\nself.available_spots = 0\nself.spots = []",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "spot_freed",
          "type": "CFG",
          "blocks": [
            {
              "id": 73,
              "label": "#73\nself.available_spots += 1",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "park_vehicle",
          "type": "CFG",
          "blocks": [
            {
              "id": 76,
              "label": "#76\nspot = self._find_available_spot(vehicle)\nif spot is None:",
              "successors": [
                {
                  "id": 77,
                  "label": "#77\nreturn None",
                  "successors": []
                },
                {
                  "id": 79,
                  "label": "#79\nspot.park_vehicle(vehicle)\nreturn spot",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_find_available_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 84,
              "label": "#84\n\"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_park_starting_at_spot",
          "type": "CFG",
          "blocks": [
            {
              "id": 87,
              "label": "#87\n\"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "ParkingSpot",
      "type": "CFG",
      "blocks": [
        {
          "id": 91,
          "label": "#91",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 93,
              "label": "#93\nself.level = level\nself.row = row\nself.spot_number = spot_number\nself.spot_size = spot_size\nself.vehicle_size = vehicle_size\nself.vehicle = None",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "is_available",
          "type": "CFG",
          "blocks": [
            {
              "id": 96,
              "label": "#96\nreturn True if self.vehicle is None else False",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "can_fit_vehicle",
          "type": "CFG",
          "blocks": [
            {
              "id": 100,
              "label": "#100\nif self.vehicle is not None:",
              "successors": [
                {
                  "id": 101,
                  "label": "#101\nreturn False",
                  "successors": []
                },
                {
                  "id": 102,
                  "label": "#102\nreturn vehicle.can_fit_in_spot(self)",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "park_vehicle",
          "type": "CFG",
          "blocks": [
            {
              "id": 107,
              "label": "#107\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "remove_vehicle",
          "type": "CFG",
          "blocks": [
            {
              "id": 110,
              "label": "#110\npass",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}