{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 7,
      "label": "import logging\nimport time\nfrom abc import ABC, abstractmethod\nfrom typing import ClassVar\nfrom backend.data.model import OAuth2Credentials\nfrom backend.integrations.providers import ProviderName\nlogger = logging.getLogger(__name__)",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "BaseOAuthHandler",
      "type": "CFG",
      "blocks": [
        {
          "id": 1,
          "start_line": 1,
          "end_line": 1,
          "label": "class BaseOAuthHandler(ABC):",
          "successors": [
            {
              "id": 2,
              "start_line": 2,
              "end_line": 5,
              "label": "# --8<-- [start:BaseOAuthHandler1]\n    PROVIDER_NAME: ClassVar[ProviderName]\n    DEFAULT_SCOPES: ClassVar[list[str]] = []\n    # --8<-- [end:BaseOAuthHandler1]",
              "successors": [
                {
                  "id": 3,
                  "start_line": 6,
                  "end_line": 6,
                  "label": "@abstractmethod",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 7,
                      "end_line": 8,
                      "label": "# --8<-- [start:BaseOAuthHandler2]\n    # --8<-- [end:BaseOAuthHandler2]",
                      "successors": [
                        {
                          "id": 5,
                          "start_line": 9,
                          "end_line": 9,
                          "label": "@abstractmethod",
                          "successors": [
                            {
                              "id": 6,
                              "start_line": 10,
                              "end_line": 10,
                              "label": "# --8<-- [start:BaseOAuthHandler3]",
                              "successors": [
                                {
                                  "id": 7,
                                  "start_line": 11,
                                  "end_line": 11,
                                  "label": "@abstractmethod",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "start_line": 12,
                                      "end_line": 12,
                                      "label": "# --8<-- [start:BaseOAuthHandler4]",
                                      "successors": [
                                        {
                                          "id": 9,
                                          "start_line": 13,
                                          "end_line": 13,
                                          "label": "@abstractmethod",
                                          "successors": [
                                            {
                                              "id": 10,
                                              "start_line": 14,
                                              "end_line": 14,
                                              "label": "# --8<-- [start:BaseOAuthHandler5]",
                                              "successors": [
                                                {
                                                  "id": 11,
                                                  "start_line": 15,
                                                  "end_line": 15,
                                                  "label": "@abstractmethod",
                                                  "successors": [
                                                    {
                                                      "id": 12,
                                                      "start_line": 16,
                                                      "end_line": 16,
                                                      "label": "# --8<-- [start:BaseOAuthHandler6]",
                                                      "successors": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 1,
              "label": "def __init__(self, client_id: str, client_secret: str, redirect_uri: str): ...",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "get_login_url",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 4,
              "label": "def get_login_url(self, scopes: list[str], state: str) -> str:\n        # --8<-- [end:BaseOAuthHandler3]\n        \"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "exchange_code_for_tokens",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 6,
              "label": "def exchange_code_for_tokens(\n        self, code: str, scopes: list[str]\n    ) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler4]\n        \"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_refresh_tokens",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 4,
              "label": "def _refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler5]\n        \"\"\"Implements the token refresh mechanism\"\"\"\n        ...",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "revoke_tokens",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 5,
              "label": "def revoke_tokens(self, credentials: OAuth2Credentials) -> bool:\n        # --8<-- [end:BaseOAuthHandler6]\n        \"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "refresh_tokens",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 1,
              "label": "def refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 2,
                  "end_line": 2,
                  "label": "if credentials.provider != self.PROVIDER_NAME:",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 3,
                      "end_line": 6,
                      "label": "raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "start_line": 7,
                      "end_line": 7,
                      "label": "return self._refresh_tokens(credentials)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "get_access_token",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 2,
              "label": "def get_access_token(self, credentials: OAuth2Credentials) -> str:\n        \"\"\"Returns a valid access token, refreshing it first if needed\"\"\"",
              "successors": [
                {
                  "id": 2,
                  "start_line": 3,
                  "end_line": 3,
                  "label": "if self.needs_refresh(credentials):",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 4,
                      "end_line": 4,
                      "label": "credentials = self.refresh_tokens(credentials)",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 5,
                          "end_line": 5,
                          "label": "return credentials.access_token.get_secret_value()",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 4,
                      "start_line": 5,
                      "end_line": 5,
                      "label": "return credentials.access_token.get_secret_value()",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "needs_refresh",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 1,
              "label": "def needs_refresh(self, credentials: OAuth2Credentials) -> bool:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 2,
                  "end_line": 2,
                  "label": "\"\"\"Indicates whether the given tokens need to be refreshed\"\"\"",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 3,
                      "end_line": 6,
                      "label": "return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "handle_default_scopes",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 3,
              "label": "def handle_default_scopes(self, scopes: list[str]) -> list[str]:\n        \"\"\"Handles the default scopes for the provider\"\"\"\n        # If scopes are empty, use the default scopes for the provider",
              "successors": [
                {
                  "id": 2,
                  "start_line": 4,
                  "end_line": 4,
                  "label": "if not scopes:",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 5,
                      "end_line": 8,
                      "label": "logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 9,
                          "end_line": 9,
                          "label": "return scopes",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 4,
                      "start_line": 9,
                      "end_line": 9,
                      "label": "return scopes",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}