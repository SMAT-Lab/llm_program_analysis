{
  "name": "example_script",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 3,
      "label": "from __future__ import annotations\nimport json\nimport logging",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "JsonFileHandler",
      "type": "CFG",
      "blocks": [],
      "functions": [
        {
          "name": "format",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 1,
              "label": "def format(self, record: logging.LogRecord) -> str:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 2,
                  "end_line": 2,
                  "label": "record.json_data = json.loads(record.getMessage())",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 3,
                      "end_line": 3,
                      "label": "return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "emit",
          "type": "CFG",
          "blocks": [
            {
              "id": 1,
              "start_line": 1,
              "end_line": 1,
              "label": "def emit(self, record: logging.LogRecord) -> None:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 2,
                  "end_line": 3,
                  "label": "with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}