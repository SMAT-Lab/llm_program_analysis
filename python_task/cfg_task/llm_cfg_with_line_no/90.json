{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 191,
  "functions": [],
  "classes": [
    {
      "name": "GetCurrentTimeBlock",
      "type": "class",
      "start_line": 9,
      "end_line": 42,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 23,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 23,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 24,
              "line": "        super().__init__("
            },
            {
              "lineno": 25,
              "line": "            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\","
            },
            {
              "lineno": 26,
              "line": "            description=\"This block outputs the current time.\","
            },
            {
              "lineno": 27,
              "line": "            categories={BlockCategory.TEXT},"
            },
            {
              "lineno": 28,
              "line": "            input_schema=GetCurrentTimeBlock.Input,"
            },
            {
              "lineno": 29,
              "line": "            output_schema=GetCurrentTimeBlock.Output,"
            },
            {
              "lineno": 30,
              "line": "            test_input=["
            },
            {
              "lineno": 31,
              "line": "                {\"trigger\": \"Hello\"},"
            },
            {
              "lineno": 32,
              "line": "                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},"
            },
            {
              "lineno": 33,
              "line": "            ],"
            },
            {
              "lineno": 34,
              "line": "            test_output=["
            },
            {
              "lineno": 35,
              "line": "                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),"
            },
            {
              "lineno": 36,
              "line": "                (\"time\", lambda _: time.strftime(\"%H:%M\")),"
            },
            {
              "lineno": 37,
              "line": "            ],"
            },
            {
              "lineno": 38,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 23,
              "end_line": 38,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\n            description=\"This block outputs the current time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentTimeBlock.Input,\n            output_schema=GetCurrentTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ],\n            test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ],\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 40,
          "end_line": 42,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 40,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 41,
              "line": "        current_time = time.strftime(input_data.format)"
            },
            {
              "lineno": 42,
              "line": "        yield \"time\", current_time"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 40,
              "end_line": 42,
              "label": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_time = time.strftime(input_data.format)\n        yield \"time\", current_time",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 10,
          "end_line": 16,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 10,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 11,
              "line": "        trigger: str = SchemaField("
            },
            {
              "lineno": 12,
              "line": "            description=\"Trigger any data to output the current time\""
            },
            {
              "lineno": 13,
              "line": "        )"
            },
            {
              "lineno": 14,
              "line": "        format: str = SchemaField("
            },
            {
              "lineno": 15,
              "line": "            description=\"Format of the time to output\", default=\"%H:%M:%S\""
            },
            {
              "lineno": 16,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 10,
              "end_line": 16,
              "label": "    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the time to output\", default=\"%H:%M:%S\"\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 18,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 18,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 19,
              "line": "        time: str = SchemaField("
            },
            {
              "lineno": 20,
              "line": "            description=\"Current time in the specified format (default: %H:%M:%S)\""
            },
            {
              "lineno": 21,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 18,
              "end_line": 21,
              "label": "    class Output(BlockSchema):\n        time: str = SchemaField(\n            description=\"Current time in the specified format (default: %H:%M:%S)\"\n        )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 9,
          "line": "class GetCurrentTimeBlock(Block):"
        },
        {
          "lineno": 17,
          "line": ""
        },
        {
          "lineno": 22,
          "line": ""
        },
        {
          "lineno": 39,
          "line": ""
        }
      ],
      "blocks": []
    },
    {
      "name": "GetCurrentDateBlock",
      "type": "class",
      "start_line": 45,
      "end_line": 96,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 64,
          "end_line": 88,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 64,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 65,
              "line": "        super().__init__("
            },
            {
              "lineno": 66,
              "line": "            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\","
            },
            {
              "lineno": 67,
              "line": "            description=\"This block outputs the current date with an optional offset.\","
            },
            {
              "lineno": 68,
              "line": "            categories={BlockCategory.TEXT},"
            },
            {
              "lineno": 69,
              "line": "            input_schema=GetCurrentDateBlock.Input,"
            },
            {
              "lineno": 70,
              "line": "            output_schema=GetCurrentDateBlock.Output,"
            },
            {
              "lineno": 71,
              "line": "            test_input=["
            },
            {
              "lineno": 72,
              "line": "                {\"trigger\": \"Hello\", \"offset\": \"7\"},"
            },
            {
              "lineno": 73,
              "line": "                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},"
            },
            {
              "lineno": 74,
              "line": "            ],"
            },
            {
              "lineno": 75,
              "line": "            test_output=["
            },
            {
              "lineno": 76,
              "line": "                ("
            },
            {
              "lineno": 77,
              "line": "                    \"date\","
            },
            {
              "lineno": 78,
              "line": "                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))"
            },
            {
              "lineno": 79,
              "line": "                    < timedelta(days=8),  # 7 days difference + 1 day error margin."
            },
            {
              "lineno": 80,
              "line": "                ),"
            },
            {
              "lineno": 81,
              "line": "                ("
            },
            {
              "lineno": 82,
              "line": "                    \"date\","
            },
            {
              "lineno": 83,
              "line": "                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))"
            },
            {
              "lineno": 84,
              "line": "                    < timedelta(days=8),"
            },
            {
              "lineno": 85,
              "line": "                    # 7 days difference + 1 day error margin."
            },
            {
              "lineno": 86,
              "line": "                ),"
            },
            {
              "lineno": 87,
              "line": "            ],"
            },
            {
              "lineno": 88,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 64,
              "end_line": 88,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\n            description=\"This block outputs the current date with an optional offset.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateBlock.Input,\n            output_schema=GetCurrentDateBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n            ],\n            test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n                ),\n            ],\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 90,
          "end_line": 96,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 90,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 91,
              "line": "        try:"
            },
            {
              "lineno": 92,
              "line": "            offset = int(input_data.offset)"
            },
            {
              "lineno": 93,
              "line": "        except ValueError:"
            },
            {
              "lineno": 94,
              "line": "            offset = 0"
            },
            {
              "lineno": 95,
              "line": "        current_date = datetime.now() - timedelta(days=offset)"
            },
            {
              "lineno": 96,
              "line": "        yield \"date\", current_date.strftime(input_data.format)"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 90,
              "end_line": 91,
              "label": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        try:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 92,
                  "end_line": 92,
                  "label": "            offset = int(input_data.offset)",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 95,
                      "end_line": 96,
                      "label": "        current_date = datetime.now() - timedelta(days=offset)\n        yield \"date\", current_date.strftime(input_data.format)",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 4,
                  "start_line": 93,
                  "end_line": 94,
                  "label": "        except ValueError:\n            offset = 0",
                  "successors": [
                    {
                      "id": 5,
                      "start_line": 95,
                      "end_line": 96,
                      "label": "        current_date = datetime.now() - timedelta(days=offset)\n        yield \"date\", current_date.strftime(input_data.format)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 46,
          "end_line": 57,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 46,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 47,
              "line": "        trigger: str = SchemaField("
            },
            {
              "lineno": 48,
              "line": "            description=\"Trigger any data to output the current date\""
            },
            {
              "lineno": 49,
              "line": "        )"
            },
            {
              "lineno": 50,
              "line": "        offset: Union[int, str] = SchemaField("
            },
            {
              "lineno": 51,
              "line": "            title=\"Days Offset\","
            },
            {
              "lineno": 52,
              "line": "            description=\"Offset in days from the current date\","
            },
            {
              "lineno": 53,
              "line": "            default=0,"
            },
            {
              "lineno": 54,
              "line": "        )"
            },
            {
              "lineno": 55,
              "line": "        format: str = SchemaField("
            },
            {
              "lineno": 56,
              "line": "            description=\"Format of the date to output\", default=\"%Y-%m-%d\""
            },
            {
              "lineno": 57,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 46,
              "end_line": 57,
              "label": [
                "class Input(BlockSchema):",
                "    trigger: str = SchemaField(",
                "        description=\"Trigger any data to output the current date\"",
                "    )",
                "    offset: Union[int, str] = SchemaField(",
                "        title=\"Days Offset\",",
                "        description=\"Offset in days from the current date\",",
                "        default=0,",
                "    )",
                "    format: str = SchemaField(",
                "        description=\"Format of the date to output\", default=\"%Y-%m-%d\"",
                "    )"
              ],
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 59,
          "end_line": 62,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 59,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 60,
              "line": "        date: str = SchemaField("
            },
            {
              "lineno": 61,
              "line": "            description=\"Current date in the specified format (default: YYYY-MM-DD)\""
            },
            {
              "lineno": 62,
              "line": "        )"
            }
          ],
          "blocks": []
        }
      ],
      "simplified_code": [
        {
          "lineno": 45,
          "line": "class GetCurrentDateBlock(Block):"
        },
        {
          "lineno": 58,
          "line": ""
        },
        {
          "lineno": 63,
          "line": ""
        },
        {
          "lineno": 89,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 45,
          "end_line": 45,
          "label": "class GetCurrentDateBlock(Block):",
          "successors": []
        },
        {
          "id": 2,
          "start_line": 58,
          "end_line": 58,
          "label": "",
          "successors": []
        },
        {
          "id": 3,
          "start_line": 63,
          "end_line": 63,
          "label": "",
          "successors": []
        },
        {
          "id": 4,
          "start_line": 89,
          "end_line": 89,
          "label": "",
          "successors": []
        }
      ]
    },
    {
      "name": "GetCurrentDateAndTimeBlock",
      "type": "class",
      "start_line": 99,
      "end_line": 137,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 114,
          "end_line": 133,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 114,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 115,
              "line": "        super().__init__("
            },
            {
              "lineno": 116,
              "line": "            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\","
            },
            {
              "lineno": 117,
              "line": "            description=\"This block outputs the current date and time.\","
            },
            {
              "lineno": 118,
              "line": "            categories={BlockCategory.TEXT},"
            },
            {
              "lineno": 119,
              "line": "            input_schema=GetCurrentDateAndTimeBlock.Input,"
            },
            {
              "lineno": 120,
              "line": "            output_schema=GetCurrentDateAndTimeBlock.Output,"
            },
            {
              "lineno": 121,
              "line": "            test_input=["
            },
            {
              "lineno": 122,
              "line": "                {\"trigger\": \"Hello\"},"
            },
            {
              "lineno": 123,
              "line": "            ],"
            },
            {
              "lineno": 124,
              "line": "            test_output=["
            },
            {
              "lineno": 125,
              "line": "                ("
            },
            {
              "lineno": 126,
              "line": "                    \"date_time\","
            },
            {
              "lineno": 127,
              "line": "                    lambda t: abs("
            },
            {
              "lineno": 128,
              "line": "                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")"
            },
            {
              "lineno": 129,
              "line": "                    )"
            },
            {
              "lineno": 130,
              "line": "                    < timedelta(seconds=10),  # 10 seconds error margin."
            },
            {
              "lineno": 131,
              "line": "                ),"
            },
            {
              "lineno": 132,
              "line": "            ],"
            },
            {
              "lineno": 133,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 114,
              "end_line": 133,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\n            description=\"This block outputs the current date and time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateAndTimeBlock.Input,\n            output_schema=GetCurrentDateAndTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n            ],\n            test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ],\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 135,
          "end_line": 137,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 135,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 136,
              "line": "        current_date_time = time.strftime(input_data.format)"
            },
            {
              "lineno": 137,
              "line": "        yield \"date_time\", current_date_time"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 135,
              "end_line": 137,
              "label": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_date_time = time.strftime(input_data.format)\n        yield \"date_time\", current_date_time",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 100,
          "end_line": 107,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 100,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 101,
              "line": "        trigger: str = SchemaField("
            },
            {
              "lineno": 102,
              "line": "            description=\"Trigger any data to output the current date and time\""
            },
            {
              "lineno": 103,
              "line": "        )"
            },
            {
              "lineno": 104,
              "line": "        format: str = SchemaField("
            },
            {
              "lineno": 105,
              "line": "            description=\"Format of the date and time to output\","
            },
            {
              "lineno": 106,
              "line": "            default=\"%Y-%m-%d %H:%M:%S\","
            },
            {
              "lineno": 107,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 100,
              "end_line": 107,
              "label": "    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date and time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the date and time to output\",\n            default=\"%Y-%m-%d %H:%M:%S\",\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 109,
          "end_line": 112,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 109,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 110,
              "line": "        date_time: str = SchemaField("
            },
            {
              "lineno": 111,
              "line": "            description=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\""
            },
            {
              "lineno": 112,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 109,
              "end_line": 112,
              "label": "    class Output(BlockSchema):\n        date_time: str = SchemaField(\n            description=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\"\n        )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 99,
          "line": "class GetCurrentDateAndTimeBlock(Block):"
        },
        {
          "lineno": 108,
          "line": ""
        },
        {
          "lineno": 113,
          "line": ""
        },
        {
          "lineno": 134,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 99,
          "end_line": 99,
          "label": "class GetCurrentDateAndTimeBlock(Block):",
          "successors": []
        },
        {
          "id": 2,
          "start_line": 108,
          "end_line": 108,
          "label": "",
          "successors": []
        },
        {
          "id": 3,
          "start_line": 113,
          "end_line": 113,
          "label": "",
          "successors": []
        },
        {
          "id": 4,
          "start_line": 134,
          "end_line": 134,
          "label": "",
          "successors": []
        }
      ]
    },
    {
      "name": "CountdownTimerBlock",
      "type": "class",
      "start_line": 140,
      "end_line": 191,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 165,
          "end_line": 180,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 165,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 166,
              "line": "        super().__init__("
            },
            {
              "lineno": 167,
              "line": "            id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\","
            },
            {
              "lineno": 168,
              "line": "            description=\"This block triggers after a specified duration.\","
            },
            {
              "lineno": 169,
              "line": "            categories={BlockCategory.TEXT},"
            },
            {
              "lineno": 170,
              "line": "            input_schema=CountdownTimerBlock.Input,"
            },
            {
              "lineno": 171,
              "line": "            output_schema=CountdownTimerBlock.Output,"
            },
            {
              "lineno": 172,
              "line": "            test_input=["
            },
            {
              "lineno": 173,
              "line": "                {\"seconds\": 1},"
            },
            {
              "lineno": 174,
              "line": "                {\"input_message\": \"Custom message\"},"
            },
            {
              "lineno": 175,
              "line": "            ],"
            },
            {
              "lineno": 176,
              "line": "            test_output=["
            },
            {
              "lineno": 177,
              "line": "                (\"output_message\", \"timer finished\"),"
            },
            {
              "lineno": 178,
              "line": "                (\"output_message\", \"Custom message\"),"
            },
            {
              "lineno": 179,
              "line": "            ],"
            },
            {
              "lineno": 180,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 165,
              "end_line": 180,
              "label": "def __init__(self):\n    super().__init__(\n        id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\n        description=\"This block triggers after a specified duration.\",\n        categories={BlockCategory.TEXT},\n        input_schema=CountdownTimerBlock.Input,\n        output_schema=CountdownTimerBlock.Output,\n        test_input=[\n            {\"seconds\": 1},\n            {\"input_message\": \"Custom message\"},\n        ],\n        test_output=[\n            (\"output_message\", \"timer finished\"),\n            (\"output_message\", \"Custom message\"),\n        ],\n    )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 182,
          "end_line": 191,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 182,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 183,
              "line": "        seconds = int(input_data.seconds)"
            },
            {
              "lineno": 184,
              "line": "        minutes = int(input_data.minutes)"
            },
            {
              "lineno": 185,
              "line": "        hours = int(input_data.hours)"
            },
            {
              "lineno": 186,
              "line": "        days = int(input_data.days)"
            },
            {
              "lineno": 187,
              "line": ""
            },
            {
              "lineno": 188,
              "line": "        total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400"
            },
            {
              "lineno": 189,
              "line": ""
            },
            {
              "lineno": 190,
              "line": "        time.sleep(total_seconds)"
            },
            {
              "lineno": 191,
              "line": "        yield \"output_message\", input_data.input_message"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 182,
              "end_line": 191,
              "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n    seconds = int(input_data.seconds)\n    minutes = int(input_data.minutes)\n    hours = int(input_data.hours)\n    days = int(input_data.days)\n\n    total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400\n\n    time.sleep(total_seconds)\n    yield \"output_message\", input_data.input_message",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 141,
          "end_line": 158,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 141,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 142,
              "line": "        input_message: Any = SchemaField("
            },
            {
              "lineno": 143,
              "line": "            advanced=False,"
            },
            {
              "lineno": 144,
              "line": "            description=\"Message to output after the timer finishes\","
            },
            {
              "lineno": 145,
              "line": "            default=\"timer finished\","
            },
            {
              "lineno": 146,
              "line": "        )"
            },
            {
              "lineno": 147,
              "line": "        seconds: Union[int, str] = SchemaField("
            },
            {
              "lineno": 148,
              "line": "            advanced=False, description=\"Duration in seconds\", default=0"
            },
            {
              "lineno": 149,
              "line": "        )"
            },
            {
              "lineno": 150,
              "line": "        minutes: Union[int, str] = SchemaField("
            },
            {
              "lineno": 151,
              "line": "            advanced=False, description=\"Duration in minutes\", default=0"
            },
            {
              "lineno": 152,
              "line": "        )"
            },
            {
              "lineno": 153,
              "line": "        hours: Union[int, str] = SchemaField("
            },
            {
              "lineno": 154,
              "line": "            advanced=False, description=\"Duration in hours\", default=0"
            },
            {
              "lineno": 155,
              "line": "        )"
            },
            {
              "lineno": 156,
              "line": "        days: Union[int, str] = SchemaField("
            },
            {
              "lineno": 157,
              "line": "            advanced=False, description=\"Duration in days\", default=0"
            },
            {
              "lineno": 158,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 141,
              "end_line": 158,
              "label": "    class Input(BlockSchema):\n        input_message: Any = SchemaField(\n            advanced=False,\n            description=\"Message to output after the timer finishes\",\n            default=\"timer finished\",\n        )\n        seconds: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in seconds\", default=0\n        )\n        minutes: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in minutes\", default=0\n        )\n        hours: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in hours\", default=0\n        )\n        days: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in days\", default=0\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 160,
          "end_line": 163,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 160,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 161,
              "line": "        output_message: Any = SchemaField("
            },
            {
              "lineno": 162,
              "line": "            description=\"Message after the timer finishes\""
            },
            {
              "lineno": 163,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 160,
              "end_line": 163,
              "label": "    class Output(BlockSchema):\n        output_message: Any = SchemaField(\n            description=\"Message after the timer finishes\"\n        )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 140,
          "line": "class CountdownTimerBlock(Block):"
        },
        {
          "lineno": 159,
          "line": ""
        },
        {
          "lineno": 164,
          "line": ""
        },
        {
          "lineno": 181,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 140,
          "end_line": 140,
          "label": "class CountdownTimerBlock(Block):",
          "successors": [
            {
              "id": 2,
              "start_line": 159,
              "end_line": 159,
              "label": "",
              "successors": [
                {
                  "id": 3,
                  "start_line": 164,
                  "end_line": 164,
                  "label": "",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 181,
                      "end_line": 181,
                      "label": "",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import time"
    },
    {
      "lineno": 2,
      "line": "from datetime import datetime, timedelta"
    },
    {
      "lineno": 3,
      "line": "from typing import Any, Union"
    },
    {
      "lineno": 4,
      "line": ""
    },
    {
      "lineno": 5,
      "line": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema"
    },
    {
      "lineno": 6,
      "line": "from backend.data.model import SchemaField"
    },
    {
      "lineno": 7,
      "line": ""
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 43,
      "line": ""
    },
    {
      "lineno": 44,
      "line": ""
    },
    {
      "lineno": 97,
      "line": ""
    },
    {
      "lineno": 98,
      "line": ""
    },
    {
      "lineno": 138,
      "line": ""
    },
    {
      "lineno": 139,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "import time",
      "successors": []
    },
    {
      "id": 2,
      "start_line": 2,
      "end_line": 3,
      "label": "from datetime import datetime, timedelta\nfrom typing import Any, Union",
      "successors": []
    },
    {
      "id": 3,
      "start_line": 5,
      "end_line": 6,
      "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField",
      "successors": []
    }
  ]
}