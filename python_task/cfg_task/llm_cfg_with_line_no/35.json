{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 32,
  "functions": [
    {
      "name": "test_type_conversion",
      "type": "function",
      "start_line": 4,
      "end_line": 32,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 4,
          "line": "def test_type_conversion():"
        },
        {
          "lineno": 5,
          "line": "    assert convert(5.5, int) == 5"
        },
        {
          "lineno": 6,
          "line": "    assert convert(\"5.5\", int) == 5"
        },
        {
          "lineno": 7,
          "line": "    assert convert([1, 2, 3], int) == 3"
        },
        {
          "lineno": 8,
          "line": ""
        },
        {
          "lineno": 9,
          "line": "    assert convert(\"5.5\", float) == 5.5"
        },
        {
          "lineno": 10,
          "line": "    assert convert(5, float) == 5.0"
        },
        {
          "lineno": 11,
          "line": ""
        },
        {
          "lineno": 12,
          "line": "    assert convert(\"True\", bool) is True"
        },
        {
          "lineno": 13,
          "line": "    assert convert(\"False\", bool) is False"
        },
        {
          "lineno": 14,
          "line": ""
        },
        {
          "lineno": 15,
          "line": "    assert convert(5, str) == \"5\""
        },
        {
          "lineno": 16,
          "line": "    assert convert({\"a\": 1, \"b\": 2}, str) == '{\"a\": 1, \"b\": 2}'"
        },
        {
          "lineno": 17,
          "line": "    assert convert([1, 2, 3], str) == \"[1, 2, 3]\""
        },
        {
          "lineno": 18,
          "line": ""
        },
        {
          "lineno": 19,
          "line": "    assert convert(\"5\", list) == [\"5\"]"
        },
        {
          "lineno": 20,
          "line": "    assert convert((1, 2, 3), list) == [1, 2, 3]"
        },
        {
          "lineno": 21,
          "line": "    assert convert({1, 2, 3}, list) == [1, 2, 3]"
        },
        {
          "lineno": 22,
          "line": ""
        },
        {
          "lineno": 23,
          "line": "    assert convert(\"5\", dict) == {\"value\": 5}"
        },
        {
          "lineno": 24,
          "line": "    assert convert('{\"a\": 1, \"b\": 2}', dict) == {\"a\": 1, \"b\": 2}"
        },
        {
          "lineno": 25,
          "line": "    assert convert([1, 2, 3], dict) == {0: 1, 1: 2, 2: 3}"
        },
        {
          "lineno": 26,
          "line": "    assert convert((1, 2, 3), dict) == {0: 1, 1: 2, 2: 3}"
        },
        {
          "lineno": 27,
          "line": ""
        },
        {
          "lineno": 28,
          "line": "    from typing import List"
        },
        {
          "lineno": 29,
          "line": ""
        },
        {
          "lineno": 30,
          "line": "    assert convert(\"5\", List[int]) == [5]"
        },
        {
          "lineno": 31,
          "line": "    assert convert(\"[5,4,2]\", List[int]) == [5, 4, 2]"
        },
        {
          "lineno": 32,
          "line": "    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 4,
          "end_line": 32,
          "label": "def test_type_conversion():\n    assert convert(5.5, int) == 5\n    assert convert(\"5.5\", int) == 5\n    assert convert([1, 2, 3], int) == 3\n    \n    assert convert(\"5.5\", float) == 5.5\n    assert convert(5, float) == 5.0\n    \n    assert convert(\"True\", bool) is True\n    assert convert(\"False\", bool) is False\n    \n    assert convert(5, str) == \"5\"\n    assert convert({\"a\": 1, \"b\": 2}, str) == '{\"a\": 1, \"b\": 2}'\n    assert convert([1, 2, 3], str) == \"[1, 2, 3]\"\n    \n    assert convert(\"5\", list) == [\"5\"]\n    assert convert((1, 2, 3), list) == [1, 2, 3]\n    assert convert({1, 2, 3}, list) == [1, 2, 3]\n    \n    assert convert(\"5\", dict) == {\"value\": 5}\n    assert convert('{\"a\": 1, \"b\": 2}', dict) == {\"a\": 1, \"b\": 2}\n    assert convert([1, 2, 3], dict) == {0: 1, 1: 2, 2: 3}\n    assert convert((1, 2, 3), dict) == {0: 1, 1: 2, 2: 3}\n    \n    from typing import List\n    \n    assert convert(\"5\", List[int]) == [5]\n    assert convert(\"[5,4,2]\", List[int]) == [5, 4, 2]\n    assert convert([5, 4, 2], List[str]) == [\"5\", \"4\", \"2\"]",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "from backend.util.type import convert"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "... code of block ...",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 3,
          "label": "... code of block ...",
          "successors": []
        }
      ]
    }
  ]
}