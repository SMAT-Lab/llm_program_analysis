{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 577,
  "functions": [
    {
      "name": "get_profile",
      "type": "function",
      "start_line": 31,
      "end_line": 47,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 31,
          "line": "async def get_profile("
        },
        {
          "lineno": 32,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 33,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 34,
          "line": "    ]"
        },
        {
          "lineno": 35,
          "line": "):"
        },
        {
          "lineno": 36,
          "line": "    \"\"\""
        },
        {
          "lineno": 37,
          "line": "    Get the profile details for the authenticated user."
        },
        {
          "lineno": 38,
          "line": "    \"\"\""
        },
        {
          "lineno": 39,
          "line": "    try:"
        },
        {
          "lineno": 40,
          "line": "        profile = await backend.server.v2.store.db.get_user_profile(user_id)"
        },
        {
          "lineno": 41,
          "line": "        return profile"
        },
        {
          "lineno": 42,
          "line": "    except Exception:"
        },
        {
          "lineno": 43,
          "line": "        logger.exception(\"Exception occurred whilst getting user profile\")"
        },
        {
          "lineno": 44,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 45,
          "line": "            status_code=500,"
        },
        {
          "lineno": 46,
          "line": "            content={\"detail\": \"An error occurred while retrieving the user profile\"},"
        },
        {
          "lineno": 47,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 31,
          "end_line": 38,
          "label": "async def get_profile(\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ]\n):\n    \"\"\"\n    Get the profile details for the authenticated user.\n    \"\"\"",
          "successors": [
            {
              "id": 2,
              "start_line": 39,
              "end_line": 41,
              "label": "try:\n        profile = await backend.server.v2.store.db.get_user_profile(user_id)\n        return profile",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 42,
              "end_line": 47,
              "label": "except Exception:\n        logger.exception(\"Exception occurred whilst getting user profile\")\n        return fastapi.responses.JSONResponse(\n            status_code=500,\n            content={\"detail\": \"An error occurred while retrieving the user profile\"},\n        )",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "update_or_create_profile",
      "type": "function",
      "start_line": 56,
      "end_line": 85,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 56,
          "line": "async def update_or_create_profile("
        },
        {
          "lineno": 57,
          "line": "    profile: backend.server.v2.store.model.Profile,"
        },
        {
          "lineno": 58,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 59,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 60,
          "line": "    ],"
        },
        {
          "lineno": 61,
          "line": "):"
        },
        {
          "lineno": 62,
          "line": "    \"\"\""
        },
        {
          "lineno": 63,
          "line": "    Update the store profile for the authenticated user."
        },
        {
          "lineno": 64,
          "line": ""
        },
        {
          "lineno": 65,
          "line": "    Args:"
        },
        {
          "lineno": 66,
          "line": "        profile (Profile): The updated profile details"
        },
        {
          "lineno": 67,
          "line": "        user_id (str): ID of the authenticated user"
        },
        {
          "lineno": 68,
          "line": ""
        },
        {
          "lineno": 69,
          "line": "    Returns:"
        },
        {
          "lineno": 70,
          "line": "        CreatorDetails: The updated profile"
        },
        {
          "lineno": 71,
          "line": ""
        },
        {
          "lineno": 72,
          "line": "    Raises:"
        },
        {
          "lineno": 73,
          "line": "        HTTPException: If there is an error updating the profile"
        },
        {
          "lineno": 74,
          "line": "    \"\"\""
        },
        {
          "lineno": 75,
          "line": "    try:"
        },
        {
          "lineno": 76,
          "line": "        updated_profile = await backend.server.v2.store.db.update_or_create_profile("
        },
        {
          "lineno": 77,
          "line": "            user_id=user_id, profile=profile"
        },
        {
          "lineno": 78,
          "line": "        )"
        },
        {
          "lineno": 79,
          "line": "        return updated_profile"
        },
        {
          "lineno": 80,
          "line": "    except Exception:"
        },
        {
          "lineno": 81,
          "line": "        logger.exception(\"Exception occurred whilst updating profile\")"
        },
        {
          "lineno": 82,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 83,
          "line": "            status_code=500,"
        },
        {
          "lineno": 84,
          "line": "            content={\"detail\": \"An error occurred while updating the user profile\"},"
        },
        {
          "lineno": 85,
          "line": "        )"
        }
      ],
      "blocks": []
    },
    {
      "name": "get_agents",
      "type": "function",
      "start_line": 98,
      "end_line": 159,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 98,
          "line": "async def get_agents("
        },
        {
          "lineno": 99,
          "line": "    featured: bool = False,"
        },
        {
          "lineno": 100,
          "line": "    creator: str | None = None,"
        },
        {
          "lineno": 101,
          "line": "    sorted_by: str | None = None,"
        },
        {
          "lineno": 102,
          "line": "    search_query: str | None = None,"
        },
        {
          "lineno": 103,
          "line": "    category: str | None = None,"
        },
        {
          "lineno": 104,
          "line": "    page: int = 1,"
        },
        {
          "lineno": 105,
          "line": "    page_size: int = 20,"
        },
        {
          "lineno": 106,
          "line": "):"
        },
        {
          "lineno": 107,
          "line": "    \"\"\""
        },
        {
          "lineno": 108,
          "line": "    Get a paginated list of agents from the store with optional filtering and sorting."
        },
        {
          "lineno": 109,
          "line": ""
        },
        {
          "lineno": 110,
          "line": "    Args:"
        },
        {
          "lineno": 111,
          "line": "        featured (bool, optional): Filter to only show featured agents. Defaults to False."
        },
        {
          "lineno": 112,
          "line": "        creator (str | None, optional): Filter agents by creator username. Defaults to None."
        },
        {
          "lineno": 113,
          "line": "        sorted_by (str | None, optional): Sort agents by \"runs\" or \"rating\". Defaults to None."
        },
        {
          "lineno": 114,
          "line": "        search_query (str | None, optional): Search agents by name, subheading and description. Defaults to None."
        },
        {
          "lineno": 115,
          "line": "        category (str | None, optional): Filter agents by category. Defaults to None."
        },
        {
          "lineno": 116,
          "line": "        page (int, optional): Page number for pagination. Defaults to 1."
        },
        {
          "lineno": 117,
          "line": "        page_size (int, optional): Number of agents per page. Defaults to 20."
        },
        {
          "lineno": 118,
          "line": ""
        },
        {
          "lineno": 119,
          "line": "    Returns:"
        },
        {
          "lineno": 120,
          "line": "        StoreAgentsResponse: Paginated list of agents matching the filters"
        },
        {
          "lineno": 121,
          "line": ""
        },
        {
          "lineno": 122,
          "line": "    Raises:"
        },
        {
          "lineno": 123,
          "line": "        HTTPException: If page or page_size are less than 1"
        },
        {
          "lineno": 124,
          "line": ""
        },
        {
          "lineno": 125,
          "line": "    Used for:"
        },
        {
          "lineno": 126,
          "line": "    - Home Page Featured Agents"
        },
        {
          "lineno": 127,
          "line": "    - Home Page Top Agents"
        },
        {
          "lineno": 128,
          "line": "    - Search Results"
        },
        {
          "lineno": 129,
          "line": "    - Agent Details - Other Agents By Creator"
        },
        {
          "lineno": 130,
          "line": "    - Agent Details - Similar Agents"
        },
        {
          "lineno": 131,
          "line": "    - Creator Details - Agents By Creator"
        },
        {
          "lineno": 132,
          "line": "    \"\"\""
        },
        {
          "lineno": 133,
          "line": "    if page < 1:"
        },
        {
          "lineno": 134,
          "line": "        raise fastapi.HTTPException("
        },
        {
          "lineno": 135,
          "line": "            status_code=422, detail=\"Page must be greater than 0\""
        },
        {
          "lineno": 136,
          "line": "        )"
        },
        {
          "lineno": 137,
          "line": ""
        },
        {
          "lineno": 138,
          "line": "    if page_size < 1:"
        },
        {
          "lineno": 139,
          "line": "        raise fastapi.HTTPException("
        },
        {
          "lineno": 140,
          "line": "            status_code=422, detail=\"Page size must be greater than 0\""
        },
        {
          "lineno": 141,
          "line": "        )"
        },
        {
          "lineno": 142,
          "line": ""
        },
        {
          "lineno": 143,
          "line": "    try:"
        },
        {
          "lineno": 144,
          "line": "        agents = await backend.server.v2.store.db.get_store_agents("
        },
        {
          "lineno": 145,
          "line": "            featured=featured,"
        },
        {
          "lineno": 146,
          "line": "            creator=creator,"
        },
        {
          "lineno": 147,
          "line": "            sorted_by=sorted_by,"
        },
        {
          "lineno": 148,
          "line": "            search_query=search_query,"
        },
        {
          "lineno": 149,
          "line": "            category=category,"
        },
        {
          "lineno": 150,
          "line": "            page=page,"
        },
        {
          "lineno": 151,
          "line": "            page_size=page_size,"
        },
        {
          "lineno": 152,
          "line": "        )"
        },
        {
          "lineno": 153,
          "line": "        return agents"
        },
        {
          "lineno": 154,
          "line": "    except Exception:"
        },
        {
          "lineno": 155,
          "line": "        logger.exception(\"Exception occured whilst getting store agents\")"
        },
        {
          "lineno": 156,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 157,
          "line": "            status_code=500,"
        },
        {
          "lineno": 158,
          "line": "            content={\"detail\": \"An error occurred while retrieving the store agents\"},"
        },
        {
          "lineno": 159,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 98,
          "end_line": 106,
          "label": "async def get_agents(\n    featured: bool = False,\n    creator: str | None = None,\n    sorted_by: str | None = None,\n    search_query: str | None = None,\n    category: str | None = None,\n    page: int = 1,\n    page_size: int = 20,\n):",
          "successors": [
            {
              "id": 2,
              "start_line": 107,
              "end_line": 132,
              "label": "\"\"\"\n    Get a paginated list of agents from the store with optional filtering and sorting.\n\n    Args:\n        featured (bool, optional): Filter to only show featured agents. Defaults to False.\n        creator (str | None, optional): Filter agents by creator username. Defaults to None.\n        sorted_by (str | None, optional): Sort agents by \"runs\" or \"rating\". Defaults to None.\n        search_query (str | None, optional): Search agents by name, subheading and description. Defaults to None.\n        category (str | None, optional): Filter agents by category. Defaults to None.\n        page (int, optional): Page number for pagination. Defaults to 1.\n        page_size (int, optional): Number of agents per page. Defaults to 20.\n\n    Returns:\n        StoreAgentsResponse: Paginated list of agents matching the filters\n\n    Raises:\n        HTTPException: If page or page_size are less than 1\n\n    Used for:\n    - Home Page Featured Agents\n    - Home Page Top Agents\n    - Search Results\n    - Agent Details - Other Agents By Creator\n    - Agent Details - Similar Agents\n    - Creator Details - Agents By Creator\n    \"\"\"",
              "successors": [
                {
                  "id": 3,
                  "start_line": 133,
                  "end_line": 133,
                  "label": "if page < 1:",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 134,
                      "end_line": 136,
                      "label": "raise fastapi.HTTPException(\n    status_code=422, detail=\"Page must be greater than 0\"\n)",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "start_line": 138,
                      "end_line": 138,
                      "label": "if page_size < 1:",
                      "successors": [
                        {
                          "id": 6,
                          "start_line": 139,
                          "end_line": 141,
                          "label": "raise fastapi.HTTPException(\n    status_code=422, detail=\"Page size must be greater than 0\"\n)",
                          "successors": []
                        },
                        {
                          "id": 7,
                          "start_line": 143,
                          "end_line": 143,
                          "label": "try:",
                          "successors": [
                            {
                              "id": 8,
                              "start_line": 144,
                              "end_line": 153,
                              "label": "agents = await backend.server.v2.store.db.get_store_agents(\n    featured=featured,\n    creator=creator,\n    sorted_by=sorted_by,\n    search_query=search_query,\n    category=category,\n    page=page,\n    page_size=page_size,\n)\nreturn agents",
                              "successors": []
                            },
                            {
                              "id": 9,
                              "start_line": 154,
                              "end_line": 159,
                              "label": "except Exception:\n    logger.exception(\"Exception occured whilst getting store agents\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while retrieving the store agents\"},\n)",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "get_agent",
      "type": "function",
      "start_line": 167,
      "end_line": 188,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 167,
          "line": "async def get_agent(username: str, agent_name: str):"
        },
        {
          "lineno": 168,
          "line": "    \"\"\""
        },
        {
          "lineno": 169,
          "line": "    This is only used on the AgentDetails Page"
        },
        {
          "lineno": 170,
          "line": ""
        },
        {
          "lineno": 171,
          "line": "    It returns the store listing agents details."
        },
        {
          "lineno": 172,
          "line": "    \"\"\""
        },
        {
          "lineno": 173,
          "line": "    try:"
        },
        {
          "lineno": 174,
          "line": "        username = urllib.parse.unquote(username).lower()"
        },
        {
          "lineno": 175,
          "line": "        # URL decode the agent name since it comes from the URL path"
        },
        {
          "lineno": 176,
          "line": "        agent_name = urllib.parse.unquote(agent_name).lower()"
        },
        {
          "lineno": 177,
          "line": "        agent = await backend.server.v2.store.db.get_store_agent_details("
        },
        {
          "lineno": 178,
          "line": "            username=username, agent_name=agent_name"
        },
        {
          "lineno": 179,
          "line": "        )"
        },
        {
          "lineno": 180,
          "line": "        return agent"
        },
        {
          "lineno": 181,
          "line": "    except Exception:"
        },
        {
          "lineno": 182,
          "line": "        logger.exception(\"Exception occurred whilst getting store agent details\")"
        },
        {
          "lineno": 183,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 184,
          "line": "            status_code=500,"
        },
        {
          "lineno": 185,
          "line": "            content={"
        },
        {
          "lineno": 186,
          "line": "                \"detail\": \"An error occurred while retrieving the store agent details\""
        },
        {
          "lineno": 187,
          "line": "            },"
        },
        {
          "lineno": 188,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 167,
          "end_line": 172,
          "label": "async def get_agent(username: str, agent_name: str):\n    \"\"\"\n    This is only used on the AgentDetails Page\n\n    It returns the store listing agents details.\n    \"\"\"",
          "successors": [
            {
              "id": 2,
              "start_line": 173,
              "end_line": 180,
              "label": "try:\n    username = urllib.parse.unquote(username).lower()\n    # URL decode the agent name since it comes from the URL path\n    agent_name = urllib.parse.unquote(agent_name).lower()\n    agent = await backend.server.v2.store.db.get_store_agent_details(\n        username=username, agent_name=agent_name\n    )\n    return agent",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 181,
              "end_line": 188,
              "label": "except Exception:\n    logger.exception(\"Exception occurred whilst getting store agent details\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\n            \"detail\": \"An error occurred while retrieving the store agent details\"\n        },\n    )",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "create_review",
      "type": "function",
      "start_line": 197,
      "end_line": 234,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 197,
          "line": "async def create_review("
        },
        {
          "lineno": 198,
          "line": "    username: str,"
        },
        {
          "lineno": 199,
          "line": "    agent_name: str,"
        },
        {
          "lineno": 200,
          "line": "    review: backend.server.v2.store.model.StoreReviewCreate,"
        },
        {
          "lineno": 201,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 202,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 203,
          "line": "    ],"
        },
        {
          "lineno": 204,
          "line": "):"
        },
        {
          "lineno": 205,
          "line": "    \"\"\""
        },
        {
          "lineno": 206,
          "line": "    Create a review for a store agent."
        },
        {
          "lineno": 207,
          "line": ""
        },
        {
          "lineno": 208,
          "line": "    Args:"
        },
        {
          "lineno": 209,
          "line": "        username: Creator's username"
        },
        {
          "lineno": 210,
          "line": "        agent_name: Name/slug of the agent"
        },
        {
          "lineno": 211,
          "line": "        review: Review details including score and optional comments"
        },
        {
          "lineno": 212,
          "line": "        user_id: ID of authenticated user creating the review"
        },
        {
          "lineno": 213,
          "line": ""
        },
        {
          "lineno": 214,
          "line": "    Returns:"
        },
        {
          "lineno": 215,
          "line": "        The created review"
        },
        {
          "lineno": 216,
          "line": "    \"\"\""
        },
        {
          "lineno": 217,
          "line": "    try:"
        },
        {
          "lineno": 218,
          "line": "        username = urllib.parse.unquote(username).lower()"
        },
        {
          "lineno": 219,
          "line": "        agent_name = urllib.parse.unquote(agent_name)"
        },
        {
          "lineno": 220,
          "line": "        # Create the review"
        },
        {
          "lineno": 221,
          "line": "        created_review = await backend.server.v2.store.db.create_store_review("
        },
        {
          "lineno": 222,
          "line": "            user_id=user_id,"
        },
        {
          "lineno": 223,
          "line": "            store_listing_version_id=review.store_listing_version_id,"
        },
        {
          "lineno": 224,
          "line": "            score=review.score,"
        },
        {
          "lineno": 225,
          "line": "            comments=review.comments,"
        },
        {
          "lineno": 226,
          "line": "        )"
        },
        {
          "lineno": 227,
          "line": ""
        },
        {
          "lineno": 228,
          "line": "        return created_review"
        },
        {
          "lineno": 229,
          "line": "    except Exception:"
        },
        {
          "lineno": 230,
          "line": "        logger.exception(\"Exception occurred whilst creating store review\")"
        },
        {
          "lineno": 231,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 232,
          "line": "            status_code=500,"
        },
        {
          "lineno": 233,
          "line": "            content={\"detail\": \"An error occurred while creating the store review\"},"
        },
        {
          "lineno": 234,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 197,
          "end_line": 204,
          "label": "async def create_review(\n    username: str,\n    agent_name: str,\n    review: backend.server.v2.store.model.StoreReviewCreate,\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ],\n):",
          "successors": [
            {
              "id": 2,
              "start_line": 205,
              "end_line": 216,
              "label": "\"\"\"\n    Create a review for a store agent.\n\n    Args:\n        username: Creator's username\n        agent_name: Name/slug of the agent\n        review: Review details including score and optional comments\n        user_id: ID of authenticated user creating the review\n\n    Returns:\n        The created review\n    \"\"\"",
              "successors": [
                {
                  "id": 3,
                  "start_line": 217,
                  "end_line": 228,
                  "label": "try:\n    username = urllib.parse.unquote(username).lower()\n    agent_name = urllib.parse.unquote(agent_name)\n    # Create the review\n    created_review = await backend.server.v2.store.db.create_store_review(\n        user_id=user_id,\n        store_listing_version_id=review.store_listing_version_id,\n        score=review.score,\n        comments=review.comments,\n    )\n\n    return created_review",
                  "successors": []
                },
                {
                  "id": 4,
                  "start_line": 229,
                  "end_line": 234,
                  "label": "except Exception:\n    logger.exception(\"Exception occurred whilst creating store review\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while creating the store review\"},\n    )",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "get_creators",
      "type": "function",
      "start_line": 247,
      "end_line": 290,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 247,
          "line": "async def get_creators("
        },
        {
          "lineno": 248,
          "line": "    featured: bool = False,"
        },
        {
          "lineno": 249,
          "line": "    search_query: str | None = None,"
        },
        {
          "lineno": 250,
          "line": "    sorted_by: str | None = None,"
        },
        {
          "lineno": 251,
          "line": "    page: int = 1,"
        },
        {
          "lineno": 252,
          "line": "    page_size: int = 20,"
        },
        {
          "lineno": 253,
          "line": "):"
        },
        {
          "lineno": 254,
          "line": "    \"\"\""
        },
        {
          "lineno": 255,
          "line": "    This is needed for:"
        },
        {
          "lineno": 256,
          "line": "    - Home Page Featured Creators"
        },
        {
          "lineno": 257,
          "line": "    - Search Results Page"
        },
        {
          "lineno": 258,
          "line": ""
        },
        {
          "lineno": 259,
          "line": "    ---"
        },
        {
          "lineno": 260,
          "line": ""
        },
        {
          "lineno": 261,
          "line": "    To support this functionality we need:"
        },
        {
          "lineno": 262,
          "line": "    - featured: bool - to limit the list to just featured agents"
        },
        {
          "lineno": 263,
          "line": "    - search_query: str - vector search based on the creators profile description."
        },
        {
          "lineno": 264,
          "line": "    - sorted_by: [agent_rating, agent_runs] -"
        },
        {
          "lineno": 265,
          "line": "    \"\"\""
        },
        {
          "lineno": 266,
          "line": "    if page < 1:"
        },
        {
          "lineno": 267,
          "line": "        raise fastapi.HTTPException("
        },
        {
          "lineno": 268,
          "line": "            status_code=422, detail=\"Page must be greater than 0\""
        },
        {
          "lineno": 269,
          "line": "        )"
        },
        {
          "lineno": 270,
          "line": ""
        },
        {
          "lineno": 271,
          "line": "    if page_size < 1:"
        },
        {
          "lineno": 272,
          "line": "        raise fastapi.HTTPException("
        },
        {
          "lineno": 273,
          "line": "            status_code=422, detail=\"Page size must be greater than 0\""
        },
        {
          "lineno": 274,
          "line": "        )"
        },
        {
          "lineno": 275,
          "line": ""
        },
        {
          "lineno": 276,
          "line": "    try:"
        },
        {
          "lineno": 277,
          "line": "        creators = await backend.server.v2.store.db.get_store_creators("
        },
        {
          "lineno": 278,
          "line": "            featured=featured,"
        },
        {
          "lineno": 279,
          "line": "            search_query=search_query,"
        },
        {
          "lineno": 280,
          "line": "            sorted_by=sorted_by,"
        },
        {
          "lineno": 281,
          "line": "            page=page,"
        },
        {
          "lineno": 282,
          "line": "            page_size=page_size,"
        },
        {
          "lineno": 283,
          "line": "        )"
        },
        {
          "lineno": 284,
          "line": "        return creators"
        },
        {
          "lineno": 285,
          "line": "    except Exception:"
        },
        {
          "lineno": 286,
          "line": "        logger.exception(\"Exception occurred whilst getting store creators\")"
        },
        {
          "lineno": 287,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 288,
          "line": "            status_code=500,"
        },
        {
          "lineno": 289,
          "line": "            content={\"detail\": \"An error occurred while retrieving the store creators\"},"
        },
        {
          "lineno": 290,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 247,
          "end_line": 253,
          "label": "async def get_creators(\n    featured: bool = False,\n    search_query: str | None = None,\n    sorted_by: str | None = None,\n    page: int = 1,\n    page_size: int = 20,):",
          "successors": [
            {
              "id": 2,
              "start_line": 254,
              "end_line": 265,
              "label": "\"\"\"\n    This is needed for:\n    - Home Page Featured Creators\n    - Search Results Page\n\n    ---\n\n    To support this functionality we need:\n    - featured: bool - to limit the list to just featured agents\n    - search_query: str - vector search based on the creators profile description.\n    - sorted_by: [agent_rating, agent_runs] -\n    \"\"\"",
              "successors": [
                {
                  "id": 3,
                  "start_line": 266,
                  "end_line": 270,
                  "label": "if page < 1:\n        raise fastapi.HTTPException(\n            status_code=422, detail=\"Page must be greater than 0\"\n        )",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 271,
                      "end_line": 275,
                      "label": "if page_size < 1:\n        raise fastapi.HTTPException(\n            status_code=422, detail=\"Page size must be greater than 0\"\n        )",
                      "successors": [
                        {
                          "id": 5,
                          "start_line": 276,
                          "end_line": 284,
                          "label": "try:\n        creators = await backend.server.v2.store.db.get_store_creators(\n            featured=featured,\n            search_query=search_query,\n            sorted_by=sorted_by,\n            page=page,\n            page_size=page_size,\n        )\n        return creators",
                          "successors": [
                            {
                              "id": 6,
                              "start_line": 285,
                              "end_line": 290,
                              "label": "except Exception:\n        logger.exception(\"Exception occurred whilst getting store creators\")\n        return fastapi.responses.JSONResponse(\n            status_code=500,\n            content={\"detail\": \"An error occurred while retrieving the store creators\"},\n        )",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "get_creator",
      "type": "function",
      "start_line": 298,
      "end_line": 318,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 298,
          "line": "async def get_creator("
        },
        {
          "lineno": 299,
          "line": "    username: str,"
        },
        {
          "lineno": 300,
          "line": "):"
        },
        {
          "lineno": 301,
          "line": "    \"\"\""
        },
        {
          "lineno": 302,
          "line": "    Get the details of a creator"
        },
        {
          "lineno": 303,
          "line": "    - Creator Details Page"
        },
        {
          "lineno": 304,
          "line": "    \"\"\""
        },
        {
          "lineno": 305,
          "line": "    try:"
        },
        {
          "lineno": 306,
          "line": "        username = urllib.parse.unquote(username).lower()"
        },
        {
          "lineno": 307,
          "line": "        creator = await backend.server.v2.store.db.get_store_creator_details("
        },
        {
          "lineno": 308,
          "line": "            username=username.lower()"
        },
        {
          "lineno": 309,
          "line": "        )"
        },
        {
          "lineno": 310,
          "line": "        return creator"
        },
        {
          "lineno": 311,
          "line": "    except Exception:"
        },
        {
          "lineno": 312,
          "line": "        logger.exception(\"Exception occurred whilst getting creator details\")"
        },
        {
          "lineno": 313,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 314,
          "line": "            status_code=500,"
        },
        {
          "lineno": 315,
          "line": "            content={"
        },
        {
          "lineno": 316,
          "line": "                \"detail\": \"An error occurred while retrieving the creator details\""
        },
        {
          "lineno": 317,
          "line": "            },"
        },
        {
          "lineno": 318,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 298,
          "end_line": 305,
          "label": "async def get_creator(\n    username: str,\n):\n    \"\"\"\n    Get the details of a creator\n    - Creator Details Page\n    \"\"\"\n    try:",
          "successors": [
            {
              "id": 2,
              "start_line": 306,
              "end_line": 310,
              "label": "username = urllib.parse.unquote(username).lower()\ncreator = await backend.server.v2.store.db.get_store_creator_details(\n    username=username.lower()\n)\nreturn creator",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 311,
              "end_line": 318,
              "label": "except Exception:\n    logger.exception(\"Exception occurred whilst getting creator details\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\n            \"detail\": \"An error occurred while retrieving the creator details\"\n        },\n    )",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "get_my_agents",
      "type": "function",
      "start_line": 330,
      "end_line": 343,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 330,
          "line": "async def get_my_agents("
        },
        {
          "lineno": 331,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 332,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 333,
          "line": "    ]"
        },
        {
          "lineno": 334,
          "line": "):"
        },
        {
          "lineno": 335,
          "line": "    try:"
        },
        {
          "lineno": 336,
          "line": "        agents = await backend.server.v2.store.db.get_my_agents(user_id)"
        },
        {
          "lineno": 337,
          "line": "        return agents"
        },
        {
          "lineno": 338,
          "line": "    except Exception:"
        },
        {
          "lineno": 339,
          "line": "        logger.exception(\"Exception occurred whilst getting my agents\")"
        },
        {
          "lineno": 340,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 341,
          "line": "            status_code=500,"
        },
        {
          "lineno": 342,
          "line": "            content={\"detail\": \"An error occurred while retrieving the my agents\"},"
        },
        {
          "lineno": 343,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 330,
          "end_line": 334,
          "label": "async def get_my_agents(\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ]\n):",
          "successors": [
            {
              "id": 2,
              "start_line": 335,
              "end_line": 337,
              "label": "try:\n    agents = await backend.server.v2.store.db.get_my_agents(user_id)\n    return agents",
              "successors": [
                {
                  "id": 3,
                  "start_line": 338,
                  "end_line": 343,
                  "label": "except Exception:\n    logger.exception(\"Exception occurred whilst getting my agents\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while retrieving the my agents\"},\n    )",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "delete_submission",
      "type": "function",
      "start_line": 352,
      "end_line": 379,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 352,
          "line": "async def delete_submission("
        },
        {
          "lineno": 353,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 354,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 355,
          "line": "    ],"
        },
        {
          "lineno": 356,
          "line": "    submission_id: str,"
        },
        {
          "lineno": 357,
          "line": "):"
        },
        {
          "lineno": 358,
          "line": "    \"\"\""
        },
        {
          "lineno": 359,
          "line": "    Delete a store listing submission."
        },
        {
          "lineno": 360,
          "line": ""
        },
        {
          "lineno": 361,
          "line": "    Args:"
        },
        {
          "lineno": 362,
          "line": "        user_id (str): ID of the authenticated user"
        },
        {
          "lineno": 363,
          "line": "        submission_id (str): ID of the submission to be deleted"
        },
        {
          "lineno": 364,
          "line": ""
        },
        {
          "lineno": 365,
          "line": "    Returns:"
        },
        {
          "lineno": 366,
          "line": "        bool: True if the submission was successfully deleted, False otherwise"
        },
        {
          "lineno": 367,
          "line": "    \"\"\""
        },
        {
          "lineno": 368,
          "line": "    try:"
        },
        {
          "lineno": 369,
          "line": "        result = await backend.server.v2.store.db.delete_store_submission("
        },
        {
          "lineno": 370,
          "line": "            user_id=user_id,"
        },
        {
          "lineno": 371,
          "line": "            submission_id=submission_id,"
        },
        {
          "lineno": 372,
          "line": "        )"
        },
        {
          "lineno": 373,
          "line": "        return result"
        },
        {
          "lineno": 374,
          "line": "    except Exception:"
        },
        {
          "lineno": 375,
          "line": "        logger.exception(\"Exception occurred whilst deleting store submission\")"
        },
        {
          "lineno": 376,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 377,
          "line": "            status_code=500,"
        },
        {
          "lineno": 378,
          "line": "            content={\"detail\": \"An error occurred while deleting the store submission\"},"
        },
        {
          "lineno": 379,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 352,
          "end_line": 357,
          "label": "async def delete_submission(\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ],\n    submission_id: str,\n):",
          "successors": [
            {
              "id": 2,
              "start_line": 368,
              "end_line": 373,
              "label": "try:\n    result = await backend.server.v2.store.db.delete_store_submission(\n        user_id=user_id,\n        submission_id=submission_id,\n    )\n    return result",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 374,
              "end_line": 379,
              "label": "except Exception:\n    logger.exception(\"Exception occurred whilst deleting store submission\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while deleting the store submission\"},\n    )",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "get_submissions",
      "type": "function",
      "start_line": 388,
      "end_line": 432,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 388,
          "line": "async def get_submissions("
        },
        {
          "lineno": 389,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 390,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 391,
          "line": "    ],"
        },
        {
          "lineno": 392,
          "line": "    page: int = 1,"
        },
        {
          "lineno": 393,
          "line": "    page_size: int = 20,"
        },
        {
          "lineno": 394,
          "line": "):"
        },
        {
          "lineno": 395,
          "line": "    \"\"\""
        },
        {
          "lineno": 396,
          "line": "    Get a paginated list of store submissions for the authenticated user."
        },
        {
          "lineno": 397,
          "line": ""
        },
        {
          "lineno": 398,
          "line": "    Args:"
        },
        {
          "lineno": 399,
          "line": "        user_id (str): ID of the authenticated user"
        },
        {
          "lineno": 400,
          "line": "        page (int, optional): Page number for pagination. Defaults to 1."
        },
        {
          "lineno": 401,
          "line": "        page_size (int, optional): Number of submissions per page. Defaults to 20."
        },
        {
          "lineno": 402,
          "line": ""
        },
        {
          "lineno": 403,
          "line": "    Returns:"
        },
        {
          "lineno": 404,
          "line": "        StoreListingsResponse: Paginated list of store submissions"
        },
        {
          "lineno": 405,
          "line": ""
        },
        {
          "lineno": 406,
          "line": "    Raises:"
        },
        {
          "lineno": 407,
          "line": "        HTTPException: If page or page_size are less than 1"
        },
        {
          "lineno": 408,
          "line": "    \"\"\""
        },
        {
          "lineno": 409,
          "line": "    if page < 1:"
        },
        {
          "lineno": 410,
          "line": "        raise fastapi.HTTPException("
        },
        {
          "lineno": 411,
          "line": "            status_code=422, detail=\"Page must be greater than 0\""
        },
        {
          "lineno": 412,
          "line": "        )"
        },
        {
          "lineno": 413,
          "line": ""
        },
        {
          "lineno": 414,
          "line": "    if page_size < 1:"
        },
        {
          "lineno": 415,
          "line": "        raise fastapi.HTTPException("
        },
        {
          "lineno": 416,
          "line": "            status_code=422, detail=\"Page size must be greater than 0\""
        },
        {
          "lineno": 417,
          "line": "        )"
        },
        {
          "lineno": 418,
          "line": "    try:"
        },
        {
          "lineno": 419,
          "line": "        listings = await backend.server.v2.store.db.get_store_submissions("
        },
        {
          "lineno": 420,
          "line": "            user_id=user_id,"
        },
        {
          "lineno": 421,
          "line": "            page=page,"
        },
        {
          "lineno": 422,
          "line": "            page_size=page_size,"
        },
        {
          "lineno": 423,
          "line": "        )"
        },
        {
          "lineno": 424,
          "line": "        return listings"
        },
        {
          "lineno": 425,
          "line": "    except Exception:"
        },
        {
          "lineno": 426,
          "line": "        logger.exception(\"Exception occurred whilst getting store submissions\")"
        },
        {
          "lineno": 427,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 428,
          "line": "            status_code=500,"
        },
        {
          "lineno": 429,
          "line": "            content={"
        },
        {
          "lineno": 430,
          "line": "                \"detail\": \"An error occurred while retrieving the store submissions\""
        },
        {
          "lineno": 431,
          "line": "            },"
        },
        {
          "lineno": 432,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 388,
          "end_line": 408,
          "label": "async def get_submissions(\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ],\n    page: int = 1,\n    page_size: int = 20,\n):\n    \"\"\"\n    Get a paginated list of store submissions for the authenticated user.\n\n    Args:\n        user_id (str): ID of the authenticated user\n        page (int, optional): Page number for pagination. Defaults to 1.\n        page_size (int, optional): Number of submissions per page. Defaults to 20.\n\n    Returns:\n        StoreListingsResponse: Paginated list of store submissions\n\n    Raises:\n        HTTPException: If page or page_size are less than 1\n    \"\"\"",
          "successors": [
            {
              "id": 2,
              "start_line": 409,
              "end_line": 412,
              "label": "if page < 1:\n    raise fastapi.HTTPException(\n        status_code=422, detail=\"Page must be greater than 0\"\n    )",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 414,
              "end_line": 417,
              "label": "if page_size < 1:\n    raise fastapi.HTTPException(\n        status_code=422, detail=\"Page size must be greater than 0\"\n    )",
              "successors": []
            },
            {
              "id": 4,
              "start_line": 418,
              "end_line": 424,
              "label": "try:\n    listings = await backend.server.v2.store.db.get_store_submissions(\n        user_id=user_id,\n        page=page,\n        page_size=page_size,\n    )\n    return listings",
              "successors": [
                {
                  "id": 5,
                  "start_line": 425,
                  "end_line": 432,
                  "label": "except Exception:\n    logger.exception(\"Exception occurred whilst getting store submissions\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\n            \"detail\": \"An error occurred while retrieving the store submissions\"\n        },\n    )",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "create_submission",
      "type": "function",
      "start_line": 441,
      "end_line": 479,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 441,
          "line": "async def create_submission("
        },
        {
          "lineno": 442,
          "line": "    submission_request: backend.server.v2.store.model.StoreSubmissionRequest,"
        },
        {
          "lineno": 443,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 444,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 445,
          "line": "    ],"
        },
        {
          "lineno": 446,
          "line": "):"
        },
        {
          "lineno": 447,
          "line": "    \"\"\""
        },
        {
          "lineno": 448,
          "line": "    Create a new store listing submission."
        },
        {
          "lineno": 449,
          "line": ""
        },
        {
          "lineno": 450,
          "line": "    Args:"
        },
        {
          "lineno": 451,
          "line": "        submission_request (StoreSubmissionRequest): The submission details"
        },
        {
          "lineno": 452,
          "line": "        user_id (str): ID of the authenticated user submitting the listing"
        },
        {
          "lineno": 453,
          "line": ""
        },
        {
          "lineno": 454,
          "line": "    Returns:"
        },
        {
          "lineno": 455,
          "line": "        StoreSubmission: The created store submission"
        },
        {
          "lineno": 456,
          "line": ""
        },
        {
          "lineno": 457,
          "line": "    Raises:"
        },
        {
          "lineno": 458,
          "line": "        HTTPException: If there is an error creating the submission"
        },
        {
          "lineno": 459,
          "line": "    \"\"\""
        },
        {
          "lineno": 460,
          "line": "    try:"
        },
        {
          "lineno": 461,
          "line": "        submission = await backend.server.v2.store.db.create_store_submission("
        },
        {
          "lineno": 462,
          "line": "            user_id=user_id,"
        },
        {
          "lineno": 463,
          "line": "            agent_id=submission_request.agent_id,"
        },
        {
          "lineno": 464,
          "line": "            agent_version=submission_request.agent_version,"
        },
        {
          "lineno": 465,
          "line": "            slug=submission_request.slug,"
        },
        {
          "lineno": 466,
          "line": "            name=submission_request.name,"
        },
        {
          "lineno": 467,
          "line": "            video_url=submission_request.video_url,"
        },
        {
          "lineno": 468,
          "line": "            image_urls=submission_request.image_urls,"
        },
        {
          "lineno": 469,
          "line": "            description=submission_request.description,"
        },
        {
          "lineno": 470,
          "line": "            sub_heading=submission_request.sub_heading,"
        },
        {
          "lineno": 471,
          "line": "            categories=submission_request.categories,"
        },
        {
          "lineno": 472,
          "line": "        )"
        },
        {
          "lineno": 473,
          "line": "        return submission"
        },
        {
          "lineno": 474,
          "line": "    except Exception:"
        },
        {
          "lineno": 475,
          "line": "        logger.exception(\"Exception occurred whilst creating store submission\")"
        },
        {
          "lineno": 476,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 477,
          "line": "            status_code=500,"
        },
        {
          "lineno": 478,
          "line": "            content={\"detail\": \"An error occurred while creating the store submission\"},"
        },
        {
          "lineno": 479,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 441,
          "end_line": 460,
          "label": "async def create_submission(\n    submission_request: backend.server.v2.store.model.StoreSubmissionRequest,\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ],\n):\n    \"\"\"\n    Create a new store listing submission.\n\n    Args:\n        submission_request (StoreSubmissionRequest): The submission details\n        user_id (str): ID of the authenticated user submitting the listing\n\n    Returns:\n        StoreSubmission: The created store submission\n\n    Raises:\n        HTTPException: If there is an error creating the submission\n    \"\"\"\n    try:",
          "successors": [
            {
              "id": 2,
              "start_line": 461,
              "end_line": 472,
              "label": "submission = await backend.server.v2.store.db.create_store_submission(\n    user_id=user_id,\n    agent_id=submission_request.agent_id,\n    agent_version=submission_request.agent_version,\n    slug=submission_request.slug,\n    name=submission_request.name,\n    video_url=submission_request.video_url,\n    image_urls=submission_request.image_urls,\n    description=submission_request.description,\n    sub_heading=submission_request.sub_heading,\n    categories=submission_request.categories,\n)",
              "successors": [
                {
                  "id": 3,
                  "start_line": 473,
                  "end_line": 473,
                  "label": "return submission",
                  "successors": []
                }
              ]
            },
            {
              "id": 4,
              "start_line": 474,
              "end_line": 479,
              "label": "except Exception:\n    logger.exception(\"Exception occurred whilst creating store submission\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while creating the store submission\"},\n    )",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "upload_submission_media",
      "type": "function",
      "start_line": 487,
      "end_line": 516,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 487,
          "line": "async def upload_submission_media("
        },
        {
          "lineno": 488,
          "line": "    file: fastapi.UploadFile,"
        },
        {
          "lineno": 489,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 490,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 491,
          "line": "    ],"
        },
        {
          "lineno": 492,
          "line": "):"
        },
        {
          "lineno": 493,
          "line": "    \"\"\""
        },
        {
          "lineno": 494,
          "line": "    Upload media (images/videos) for a store listing submission."
        },
        {
          "lineno": 495,
          "line": ""
        },
        {
          "lineno": 496,
          "line": "    Args:"
        },
        {
          "lineno": 497,
          "line": "        file (UploadFile): The media file to upload"
        },
        {
          "lineno": 498,
          "line": "        user_id (str): ID of the authenticated user uploading the media"
        },
        {
          "lineno": 499,
          "line": ""
        },
        {
          "lineno": 500,
          "line": "    Returns:"
        },
        {
          "lineno": 501,
          "line": "        str: URL of the uploaded media file"
        },
        {
          "lineno": 502,
          "line": ""
        },
        {
          "lineno": 503,
          "line": "    Raises:"
        },
        {
          "lineno": 504,
          "line": "        HTTPException: If there is an error uploading the media"
        },
        {
          "lineno": 505,
          "line": "    \"\"\""
        },
        {
          "lineno": 506,
          "line": "    try:"
        },
        {
          "lineno": 507,
          "line": "        media_url = await backend.server.v2.store.media.upload_media("
        },
        {
          "lineno": 508,
          "line": "            user_id=user_id, file=file"
        },
        {
          "lineno": 509,
          "line": "        )"
        },
        {
          "lineno": 510,
          "line": "        return media_url"
        },
        {
          "lineno": 511,
          "line": "    except Exception:"
        },
        {
          "lineno": 512,
          "line": "        logger.exception(\"Exception occurred whilst uploading submission media\")"
        },
        {
          "lineno": 513,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 514,
          "line": "            status_code=500,"
        },
        {
          "lineno": 515,
          "line": "            content={\"detail\": \"An error occurred while uploading the media file\"},"
        },
        {
          "lineno": 516,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 487,
          "end_line": 505,
          "label": "async def upload_submission_media(\n    file: fastapi.UploadFile,\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ],\n):\n    \"\"\"\n    Upload media (images/videos) for a store listing submission.\n\n    Args:\n        file (UploadFile): The media file to upload\n        user_id (str): ID of the authenticated user uploading the media\n\n    Returns:\n        str: URL of the uploaded media file\n\n    Raises:\n        HTTPException: If there is an error uploading the media\n    \"\"\"",
          "successors": [
            {
              "id": 2,
              "start_line": 506,
              "end_line": 510,
              "label": "try:\n    media_url = await backend.server.v2.store.media.upload_media(\n        user_id=user_id, file=file\n    )\n    return media_url",
              "successors": []
            },
            {
              "id": 3,
              "start_line": 511,
              "end_line": 516,
              "label": "except Exception:\n    logger.exception(\"Exception occurred whilst uploading submission media\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while uploading the media file\"},\n    )",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "generate_image",
      "type": "function",
      "start_line": 524,
      "end_line": 577,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 524,
          "line": "async def generate_image("
        },
        {
          "lineno": 525,
          "line": "    agent_id: str,"
        },
        {
          "lineno": 526,
          "line": "    user_id: typing.Annotated["
        },
        {
          "lineno": 527,
          "line": "        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)"
        },
        {
          "lineno": 528,
          "line": "    ],"
        },
        {
          "lineno": 529,
          "line": ") -> fastapi.responses.Response:"
        },
        {
          "lineno": 530,
          "line": "    \"\"\""
        },
        {
          "lineno": 531,
          "line": "    Generate an image for a store listing submission."
        },
        {
          "lineno": 532,
          "line": ""
        },
        {
          "lineno": 533,
          "line": "    Args:"
        },
        {
          "lineno": 534,
          "line": "        agent_id (str): ID of the agent to generate an image for"
        },
        {
          "lineno": 535,
          "line": "        user_id (str): ID of the authenticated user"
        },
        {
          "lineno": 536,
          "line": ""
        },
        {
          "lineno": 537,
          "line": "    Returns:"
        },
        {
          "lineno": 538,
          "line": "        JSONResponse: JSON containing the URL of the generated image"
        },
        {
          "lineno": 539,
          "line": "    \"\"\""
        },
        {
          "lineno": 540,
          "line": "    try:"
        },
        {
          "lineno": 541,
          "line": "        agent = await backend.data.graph.get_graph(agent_id, user_id=user_id)"
        },
        {
          "lineno": 542,
          "line": ""
        },
        {
          "lineno": 543,
          "line": "        if not agent:"
        },
        {
          "lineno": 544,
          "line": "            raise fastapi.HTTPException("
        },
        {
          "lineno": 545,
          "line": "                status_code=404, detail=f\"Agent with ID {agent_id} not found\""
        },
        {
          "lineno": 546,
          "line": "            )"
        },
        {
          "lineno": 547,
          "line": "        # Use .jpeg here since we are generating JPEG images"
        },
        {
          "lineno": 548,
          "line": "        filename = f\"agent_{agent_id}.jpeg\""
        },
        {
          "lineno": 549,
          "line": ""
        },
        {
          "lineno": 550,
          "line": "        existing_url = await backend.server.v2.store.media.check_media_exists("
        },
        {
          "lineno": 551,
          "line": "            user_id, filename"
        },
        {
          "lineno": 552,
          "line": "        )"
        },
        {
          "lineno": 553,
          "line": "        if existing_url:"
        },
        {
          "lineno": 554,
          "line": "            logger.info(f\"Using existing image for agent {agent_id}\")"
        },
        {
          "lineno": 555,
          "line": "            return fastapi.responses.JSONResponse(content={\"image_url\": existing_url})"
        },
        {
          "lineno": 556,
          "line": "        # Generate agent image as JPEG"
        },
        {
          "lineno": 557,
          "line": "        image = await backend.server.v2.store.image_gen.generate_agent_image("
        },
        {
          "lineno": 558,
          "line": "            agent=agent"
        },
        {
          "lineno": 559,
          "line": "        )"
        },
        {
          "lineno": 560,
          "line": ""
        },
        {
          "lineno": 561,
          "line": "        # Create UploadFile with the correct filename and content_type"
        },
        {
          "lineno": 562,
          "line": "        image_file = fastapi.UploadFile("
        },
        {
          "lineno": 563,
          "line": "            file=image,"
        },
        {
          "lineno": 564,
          "line": "            filename=filename,"
        },
        {
          "lineno": 565,
          "line": "        )"
        },
        {
          "lineno": 566,
          "line": ""
        },
        {
          "lineno": 567,
          "line": "        image_url = await backend.server.v2.store.media.upload_media("
        },
        {
          "lineno": 568,
          "line": "            user_id=user_id, file=image_file, use_file_name=True"
        },
        {
          "lineno": 569,
          "line": "        )"
        },
        {
          "lineno": 570,
          "line": ""
        },
        {
          "lineno": 571,
          "line": "        return fastapi.responses.JSONResponse(content={\"image_url\": image_url})"
        },
        {
          "lineno": 572,
          "line": "    except Exception:"
        },
        {
          "lineno": 573,
          "line": "        logger.exception(\"Exception occurred whilst generating submission image\")"
        },
        {
          "lineno": 574,
          "line": "        return fastapi.responses.JSONResponse("
        },
        {
          "lineno": 575,
          "line": "            status_code=500,"
        },
        {
          "lineno": 576,
          "line": "            content={\"detail\": \"An error occurred while generating the image\"},"
        },
        {
          "lineno": 577,
          "line": "        )"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 524,
          "end_line": 540,
          "label": "async def generate_image(\n    agent_id: str,\n    user_id: typing.Annotated[\n        str, fastapi.Depends(autogpt_libs.auth.depends.get_user_id)\n    ],\n) -> fastapi.responses.Response:\n    \"\"\"\n    Generate an image for a store listing submission.\n\n    Args:\n        agent_id (str): ID of the agent to generate an image for\n        user_id (str): ID of the authenticated user\n\n    Returns:\n        JSONResponse: JSON containing the URL of the generated image\n    \"\"\"\n    try:",
          "successors": [
            {
              "id": 2,
              "start_line": 541,
              "end_line": 542,
              "label": "agent = await backend.data.graph.get_graph(agent_id, user_id=user_id)\n\n",
              "successors": [
                {
                  "id": 3,
                  "start_line": 543,
                  "end_line": 546,
                  "label": "if not agent:\n    raise fastapi.HTTPException(\n        status_code=404, detail=f\"Agent with ID {agent_id} not found\"\n    )",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 547,
                      "end_line": 569,
                      "label": "# Use .jpeg here since we are generating JPEG images\nfilename = f\"agent_{agent_id}.jpeg\"\n\nexisting_url = await backend.server.v2.store.media.check_media_exists(\n    user_id, filename\n)\nif existing_url:\n    logger.info(f\"Using existing image for agent {agent_id}\")\n    return fastapi.responses.JSONResponse(content={\"image_url\": existing_url})\n# Generate agent image as JPEG\nimage = await backend.server.v2.store.image_gen.generate_agent_image(\n    agent=agent\n)\n\n# Create UploadFile with the correct filename and content_type\nimage_file = fastapi.UploadFile(\n    file=image,\n    filename=filename,\n)\n\nimage_url = await backend.server.v2.store.media.upload_media(\n    user_id=user_id, file=image_file, use_file_name=True\n)\n\nreturn fastapi.responses.JSONResponse(content={\"image_url\": image_url})",
                      "successors": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 5,
              "start_line": 572,
              "end_line": 577,
              "label": "except Exception:\n    logger.exception(\"Exception occurred whilst generating submission image\")\n    return fastapi.responses.JSONResponse(\n        status_code=500,\n        content={\"detail\": \"An error occurred while generating the image\"},\n    )",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import logging"
    },
    {
      "lineno": 2,
      "line": "import typing"
    },
    {
      "lineno": 3,
      "line": "import urllib.parse"
    },
    {
      "lineno": 4,
      "line": ""
    },
    {
      "lineno": 5,
      "line": "import autogpt_libs.auth.depends"
    },
    {
      "lineno": 6,
      "line": "import autogpt_libs.auth.middleware"
    },
    {
      "lineno": 7,
      "line": "import fastapi"
    },
    {
      "lineno": 8,
      "line": "import fastapi.responses"
    },
    {
      "lineno": 9,
      "line": ""
    },
    {
      "lineno": 10,
      "line": "import backend.data.graph"
    },
    {
      "lineno": 11,
      "line": "import backend.server.v2.store.db"
    },
    {
      "lineno": 12,
      "line": "import backend.server.v2.store.image_gen"
    },
    {
      "lineno": 13,
      "line": "import backend.server.v2.store.media"
    },
    {
      "lineno": 14,
      "line": "import backend.server.v2.store.model"
    },
    {
      "lineno": 15,
      "line": ""
    },
    {
      "lineno": 16,
      "line": "logger = logging.getLogger(__name__)"
    },
    {
      "lineno": 17,
      "line": ""
    },
    {
      "lineno": 18,
      "line": "router = fastapi.APIRouter()"
    },
    {
      "lineno": 19,
      "line": ""
    },
    {
      "lineno": 20,
      "line": ""
    },
    {
      "lineno": 21,
      "line": "##############################################"
    },
    {
      "lineno": 22,
      "line": "############### Profile Endpoints ############"
    },
    {
      "lineno": 23,
      "line": "##############################################"
    },
    {
      "lineno": 24,
      "line": ""
    },
    {
      "lineno": 25,
      "line": ""
    },
    {
      "lineno": 26,
      "line": "@router.get("
    },
    {
      "lineno": 27,
      "line": "    \"/profile\","
    },
    {
      "lineno": 28,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 29,
      "line": "    response_model=backend.server.v2.store.model.ProfileDetails,"
    },
    {
      "lineno": 30,
      "line": ")"
    },
    {
      "lineno": 48,
      "line": ""
    },
    {
      "lineno": 49,
      "line": ""
    },
    {
      "lineno": 50,
      "line": "@router.post("
    },
    {
      "lineno": 51,
      "line": "    \"/profile\","
    },
    {
      "lineno": 52,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 53,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 54,
      "line": "    response_model=backend.server.v2.store.model.CreatorDetails,"
    },
    {
      "lineno": 55,
      "line": ")"
    },
    {
      "lineno": 86,
      "line": ""
    },
    {
      "lineno": 87,
      "line": ""
    },
    {
      "lineno": 88,
      "line": "##############################################"
    },
    {
      "lineno": 89,
      "line": "############### Agent Endpoints ##############"
    },
    {
      "lineno": 90,
      "line": "##############################################"
    },
    {
      "lineno": 91,
      "line": ""
    },
    {
      "lineno": 92,
      "line": ""
    },
    {
      "lineno": 93,
      "line": "@router.get("
    },
    {
      "lineno": 94,
      "line": "    \"/agents\","
    },
    {
      "lineno": 95,
      "line": "    tags=[\"store\", \"public\"],"
    },
    {
      "lineno": 96,
      "line": "    response_model=backend.server.v2.store.model.StoreAgentsResponse,"
    },
    {
      "lineno": 97,
      "line": ")"
    },
    {
      "lineno": 160,
      "line": ""
    },
    {
      "lineno": 161,
      "line": ""
    },
    {
      "lineno": 162,
      "line": "@router.get("
    },
    {
      "lineno": 163,
      "line": "    \"/agents/{username}/{agent_name}\","
    },
    {
      "lineno": 164,
      "line": "    tags=[\"store\", \"public\"],"
    },
    {
      "lineno": 165,
      "line": "    response_model=backend.server.v2.store.model.StoreAgentDetails,"
    },
    {
      "lineno": 166,
      "line": ")"
    },
    {
      "lineno": 189,
      "line": ""
    },
    {
      "lineno": 190,
      "line": ""
    },
    {
      "lineno": 191,
      "line": "@router.post("
    },
    {
      "lineno": 192,
      "line": "    \"/agents/{username}/{agent_name}/review\","
    },
    {
      "lineno": 193,
      "line": "    tags=[\"store\"],"
    },
    {
      "lineno": 194,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 195,
      "line": "    response_model=backend.server.v2.store.model.StoreReview,"
    },
    {
      "lineno": 196,
      "line": ")"
    },
    {
      "lineno": 235,
      "line": ""
    },
    {
      "lineno": 236,
      "line": ""
    },
    {
      "lineno": 237,
      "line": "##############################################"
    },
    {
      "lineno": 238,
      "line": "############# Creator Endpoints #############"
    },
    {
      "lineno": 239,
      "line": "##############################################"
    },
    {
      "lineno": 240,
      "line": ""
    },
    {
      "lineno": 241,
      "line": ""
    },
    {
      "lineno": 242,
      "line": "@router.get("
    },
    {
      "lineno": 243,
      "line": "    \"/creators\","
    },
    {
      "lineno": 244,
      "line": "    tags=[\"store\", \"public\"],"
    },
    {
      "lineno": 245,
      "line": "    response_model=backend.server.v2.store.model.CreatorsResponse,"
    },
    {
      "lineno": 246,
      "line": ")"
    },
    {
      "lineno": 291,
      "line": ""
    },
    {
      "lineno": 292,
      "line": ""
    },
    {
      "lineno": 293,
      "line": "@router.get("
    },
    {
      "lineno": 294,
      "line": "    \"/creator/{username}\","
    },
    {
      "lineno": 295,
      "line": "    tags=[\"store\", \"public\"],"
    },
    {
      "lineno": 296,
      "line": "    response_model=backend.server.v2.store.model.CreatorDetails,"
    },
    {
      "lineno": 297,
      "line": ")"
    },
    {
      "lineno": 319,
      "line": ""
    },
    {
      "lineno": 320,
      "line": ""
    },
    {
      "lineno": 321,
      "line": "############################################"
    },
    {
      "lineno": 322,
      "line": "############# Store Submissions ###############"
    },
    {
      "lineno": 323,
      "line": "############################################"
    },
    {
      "lineno": 324,
      "line": "@router.get("
    },
    {
      "lineno": 325,
      "line": "    \"/myagents\","
    },
    {
      "lineno": 326,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 327,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 328,
      "line": "    response_model=backend.server.v2.store.model.MyAgentsResponse,"
    },
    {
      "lineno": 329,
      "line": ")"
    },
    {
      "lineno": 344,
      "line": ""
    },
    {
      "lineno": 345,
      "line": ""
    },
    {
      "lineno": 346,
      "line": "@router.delete("
    },
    {
      "lineno": 347,
      "line": "    \"/submissions/{submission_id}\","
    },
    {
      "lineno": 348,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 349,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 350,
      "line": "    response_model=bool,"
    },
    {
      "lineno": 351,
      "line": ")"
    },
    {
      "lineno": 380,
      "line": ""
    },
    {
      "lineno": 381,
      "line": ""
    },
    {
      "lineno": 382,
      "line": "@router.get("
    },
    {
      "lineno": 383,
      "line": "    \"/submissions\","
    },
    {
      "lineno": 384,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 385,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 386,
      "line": "    response_model=backend.server.v2.store.model.StoreSubmissionsResponse,"
    },
    {
      "lineno": 387,
      "line": ")"
    },
    {
      "lineno": 433,
      "line": ""
    },
    {
      "lineno": 434,
      "line": ""
    },
    {
      "lineno": 435,
      "line": "@router.post("
    },
    {
      "lineno": 436,
      "line": "    \"/submissions\","
    },
    {
      "lineno": 437,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 438,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 439,
      "line": "    response_model=backend.server.v2.store.model.StoreSubmission,"
    },
    {
      "lineno": 440,
      "line": ")"
    },
    {
      "lineno": 480,
      "line": ""
    },
    {
      "lineno": 481,
      "line": ""
    },
    {
      "lineno": 482,
      "line": "@router.post("
    },
    {
      "lineno": 483,
      "line": "    \"/submissions/media\","
    },
    {
      "lineno": 484,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 485,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 486,
      "line": ")"
    },
    {
      "lineno": 517,
      "line": ""
    },
    {
      "lineno": 518,
      "line": ""
    },
    {
      "lineno": 519,
      "line": "@router.post("
    },
    {
      "lineno": 520,
      "line": "    \"/submissions/generate_image\","
    },
    {
      "lineno": 521,
      "line": "    tags=[\"store\", \"private\"],"
    },
    {
      "lineno": 522,
      "line": "    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],"
    },
    {
      "lineno": 523,
      "line": ")"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 18,
      "label": "import logging\nimport typing\nimport urllib.parse\n\nimport autogpt_libs.auth.depends\nimport autogpt_libs.auth.middleware\nimport fastapi\nimport fastapi.responses\n\nimport backend.data.graph\nimport backend.server.v2.store.db\nimport backend.server.v2.store.image_gen\nimport backend.server.v2.store.media\nimport backend.server.v2.store.model\n\nlogger = logging.getLogger(__name__)\n\nrouter = fastapi.APIRouter()",
      "successors": [
        {
          "id": 2,
          "start_line": 26,
          "end_line": 30,
          "label": "@router.get(\n    \"/profile\",\n    tags=[\"store\", \"private\"],\n    response_model=backend.server.v2.store.model.ProfileDetails,\n)",
          "successors": [
            {
              "id": 3,
              "start_line": 50,
              "end_line": 55,
              "label": "@router.post(\n    \"/profile\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],\n    response_model=backend.server.v2.store.model.CreatorDetails,\n)",
              "successors": [
                {
                  "id": 4,
                  "start_line": 93,
                  "end_line": 97,
                  "label": "@router.get(\n    \"/agents\",\n    tags=[\"store\", \"public\"],\n    response_model=backend.server.v2.store.model.StoreAgentsResponse,\n)",
                  "successors": [
                    {
                      "id": 5,
                      "start_line": 162,
                      "end_line": 166,
                      "label": "@router.get(\n    \"/agents/{username}/{agent_name}\",\n    tags=[\"store\", \"public\"],\n    response_model=backend.server.v2.store.model.StoreAgentDetails,\n)",
                      "successors": [
                        {
                          "id": 6,
                          "start_line": 191,
                          "end_line": 196,
                          "label": "@router.post(\n    \"/agents/{username}/{agent_name}/review\",\n    tags=[\"store\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],\n    response_model=backend.server.v2.store.model.StoreReview,\n)",
                          "successors": [
                            {
                              "id": 7,
                              "start_line": 242,
                              "end_line": 246,
                              "label": "@router.get(\n    \"/creators\",\n    tags=[\"store\", \"public\"],\n    response_model=backend.server.v2.store.model.CreatorsResponse,\n)",
                              "successors": [
                                {
                                  "id": 8,
                                  "start_line": 293,
                                  "end_line": 297,
                                  "label": "@router.get(\n    \"/creator/{username}\",\n    tags=[\"store\", \"public\"],\n    response_model=backend.server.v2.store.model.CreatorDetails,\n)",
                                  "successors": [
                                    {
                                      "id": 9,
                                      "start_line": 324,
                                      "end_line": 329,
                                      "label": "@router.get(\n    \"/myagents\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth_middleware)],\n    response_model=backend.server.v2.store.model.MyAgentsResponse,\n)",
                                      "successors": [
                                        {
                                          "id": 10,
                                          "start_line": 346,
                                          "end_line": 351,
                                          "label": "@router.delete(\n    \"/submissions/{submission_id}\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth.middleware)],\n    response_model=bool,\n)",
                                          "successors": [
                                            {
                                              "id": 11,
                                              "start_line": 382,
                                              "end_line": 387,
                                              "label": "@router.get(\n    \"/submissions\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth.middleware)],\n    response_model=backend.server.v2.store.model.StoreSubmissionsResponse,\n)",
                                              "successors": [
                                                {
                                                  "id": 12,
                                                  "start_line": 435,
                                                  "end_line": 440,
                                                  "label": "@router.post(\n    \"/submissions\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth.middleware)],\n    response_model=backend.server.v2.store.model.StoreSubmission,\n)",
                                                  "successors": [
                                                    {
                                                      "id": 13,
                                                      "start_line": 482,
                                                      "end_line": 486,
                                                      "label": "@router.post(\n    \"/submissions/media\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth.middleware)],\n)",
                                                      "successors": [
                                                        {
                                                          "id": 14,
                                                          "start_line": 519,
                                                          "end_line": 523,
                                                          "label": "@router.post(\n    \"/submissions/generate_image\",\n    tags=[\"store\", \"private\"],\n    dependencies=[fastapi.Depends(autogpt_libs.auth.middleware.auth.middleware)],\n)",
                                                          "successors": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}