{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 55,
  "functions": [
    {
      "name": "bitwise_addition_recursive",
      "type": "function",
      "start_line": 7,
      "end_line": 49,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "def bitwise_addition_recursive(number: int, other_number: int) -> int:"
        },
        {
          "lineno": 8,
          "line": "    \"\"\""
        },
        {
          "lineno": 9,
          "line": "    >>> bitwise_addition_recursive(4, 5)"
        },
        {
          "lineno": 10,
          "line": "    9"
        },
        {
          "lineno": 11,
          "line": "    >>> bitwise_addition_recursive(8, 9)"
        },
        {
          "lineno": 12,
          "line": "    17"
        },
        {
          "lineno": 13,
          "line": "    >>> bitwise_addition_recursive(0, 4)"
        },
        {
          "lineno": 14,
          "line": "    4"
        },
        {
          "lineno": 15,
          "line": "    >>> bitwise_addition_recursive(4.5, 9)"
        },
        {
          "lineno": 16,
          "line": "    Traceback (most recent call last):"
        },
        {
          "lineno": 17,
          "line": "        ..."
        },
        {
          "lineno": 18,
          "line": "    TypeError: Both arguments MUST be integers!"
        },
        {
          "lineno": 19,
          "line": "    >>> bitwise_addition_recursive('4', 9)"
        },
        {
          "lineno": 20,
          "line": "    Traceback (most recent call last):"
        },
        {
          "lineno": 21,
          "line": "        ..."
        },
        {
          "lineno": 22,
          "line": "    TypeError: Both arguments MUST be integers!"
        },
        {
          "lineno": 23,
          "line": "    >>> bitwise_addition_recursive('4.5', 9)"
        },
        {
          "lineno": 24,
          "line": "    Traceback (most recent call last):"
        },
        {
          "lineno": 25,
          "line": "        ..."
        },
        {
          "lineno": 26,
          "line": "    TypeError: Both arguments MUST be integers!"
        },
        {
          "lineno": 27,
          "line": "    >>> bitwise_addition_recursive(-1, 9)"
        },
        {
          "lineno": 28,
          "line": "    Traceback (most recent call last):"
        },
        {
          "lineno": 29,
          "line": "        ..."
        },
        {
          "lineno": 30,
          "line": "    ValueError: Both arguments MUST be non-negative!"
        },
        {
          "lineno": 31,
          "line": "    >>> bitwise_addition_recursive(1, -9)"
        },
        {
          "lineno": 32,
          "line": "    Traceback (most recent call last):"
        },
        {
          "lineno": 33,
          "line": "        ..."
        },
        {
          "lineno": 34,
          "line": "    ValueError: Both arguments MUST be non-negative!"
        },
        {
          "lineno": 35,
          "line": "    \"\"\""
        },
        {
          "lineno": 36,
          "line": ""
        },
        {
          "lineno": 37,
          "line": "    if not isinstance(number, int) or not isinstance(other_number, int):"
        },
        {
          "lineno": 38,
          "line": "        raise TypeError(\"Both arguments MUST be integers!\")"
        },
        {
          "lineno": 39,
          "line": ""
        },
        {
          "lineno": 40,
          "line": "    if number < 0 or other_number < 0:"
        },
        {
          "lineno": 41,
          "line": "        raise ValueError(\"Both arguments MUST be non-negative!\")"
        },
        {
          "lineno": 42,
          "line": ""
        },
        {
          "lineno": 43,
          "line": "    bitwise_sum = number ^ other_number"
        },
        {
          "lineno": 44,
          "line": "    carry = number & other_number"
        },
        {
          "lineno": 45,
          "line": ""
        },
        {
          "lineno": 46,
          "line": "    if carry == 0:"
        },
        {
          "lineno": 47,
          "line": "        return bitwise_sum"
        },
        {
          "lineno": 48,
          "line": ""
        },
        {
          "lineno": 49,
          "line": "    return bitwise_addition_recursive(bitwise_sum, carry << 1)"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 7,
          "label": "def bitwise_addition_recursive(number: int, other_number: int) -> int:",
          "successors": [
            {
              "id": 2,
              "start_line": 8,
              "end_line": 35,
              "label": "    \"\"\"\n    >>> bitwise_addition_recursive(4, 5)\n    9\n    >>> bitwise_addition_recursive(8, 9)\n    17\n    >>> bitwise_addition_recursive(0, 4)\n    4\n    >>> bitwise_addition_recursive(4.5, 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive('4.5', 9)\n    Traceback (most recent call last):\n        ...\n    TypeError: Both arguments MUST be integers!\n    >>> bitwise_addition_recursive(-1, 9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    >>> bitwise_addition_recursive(1, -9)\n    Traceback (most recent call last):\n        ...\n    ValueError: Both arguments MUST be non-negative!\n    \"\"\"",
              "successors": [
                {
                  "id": 3,
                  "start_line": 37,
                  "end_line": 38,
                  "label": "    if not isinstance(number, int) or not isinstance(other_number, int):\n        raise TypeError(\"Both arguments MUST be integers!\")",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 40,
                      "end_line": 41,
                      "label": "    if number < 0 or other_number < 0:\n        raise ValueError(\"Both arguments MUST be non-negative!\")",
                      "successors": [
                        {
                          "id": 5,
                          "start_line": 43,
                          "end_line": 47,
                          "label": "    bitwise_sum = number ^ other_number\n    carry = number & other_number\n\n    if carry == 0:\n        return bitwise_sum",
                          "successors": [
                            {
                              "id": 6,
                              "start_line": 49,
                              "end_line": 49,
                              "label": "    return bitwise_addition_recursive(bitwise_sum, carry << 1)",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "\"\"\""
    },
    {
      "lineno": 2,
      "line": "Calculates the sum of two non-negative integers using bitwise operators"
    },
    {
      "lineno": 3,
      "line": "Wikipedia explanation: https://en.wikipedia.org/wiki/Binary_number"
    },
    {
      "lineno": 4,
      "line": "\"\"\""
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": ""
    },
    {
      "lineno": 50,
      "line": ""
    },
    {
      "lineno": 51,
      "line": ""
    },
    {
      "lineno": 52,
      "line": "if __name__ == \"__main__\":"
    },
    {
      "lineno": 53,
      "line": "    import doctest"
    },
    {
      "lineno": 54,
      "line": ""
    },
    {
      "lineno": 55,
      "line": "    doctest.testmod()"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 4,
      "label": "\"\"\"\nCalculates the sum of two non-negative integers using bitwise operators\nWikipedia explanation: https://en.wikipedia.org/wiki/Binary_number\n\"\"\"",
      "successors": [
        {
          "id": 2,
          "start_line": 5,
          "end_line": 6,
          "label": "\n",
          "successors": [
            {
              "id": 3,
              "start_line": 50,
              "end_line": 51,
              "label": "\n",
              "successors": [
                {
                  "id": 4,
                  "start_line": 52,
                  "end_line": 52,
                  "label": "if __name__ == \"__main__\":",
                  "successors": [
                    {
                      "id": 5,
                      "start_line": 53,
                      "end_line": 53,
                      "label": "    import doctest",
                      "successors": [
                        {
                          "id": 6,
                          "start_line": 54,
                          "end_line": 55,
                          "label": "\n    doctest.testmod()",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}