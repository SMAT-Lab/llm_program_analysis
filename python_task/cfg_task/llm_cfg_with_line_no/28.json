{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 33,
  "functions": [],
  "classes": [
    {
      "name": "BlockCostType",
      "type": "class",
      "start_line": 9,
      "end_line": 13,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 9,
          "line": "class BlockCostType(str, Enum):"
        },
        {
          "lineno": 10,
          "line": "    RUN = \"run\"  # cost X credits per run"
        },
        {
          "lineno": 11,
          "line": "    BYTE = \"byte\"  # cost X credits per byte"
        },
        {
          "lineno": 12,
          "line": "    SECOND = \"second\"  # cost X credits per second"
        },
        {
          "lineno": 13,
          "line": "    DOLLAR = \"dollar\"  # cost X dollars per run"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 9,
          "end_line": 13,
          "label": "class BlockCostType(str, Enum):\n    RUN = \"run\"  # cost X credits per run\n    BYTE = \"byte\"  # cost X credits per byte\n    SECOND = \"second\"  # cost X credits per second\n    DOLLAR = \"dollar\"  # cost X dollars per run",
          "successors": []
        }
      ]
    },
    {
      "name": "BlockCost",
      "type": "class",
      "start_line": 16,
      "end_line": 33,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 21,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 21,
              "line": "    def __init__("
            },
            {
              "lineno": 22,
              "line": "        self,"
            },
            {
              "lineno": 23,
              "line": "        cost_amount: int,"
            },
            {
              "lineno": 24,
              "line": "        cost_type: BlockCostType = BlockCostType.RUN,"
            },
            {
              "lineno": 25,
              "line": "        cost_filter: Optional[BlockInput] = None,"
            },
            {
              "lineno": 26,
              "line": "        **data: Any,"
            },
            {
              "lineno": 27,
              "line": "    ) -> None:"
            },
            {
              "lineno": 28,
              "line": "        super().__init__("
            },
            {
              "lineno": 29,
              "line": "            cost_amount=cost_amount,"
            },
            {
              "lineno": 30,
              "line": "            cost_filter=cost_filter or {},"
            },
            {
              "lineno": 31,
              "line": "            cost_type=cost_type,"
            },
            {
              "lineno": 32,
              "line": "            **data,"
            },
            {
              "lineno": 33,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 21,
              "end_line": 27,
              "label": "    def __init__(\n        self,\n        cost_amount: int,\n        cost_type: BlockCostType = BlockCostType.RUN,\n        cost_filter: Optional[BlockInput] = None,\n        **data: Any,\n    ) -> None:",
              "successors": [
                {
                  "id": 2,
                  "start_line": 28,
                  "end_line": 33,
                  "label": "        super().__init__(\n            cost_amount=cost_amount,\n            cost_filter=cost_filter or {},\n            cost_type=cost_type,\n            **data,\n        )",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 16,
          "line": "class BlockCost(BaseModel):"
        },
        {
          "lineno": 17,
          "line": "    cost_amount: int"
        },
        {
          "lineno": 18,
          "line": "    cost_filter: BlockInput"
        },
        {
          "lineno": 19,
          "line": "    cost_type: BlockCostType"
        },
        {
          "lineno": 20,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 16,
          "end_line": 19,
          "label": "class BlockCost(BaseModel):\n    cost_amount: int\n    cost_filter: BlockInput\n    cost_type: BlockCostType",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "from enum import Enum"
    },
    {
      "lineno": 2,
      "line": "from typing import Any, Optional"
    },
    {
      "lineno": 3,
      "line": ""
    },
    {
      "lineno": 4,
      "line": "from pydantic import BaseModel"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": "from backend.data.block import BlockInput"
    },
    {
      "lineno": 7,
      "line": ""
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 14,
      "line": ""
    },
    {
      "lineno": 15,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "from enum import Enum",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 2,
          "label": "from typing import Any, Optional",
          "successors": [
            {
              "id": 3,
              "start_line": 4,
              "end_line": 4,
              "label": "from pydantic import BaseModel",
              "successors": [
                {
                  "id": 4,
                  "start_line": 6,
                  "end_line": 6,
                  "label": "from backend.data.block import BlockInput",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}