{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 30,
  "functions": [],
  "classes": [
    {
      "name": "LogConfig",
      "type": "class",
      "start_line": 4,
      "end_line": 30,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 4,
          "line": "class LogConfig(BaseModel):"
        },
        {
          "lineno": 5,
          "line": "    \"\"\"Logging configuration to be set for the server\"\"\""
        },
        {
          "lineno": 6,
          "line": ""
        },
        {
          "lineno": 7,
          "line": "    LOGGER_NAME: str = \"marketplace\""
        },
        {
          "lineno": 8,
          "line": "    LOG_FORMAT: str = \"%(levelprefix)s | %(asctime)s | %(message)s\""
        },
        {
          "lineno": 9,
          "line": "    LOG_LEVEL: str = \"DEBUG\""
        },
        {
          "lineno": 10,
          "line": ""
        },
        {
          "lineno": 11,
          "line": "    # Logging config"
        },
        {
          "lineno": 12,
          "line": "    version: int = 1"
        },
        {
          "lineno": 13,
          "line": "    disable_existing_loggers: bool = False"
        },
        {
          "lineno": 14,
          "line": "    formatters: dict = {"
        },
        {
          "lineno": 15,
          "line": "        \"default\": {"
        },
        {
          "lineno": 16,
          "line": "            \"()\": \"uvicorn.logging.DefaultFormatter\","
        },
        {
          "lineno": 17,
          "line": "            \"fmt\": LOG_FORMAT,"
        },
        {
          "lineno": 18,
          "line": "            \"datefmt\": \"%Y-%m-%d %H:%M:%S\","
        },
        {
          "lineno": 19,
          "line": "        },"
        },
        {
          "lineno": 20,
          "line": "    }"
        },
        {
          "lineno": 21,
          "line": "    handlers: dict = {"
        },
        {
          "lineno": 22,
          "line": "        \"default\": {"
        },
        {
          "lineno": 23,
          "line": "            \"formatter\": \"default\","
        },
        {
          "lineno": 24,
          "line": "            \"class\": \"logging.StreamHandler\","
        },
        {
          "lineno": 25,
          "line": "            \"stream\": \"ext://sys.stderr\","
        },
        {
          "lineno": 26,
          "line": "        },"
        },
        {
          "lineno": 27,
          "line": "    }"
        },
        {
          "lineno": 28,
          "line": "    loggers: dict = {"
        },
        {
          "lineno": 29,
          "line": "        LOGGER_NAME: {\"handlers\": [\"default\"], \"level\": LOG_LEVEL},"
        },
        {
          "lineno": 30,
          "line": "    }"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 4,
          "end_line": 9,
          "label": "class LogConfig(BaseModel):\n    \"\"\"Logging configuration to be set for the server\"\"\"\n\n    LOGGER_NAME: str = \"marketplace\"\n    LOG_FORMAT: str = \"%(levelprefix)s | %(asctime)s | %(message)s\"\n    LOG_LEVEL: str = \"DEBUG\"",
          "successors": [
            {
              "id": 2,
              "start_line": 11,
              "end_line": 30,
              "label": "    # Logging config\n    version: int = 1\n    disable_existing_loggers: bool = False\n    formatters: dict = {\n        \"default\": {\n            \"()\": \"uvicorn.logging.DefaultFormatter\",\n            \"fmt\": LOG_FORMAT,\n            \"datefmt\": \"%Y-%m-%d %H:%M:%S\",\n        },\n    }\n    handlers: dict = {\n        \"default\": {\n            \"formatter\": \"default\",\n            \"class\": \"logging.StreamHandler\",\n            \"stream\": \"ext://sys.stderr\",\n        },\n    }\n    loggers: dict = {\n        LOGGER_NAME: {\"handlers\": [\"default\"], \"level\": LOG_LEVEL},\n    }",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "from pydantic import BaseModel"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "from pydantic import BaseModel",
      "successors": []
    }
  ]
}