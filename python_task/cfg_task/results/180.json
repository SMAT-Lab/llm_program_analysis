{
  "edge_analysis": {
    "static_total": 24,
    "llm_total": 24,
    "matched_edges": {
      "exact_matches": 18,
      "partial_matches": 4
    },
    "accuracy_metrics": {
      "precision": 0.75,
      "recall": 0.75,
      "f1_score": 0.75
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "Edge 4: [Source] #8\\nuser = await prisma.user.find_unique(where={'id': user_id}) => [Target] #10\\nif not user:",
      "Edge 10: [Source] #24\\nuser = await prisma.user.create(data={'id': DEFAULT_USER_ID,\\n 'email': 'default@example.com',\\n 'name': 'Default User'}) => [Target] #25\\nreturn User.model_validate(user)",
      "Edge 11: [Source] #30\\nuser = await User.prisma().find_unique_or_raise(where={'id': user_id}) => [Target] #31\\nmetadata = cast(UserMetadataRaw, user.metadata)\\nreturn UserMetadata.model_validate(metadata)",
      "Edge 12: [Source] #39\\nuser = await User.prisma().find_unique_or_raise(where={'id': user_id}) => [Target] #40\\nencrypted_integrations = user.integrations\\nif not encrypted_integrations:"
    ],
    "extra_blocks": [
      "Edge 6: [Source] user = await prisma.user.find_unique(where={'id': user_id})\\n if not user: => [Target] return User.model_validate(user)",
      "Edge 8: [Source] user = await prisma.user.find_unique(where={'id': \\'id\\': user_id})\\n if not user: => [Target] user = await prisma.user.create(data={\\'id\\': DEFAULT_USER_ID,\\n \\'email\\': 'default@example.com',\\n \\'name\\': 'Default User'})",
      "Edge 9: [Source] user = await prisma.user.find_unique(where={'id': user_id})\\n if not user: => [Target] return User.model_validate(user)",
      "Edge 13: [Source] async def create_default_user() -> Optional[User]:\\n user = await prisma.user.find_unique(where={'id': DEFAULT_USER_ID}) => [Target] return User.model_validate(user)"
    ]
  }
}