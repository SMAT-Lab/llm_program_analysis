{
  "edge_analysis": {
    "static_total": 12,
    "llm_total": 15,
    "matched_edges": {
      "exact_matches": 9,
      "partial_matches": 1
    },
    "accuracy_metrics": {
      "precision": 0.6,
      "recall": 0.75,
      "f1_score": 0.6666666666666666
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "#66\\nif call.rank not in (Rank.OPERATOR, Rank.SUPERVISOR, Rank.DIRECTOR):",
      "#68\\nemployee = None\\nif call.rank == Rank.OPERATOR:",
      "#70\\nemployee = self._dispatch_call(call, self.operators)",
      "#71\\nif call.rank == Rank.SUPERVISOR or employee is None:",
      "#72\\nemployee = self._dispatch_call(call, self.supervisors)",
      "#73\\nif call.rank == Rank.DIRECTOR or employee is None:",
      "#74\\nemployee = self._dispatch_call(call, self.directors)",
      "#75\\nif employee is None:",
      "#76\\nself.queued_calls.append(call)",
      "#80\\nfor employee in employees:",
      "#81\\nif employee.call is None:",
      "#82\\nreturn None",
      "#83\\nemployee.take_call(call)\\nreturn employee"
    ],
    "extra_blocks": [
      "class Employee(metaclass=ABCMeta):",
      "def complete_call(self):",
      "class Call(object):",
      "def dispatch_call(self, call):",
      "_dispatch_call(self, employees):",
      "def notify_call_escalated(self, call):"
    ]
  }
}