{
  "edge_analysis": {
    "static_total": 38,
    "llm_total": 42,
    "matched_edges": {
      "exact_matches": 21,
      "partial_matches": 10
    },
    "accuracy_metrics": {
      "precision": 0.5,
      "recall": 0.5526315789473685,
      "f1_score": 0.525
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "Edge 0: [Source] #23\nif message.author == client.user: => [Target] #24\nreturn",
      "Edge 1: [Source] #23\nif message.author == client.user: => [Target] #25\nself.output_data = message.content\nself.channel_name = message.channel.name\nself.username = message.author name\nif message.attachments:",
      "Edge 2: [Source] #25\nself.output_data = message content\nself.channel_name = message channel.name\nself.username = message.author name\nif message.attachments: => [Target] #27\nattachment = message.attachments[0]\nif attachment.filename.endswth(('.txt', '.py')):",
      "Edge 8: [Source] #41\nwhile True: => [Target] #42\nfor output_name, output_value in self.__run(input_data, credentials):",
      "Edge 9: [Source] #42\nfor output_name, output_value in self.__run(input_data, credentials): => [Target] #44\nyield output_name, output value",
      "Edge 10: [Source] #49try: => [Target] #50\nloop = asyncio get_event_loop()future = self.run.bot(credentials.api_key)if isinstance(future,asyncio.Future):",
      "Edge 11: [Source] #49 try: => [Target] #51 raise ValueError(f 'Login error occurred: {login_err}')",
      "Edge 12: [Source] #49 try: => [Target] #52 raise ValueError(f 'An error occurred: {e}')",
      "Edge 13: [Source] #50 loop = asyncio get_event_loop()future = self.run.bot(credentials.api_key)if instanceof(future, asyncio.Future): => [Target] #54 future.set result({'output_data: 'Hello!\n\nFile from user: example.txt\nContent:This is the content of the file}`} ",
      "Edge 14: [Source] #54 future.set result({'output_data\n\"Hello!\fFile from user: example.txt'\": Contents: This is the contents of the file.' {'channel_name':'general,'username':'test_user'} => [Target] result loop.run_until_complete(future)",
      "Edge 15: [Source] result loop.run_until_complete(future) => [Target] if instanceof(result dict): self.output_data = result gets 'output_data' self.channel_name = result gets ['channel_name'] self.username = result=get 'username'"
    ],
    "extra_blocks": [
      "Edge 3: async def run_bot(self,token:SecretStr)",
      "Edge 4:@client.event",
      "Edge 12:]def run( self, input_data:Input *, credentials : APIKeyCredentials , **kwargs) => [Target] while True:",
      "Edge 13 while True : => [Target] for : output_name,output_value in self.__run(input_data,credentials)",
      "Edge 14 for : output_name,output_value in self.__run(input_data, credentials) => [Target] breaks",
      "Edge 15 [Source : loop=asyncio.get_event_loop() => [Target] future=self.run_bot(credentials.api_key)"
    ]
  }
}