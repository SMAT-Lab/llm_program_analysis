{
  "edge_analysis": {
    "static_total": 7,
    "llm_total": 20,
    "matched_edges": {
      "exact_matches": 1,
      "partial_matches": 6
    },
    "accuracy_metrics": {
      "precision": 0.05,
      "recall": 0.14285714285714285,
      "f1_score": 0.07407407407407407
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "#7",
      "#12",
      "#13",
      "#15",
      "#16",
      "#17"
    ],
    "extra_blocks": [
      "def create_test_graph() -> Graph:",
      "\"\"\"\n subreddit\n ||\n v\n GetRedditPostsBlock (post_id, post_title, post_body)\n // || \\\\\n post_id post_title post_body\n || || ||\n v v v\n FillTextTemplateBlock (format)\n ||\n v\n AIStructuredResponseBlock / TextRelevancy\n || || ||\n post_id is_relevant marketing_text\n || || ||\n v v v\n MatchTextPatternBlock\n || ||\n positive negative\n ||\n v\n PostRedditCommentBlock\n \"\"\"",
      "# Hardcoded inputs\n reddit_get_post_input = {\n \"post_limit\": 3,\n }",
      "text_formatter_input = {\n \"format\": \"\"\"\nBased on the following post, write your marketing comment:\n* Post ID: {id}\n* Post Subreddit: {subreddit}\n* Post Title: {title}\n* Post Body: {body}\"\"\".strip(),\n }",
      "llm_call_input = {\n \"sys_prompt\": \"\"\"\nYou are an expert at marketing.\nYou have been tasked with picking Reddit posts that are relevant to your product.\nThe product you are marketing is: Auto-GPT an autonomous AI agent utilizing GPT model.\nYou reply the post that you find it relevant to be replied with marketing text.\nMake sure to only comment on a relevant post.\n\"\"\",\n \"expected_format\": {\n \"post_id\": \"str, the reddit post id\",\n \"is_relevant\": \"bool, whether the post is relevant for marketing\",\n \"marketing_text\": \"str, marketing text, this is empty on irrelevant posts\",\n },\n }",
      "text_matcher_input = {\"match\": \"true\", \"case_sensitive\": False}",
      "reddit_comment_input = {}",
      "# Nodes\n reddit_get_post_node = Node(\n block_id=GetRedditPostsBlock().id,\n input_default=reddit_get_post_input,\n )",
      "text_formatter_node = Node(\n block_id=FillTextTemplateBlock().id,\n input_default=text_formatter_input,\n )",
      "llm_call_node = Node(\n block_id=AIStructuredResponseGeneratorBlock().id, input_default=llm_call_input\n )",
      "text_matcher_node = Node(\n block_id=MatchTextPatternBlock().id,\n input_default=text_matcher_input,\n )",
      "reddit_comment_node = Node(\n block_id=PostRedditCommentBlock().id,\n input_default=reddit_comment_input,\n )",
      "nodes = [\n reddit_get_post_node,\n text_formatter_node,\n llm_call_node,\n text_matcher_node,\n reddit_comment_node,\n ]",
      "# Links\n links = [\n Link(\n source_id=reddit_get_post_node.id,\n sink_id=text_formatter_node.id,\n source_name=\"post\",\n sink_name=\"values\",\n ),\n Link(\n source_id=text_formatter_node.id,\n sink_id=llm_call_node.id,\n source_name=\"output\",\n sink_name=\"prompt\",\n ),\n Link(\n source_id=llm_call_node.id,\n sink_id=text_matcher_node.id,\n source_name=\"response\",\n sink_name=\"data\",\n ),\n Link(\n source_id=llm_call_node.id,\n sink_id=text_matcher_node.id,\n source_name=\"response_#_is_relevant\",\n sink_name=\"text\",\n ),\n Link(\n source_id=text_matcher_node.id,\n sink_id=reddit_comment_node.id,\n source_name=\"positive_#_post_id\",\n sink_name=\"data_#_post_id\",\n ),\n Link(\n source_id=text_matcher_node.id,\n sink_id=reddit_comment_node.id,\n source_name=\"positive_#_marketing_text\",\n sink_name=\"data_#_comment\",\n ),\n ]",
      "# Create graph\n test_graph = Graph(\n name=\"RedditMarketingAgent\",\n description=\"Reddit marketing agent\",\n nodes=nodes,\n links=links,\n )\n return test_graph"
    ]
  }
}