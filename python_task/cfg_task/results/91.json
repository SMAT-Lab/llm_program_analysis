{
  "edge_analysis": {
    "static_total": 2,
    "llm_total": 8,
    "matched_edges": {
      "exact_matches": 1,
      "partial_matches": 1
    },
    "accuracy_metrics": {
      "precision": 0.125,
      "recall": 0.5,
      "f1_score": 0.2
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "Edge 1: [Source] #6\\ntry: => [Target] #8\\nprint('Lint failed, try running `poetry run format` to fix the issues: ', e)\\nraise e"
    ],
    "extra_blocks": [
      "Edge 0: [Source] import os\\nimport subprocess => [Target] directory = os.path.dirname(os.path.realpath(__file__'))",
      "Edge 1: [Source] directory = os.path.dirname(os.path.realpath(__file__')) => [Target] BACKEND_DIR = \".\"\\nLIBS_DIR = \"../autogpt_libs\"\\nTARGET_DIRS = [BACKEND_DIR, LIBS_DIR]",
      "Edge 2: [Source] def lint(): => [Target] try:\\n run(\"ruff\", \"check\", *TARGET_DIRS, \"--exit-zero\")",
      "Edge 3: [Source] try:\\n run(\"ruff\", \"check\", *TARGET_DIRS, \"--exit-zero\") => [Target] run(\"ruff\", \"format\", \"--diff\", \"--check\", LIBS_DIR)",
      "Edge 4: [Source] run(\"ruff\", \"format\", \"--diff\", \"--check\", LIBS_DIR) => [Target] run(\"isort\", \"--diff\", \"--check\", \"--profile\", \"black\", BACKEND_DIR)",
      "Edge 5: [Source] run(\"isort\", \"--diff\", \"--check\", \"--profile\", \"black\", BACKEND_DIR) => [Target] run(\"black\", \"--diff\", \"--check\", BACKEND_DIR)",
      "Edge 6: [Source] run(\"black\", \"--diff\", \"--check\", BACKEND_DIR) => [Target] run(\"pyright\", *TARGET_DIRS)",
      "Edge 7: [Source] run(\"pyright\", *TARGET_DIRS) => [Target] except subprocess.CalledProcessError as e:\\n print(\"Lint failed, try running `poetry run format` to fix the issues: \", e)\\n raise e"
    ]
  }
}