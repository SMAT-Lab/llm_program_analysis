{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 5,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0.0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] def _build_service(credentials: GoogleCredentials, **kwargs):\\n creds = Credentials(\\n token=(\\n credentials.access_token.get_secret_value()\\n if credentials.access_token\\n else None\\n ),\\n refresh_token=(\\n credentials.refresh_token.get_secret_value()\\n if credentials.refresh_token\\n else None\\n ),\\n token_uri=\"https://oauth2.googleapis.com/token\",\\n client_id=kwargs.get(\"client_id\"),\\n client_secret=kwargs.get(\"client_secret\"),\\n scopes=credentials.scopes,\\n ) => [Target] return build(\"sheets\", \"v4\", credentials=creds)",
      "Edge 1: [Source] def _read_sheet(self, service, spreadsheet_id: str, range: str) -> list[list[str]]:\\n sheet = service.spreadsheets()\\n result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range).execute() => [Target] return result.get(\"values\", [])",
      "Edge 2: [Source] def run(\\n self, input_data: Input, *, credentials: GoogleCredentials, **kwargs\\n ) -> BlockOutput: => [Target] service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)\\n result = self._write_sheet(\\n service,\\n input_data.spreadsheet_id,\\n input_data.range,\\n input_data.values,\\n )",
      "Edge 3: [Source] service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)\\n result = self._write_sheet(\\n service,\\n input_data.spreadsheet_id,\\n input_data.range,\\n input_data.values,\\n ) => [Target] yield \"result\", result",
      "Edge 4: [Source] def _write_sheet(\\n self, service, spreadsheet_id: str, range: str, values: list[list[str]]\\n ) -> dict:\\n body = {\"values\": values}\\n result = (\\n service.spreadsheets()\\n .values()\\n .update(\\n spreadsheetId=spreadsheet_id,\\n range=range,\\n valueInputOption=\"USER_ENTERED\",\\n body=body,\\n )\\n .execute()\\n ) => [Target] return result"
    ]
  }
}