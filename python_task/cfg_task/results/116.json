{
  "edge_analysis": {
    "static_total": 18,
    "llm_total": 17,
    "matched_edges": {
      "exact_matches": 10,
      "partial_matches": 3
    },
    "accuracy_metrics": {
      "precision": 0.5882352941176471,
      "recall": 0.5555555555555556,
      "f1_score": 0.5714285714285714
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "Edge 1: [Source] #5\\nif not hasattr(record, 'msg'): => [Target] #8\\nif type(record.msg) is not str:",
      "Edge 3: [Source] #7\\nlevel_color = ''\\nif record.levelno in self.LEVEL_COLOR_MAP: => [Target] #11\\nlevel_color = self.LEVEL_COLOR_MAP[record.levelno]\\nrecord.levelname = f'{level_color}{record.levelname}{Style.RESET_ALL}'",
      "Edge 4: [Source] #11\\nlevel_color = self.LEVEL_COLOR_MAP[record.levelno]\\nrecord.levelname = f'{level_color}{record.levelname}{Style.RESET_ALL}' => [Target] #12\\ncolor = getattr(record, 'color', level_color)\\ncolor_is_specified = hasattr(record, 'color')\\nif color and (record.levelno != logging.INFO or color_is_specified):",
      "Edge 12: [Source] #30\\nrecord.msg = remove_color_codes(record.msg) => [Target] #31\\ntitle = getattr(record, 'title', '')\\ntitle_color = getattr(record, 'title_color', '') or self.LEVEL_COLOR_MAP.get(\\n record.levelno, '')\\nif title and title_color:"
    ],
    "extra_blocks": [
      "Edge 0: [Source] class FancyConsoleFormatter(logging.Formatter):\\n \"\"\"\\n A custom logging formatter designed for console output.\\n\\n This formatter enhances the standard logging output with color coding. The color\\n coding is based on the level of the log message, making it easier to distinguish\\n between different types of messages in the console output.\\n\\n The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\\n \"\"\"\\n\\n # level -> (level & text color, title color)\\n LEVEL_COLOR_MAP = { => [Target] logging.DEBUG: Fore.LIGHTBLACK_EX,\\n logging.INFO: Fore.BLUE,\\n logging.WARNING: Fore.YELLOW,\\n logging.ERROR: Fore.RED,\\n logging.CRITICAL: Fore.RED + Style.BRIGHT,\\n }"
    ]
  }
}