{
  "edge_analysis": {
    "static_total": 7,
    "llm_total": 10,
    "matched_edges": {
      "exact_matches": 4,
      "partial_matches": 2
    },
    "accuracy_metrics": {
      "precision": 0.4,
      "recall": 0.5714,
      "f1_score": 0.4706
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "#1\\n\"\"\"\\nCalculates the sum of two non-negative integers using bitwise operators\\nWikipedia explanation: https://en.wikipedia.org/wiki/Binary_number\\n\"\"\"\\nif __name__ == '__main__': => [Target] #15\\nimport doctest\\ndoctest.testmod()",
      "#3\\n\"\"\"\\n >>> bitwise_addition_recursive(4, 5)\\n 9\\n >>> bitwise_addition_recursive(8, 9)\\n 17\\n >>> bitwise_addition_recursive(0, 4)\\n 4\\n >>> bitwise_addition_recursive(4.5, 9)\\n Traceback (most recent call last):\\n TypeError: Both arguments MUST be integers!\\n >>> bitwise_addition_recursive('4', 9)\\n Traceback (most recent call last):\\n TypeError: Both arguments MUST be integers!\\n >>> bitwise_addition_recursive('4.5', 9)\\n Traceback (most recent call last):\\n TypeError: Both arguments MUST be integers!\\n >>> bitwise_addition_recursive(-1, 9)\\n Traceback (most recent call last):\\n ValueError: Both arguments MUST be non-negative!\\n >>> bitwise_addition_recursive(1, -9)\\n Traceback (most recent call last):\\n ValueError: Both arguments MUST be non-negative!\\n \"\"\"\\nif not isinstance(number, int) or not isinstance(other_number, int): => [Target] #4\\nraise TypeError('Both arguments MUST be integers!')",
      "#5\\nif number < 0 or other_number < 0: => [Target] #7\\nraise ValueError('Both arguments MUST be non-negative!')",
      "#8\\nbitwise_sum = number ^ other_number\\ncarry = number & other_number\\nif carry == 0: => [Target] #10\\nreturn bitwise_sum",
      "#8\\nbitwise_sum = number ^ other_number\\ncarry = number & other_number\\nif carry == 0: => [Target] #11\\nreturn bitwise_addition_recursive(bitwise_sum, carry << 1)"
    ],
    "extra_blocks": [
      "Edge 2: [Source] \\n => [Target] if __name__ == \"__main__\":",
      "Edge 7: [Source] if not isinstance(number, int) or not isinstance(other_number, int):\\n raise TypeError(\"Both arguments MUST be integers!\") => [Target] if number < 0 or other_number < 0:\\n raise ValueError(\"Both arguments MUST be non-negative!\")",
      "Edge 8: [Source] if number < 0 or other_number < 0:\\n raise ValueError(\"Both arguments MUST be non-negative!\") => [Target] bitwise_sum = number ^ other_number\\n carry = number & other_number\\n\\n if carry == 0:\\n return bitwise_sum",
      "Edge 9: [Source] bitwise_sum = number ^ other_number\\n carry = number & other_number\\n\\n if carry == 0:\\n return bitwise_sum => [Target] return bitwise_addition_recursive(bitwise_sum, carry << 1)"
    ]
  }
}