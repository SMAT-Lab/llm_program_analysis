{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 2,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] from backend.blocks.jina._auth import (\\n JinaCredentials,\\n JinaCredentialsField,\\n JinaCredentialsInput,\\n) => [Target] from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\\nfrom backend.data.model import SchemaField\\nfrom backend.util.request import requests",
      "Edge 1: [Source] def run(\\n self, input_data: Input, *, credentials: JinaCredentials, **kwargs\\n ) -> BlockOutput: => [Target] url = \"https://api.jina.ai/v1/embeddings\"\\n headers = {\\n \"Content-Type\": \"application/json\",\\n \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\\n }\\n data = {\"input\": input_data.texts, \"model\": input_data.model}\\n response = requests.post(url, headers=headers, json=data)\\n embeddings = [e[\"embedding\"] for e in response.json()[\"data\"]]\\n yield \"embeddings\", embeddings"
    ]
  }
}