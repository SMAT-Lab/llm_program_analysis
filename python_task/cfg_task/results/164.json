{
  "edge_analysis": {
    "static_total": 6,
    "llm_total": 8,
    "matched_edges": {
      "exact_matches": 5,
      "partial_matches": 1
    },
    "accuracy_metrics": {
      "precision": 0.625,
      "recall": 0.8333333333333334,
      "f1_score": 0.7142857142857143
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "Edge 2: [Source] #3\\n\"\"\"\\n Returns position of the highest set bit of a number.\\n Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\\n >>> get_highest_set_bit_position(25)\\n 5\\n >>> get_highest_set_bit_position(37)\\n 6\\n >>> get_highest_set_bit_position(1)\\n 1\\n >>> get_highest_set_bit_position(4)\\n 3\\n >>> get_highest_set_bit_position(0)\\n 0\\n >>> get_highest_set_bit_position(0.8)\\n Traceback (most recent call last):\\n TypeError: Input value must be an 'int' type\\n \"\"\"\\nif not isinstance(number, int): => [Target] #5\\nposition = 0"
    ],
    "extra_blocks": [
      "Edge 1: [Source] import doctest => [Target] doctest.testmod()",
      "Edge 6: [Source] position = 0 => [Target] return position"
    ]
  }
}