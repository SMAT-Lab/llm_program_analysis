{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 37,
  "functions": [
    {
      "name": "JinaCredentialsField",
      "type": "function",
      "start_line": 15,
      "end_line": 22,
      "functions": [],
      "classes": [],
      "simplified_code": "def JinaCredentialsField() -> JinaCredentialsInput:\n    \"\"\"\n    Creates a Jina credentials input on a block.\n\n    \"\"\"\n    return CredentialsField(\n        description=\"The Jina integration can be used with an API Key.\",\n    )",
      "blocks": [
        {
          "id": 1,
          "label": "def JinaCredentialsField() -> JinaCredentialsInput:",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "return CredentialsField(description=\"The Jina integration can be used with an API Key.\",)",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "from typing import Literal\n\nfrom pydantic import SecretStr\n\nfrom backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput\nfrom backend.integrations.providers import ProviderName\n\nJinaCredentials = APIKeyCredentials\nJinaCredentialsInput = CredentialsMetaInput[\n    Literal[ProviderName.JINA],\n    Literal[\"api_key\"],\n]\n\n\n    )\n\n\nTEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"jina\",\n    api_key=SecretStr(\"mock-jina-api-key\"),\n    title=\"Mock Jina API key\",\n    expires_at=None,\n)\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
  "blocks": [
    {
      "id": 1,
      "label": "from typing import Literal",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "from pydantic import SecretStr",
      "successors": [
        3
      ]
    },
    {
      "id": 3,
      "label": "from backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput",
      "successors": [
        4
      ]
    },
    {
      "id": 4,
      "label": "from backend.integrations.providers import ProviderName",
      "successors": [
        5
      ]
    },
    {
      "id": 5,
      "label": "JinaCredentials = APIKeyCredentials",
      "successors": [
        6
      ]
    },
    {
      "id": 6,
      "label": "JinaCredentialsInput = CredentialsMetaInput[Literal[ProviderName.JINA], Literal[\"api_key\"]]",
      "successors": [
        7
      ]
    },
    {
      "id": 7,
      "label": "TEST_CREDENTIALS = APIKeyCredentials(id=\"01234567-89ab-cdef-0123-456789abcdef\", provider=\"jina\", api_key=SecretStr(\"mock-jina-api-key\"), title=\"Mock Jina API key\", expires_at=None)",
      "successors": [
        8
      ]
    },
    {
      "id": 8,
      "label": "TEST_CREDENTIALS_INPUT = {\"provider\": TEST_CREDENTIALS.provider, \"id\": TEST_CREDENTIALS.id, \"type\": TEST_CREDENTIALS.type, \"title\": TEST_CREDENTIALS.type}",
      "successors": []
    }
  ]
}