{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 97,
  "functions": [
    {
      "name": "lifespan",
      "type": "function",
      "start_line": 47,
      "end_line": 50,
      "functions": [],
      "classes": [],
      "simplified_code": "async def lifespan(app: fastapi.FastAPI):\n    await db_client.connect()\n    yield\n    await db_client.disconnect()",
      "blocks": [
        {
          "id": 1,
          "label": "async def lifespan(app: fastapi.FastAPI):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "await db_client.connect()",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "yield",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "await db_client.disconnect()",
          "successors": []
        }
      ]
    },
    {
      "name": "health",
      "type": "function",
      "start_line": 84,
      "end_line": 87,
      "functions": [],
      "classes": [],
      "simplified_code": "def health():\n    return fastapi.responses.HTMLResponse(\n        content=\"<h1>Marketplace API</h1>\", status_code=200\n    )",
      "blocks": [
        {
          "id": 1,
          "label": "def health():",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "return fastapi.responses.HTMLResponse(content=\"<h1>Marketplace API</h1>\", status_code=200)",
          "successors": []
        }
      ]
    },
    {
      "name": "default",
      "type": "function",
      "start_line": 91,
      "end_line": 94,
      "functions": [],
      "classes": [],
      "simplified_code": "def default():\n    return fastapi.responses.HTMLResponse(\n        content=\"<h1>Marketplace API</h1>\", status_code=200\n    )",
      "blocks": [
        {
          "id": 1,
          "label": "def default():",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "return fastapi.responses.HTMLResponse(content=\"<h1>Marketplace API</h1>\", status_code=200)",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "import contextlib\nimport logging.config\nimport os\n\nimport dotenv\nimport fastapi\nimport fastapi.middleware.cors\nimport fastapi.middleware.gzip\nimport prisma\nimport prometheus_fastapi_instrumentator\nimport sentry_sdk\nimport sentry_sdk.integrations.asyncio\nimport sentry_sdk.integrations.fastapi\nimport sentry_sdk.integrations.starlette\n\nimport market.config\nimport market.routes.admin\nimport market.routes.agents\nimport market.routes.analytics\nimport market.routes.search\nimport market.routes.submissions\n\ndotenv.load_dotenv()\n\nlogging.config.dictConfig(market.config.LogConfig().model_dump())\n\nif os.environ.get(\"SENTRY_DSN\"):\n    sentry_sdk.init(\n        dsn=os.environ.get(\"SENTRY_DSN\"),\n        traces_sample_rate=1.0,\n        profiles_sample_rate=1.0,\n        enable_tracing=True,\n        environment=os.environ.get(\"RUN_ENV\", default=\"CLOUD\").lower(),\n        integrations=[\n            sentry_sdk.integrations.starlette.StarletteIntegration(\n                transaction_style=\"url\"\n            ),\n            sentry_sdk.integrations.fastapi.FastApiIntegration(transaction_style=\"url\"),\n            sentry_sdk.integrations.asyncio.AsyncioIntegration(),\n        ],\n    )\n\ndb_client = prisma.Prisma(auto_register=True)\n\n\n@contextlib.asynccontextmanager\n    await db_client.disconnect()\n\n\ndocs_url = \"/docs\"\napp = fastapi.FastAPI(\n    title=\"Marketplace API\",\n    description=\"AutoGPT Marketplace API is a service that allows users to share AI agents.\",\n    summary=\"Maketplace API\",\n    version=\"0.1\",\n    lifespan=lifespan,\n    root_path=\"/api/v1/market\",\n    docs_url=docs_url,\n)\n\napp.add_middleware(fastapi.middleware.gzip.GZipMiddleware, minimum_size=1000)\napp.add_middleware(\n    middleware_class=fastapi.middleware.cors.CORSMiddleware,\n    allow_origins=os.environ.get(\n        \"BACKEND_CORS_ALLOW_ORIGINS\", \"http://localhost:3000,http://127.0.0.1:3000\"\n    ).split(\",\"),\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\napp.include_router(market.routes.agents.router, tags=[\"agents\"])\napp.include_router(market.routes.search.router, tags=[\"search\"])\napp.include_router(market.routes.submissions.router, tags=[\"submissions\"])\napp.include_router(market.routes.admin.router, prefix=\"/admin\", tags=[\"admin\"])\napp.include_router(\n    market.routes.analytics.router, prefix=\"/analytics\", tags=[\"analytics\"]\n)\n\n\n@app.get(\"/health\")\n    )\n\n\n@app.get(\"/\")\n    )\n\n\nprometheus_fastapi_instrumentator.Instrumentator().instrument(app).expose(app)",
  "blocks": [
    {
      "id": 1,
      "label": "import statements",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "dotenv.load_dotenv()",
      "successors": [
        3
      ]
    },
    {
      "id": 3,
      "label": "logging.config.dictConfig(market.config.LogConfig().model_dump())",
      "successors": [
        4
      ]
    },
    {
      "id": 4,
      "label": "if os.environ.get(\"SENTRY_DSN\"):",
      "successors": [
        5,
        6
      ]
    },
    {
      "id": 5,
      "label": "sentry_sdk.init(...)",
      "successors": [
        6
      ]
    },
    {
      "id": 6,
      "label": "db_client = prisma.Prisma(auto_register=True)",
      "successors": [
        7
      ]
    },
    {
      "id": 7,
      "label": "@contextlib.asynccontextmanager",
      "successors": [
        8
      ]
    },
    {
      "id": 8,
      "label": "async def lifespan(app: fastapi.FastAPI):",
      "successors": [
        9
      ]
    },
    {
      "id": 9,
      "label": "await db_client.connect()",
      "successors": [
        10
      ]
    },
    {
      "id": 10,
      "label": "yield",
      "successors": [
        11
      ]
    },
    {
      "id": 11,
      "label": "await db_client.disconnect()",
      "successors": [
        12
      ]
    },
    {
      "id": 12,
      "label": "docs_url = \"/docs\"",
      "successors": [
        13
      ]
    },
    {
      "id": 13,
      "label": "app = fastapi.FastAPI(...)",
      "successors": [
        14
      ]
    },
    {
      "id": 14,
      "label": "app.add_middleware(fastapi.middleware.gzip.GZipMiddleware, minimum_size=1000)",
      "successors": [
        15
      ]
    },
    {
      "id": 15,
      "label": "app.add_middleware(...)",
      "successors": [
        16
      ]
    },
    {
      "id": 16,
      "label": "app.include_router(market.routes.agents.router, tags=[\"agents\"])",
      "successors": [
        17
      ]
    },
    {
      "id": 17,
      "label": "app.include_router(market.routes.search.router, tags=[\"search\"])",
      "successors": [
        18
      ]
    },
    {
      "id": 18,
      "label": "app.include_router(market.routes.submissions.router, tags=[\"submissions\"])",
      "successors": [
        19
      ]
    },
    {
      "id": 19,
      "label": "app.include_router(market.routes.admin.router, prefix=\"/admin\", tags=[\"admin\"])",
      "successors": [
        20
      ]
    },
    {
      "id": 20,
      "label": "app.include_router(market.routes.analytics.router, prefix=\"/analytics\", tags=[\"analytics\"])",
      "successors": [
        21
      ]
    },
    {
      "id": 21,
      "label": "@app.get(\"/health\")",
      "successors": [
        22
      ]
    },
    {
      "id": 22,
      "label": "@app.get(\"/\")",
      "successors": [
        23
      ]
    },
    {
      "id": 23,
      "label": "prometheus_fastapi_instrumentator.Instrumentator().instrument(app).expose(app)",
      "successors": []
    }
  ]
}