{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 27,
  "functions": [
    {
      "name": "excess_3_code",
      "type": "function",
      "start_line": 1,
      "end_line": 21,
      "functions": [],
      "classes": [],
      "simplified_code": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num",
      "blocks": [
        {
          "id": 1,
          "label": "def excess_3_code(number: int) -> str:",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "num = \"\"",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "for digit in str(max(0, number)):",
          "successors": [
            4,
            5
          ]
        },
        {
          "id": 4,
          "label": "num += str(bin(int(digit) + 3))[2:].zfill(4)",
          "successors": [
            3
          ]
        },
        {
          "id": 5,
          "label": "return \"0b\" + num",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "    return \"0b\" + num\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
  "blocks": [
    {
      "id": 1,
      "label": "return \"0b\" + num",
      "successors": []
    },
    {
      "id": 2,
      "label": "if __name__ == \"__main__\":",
      "successors": [
        3
      ]
    },
    {
      "id": 3,
      "label": "import doctest",
      "successors": [
        4
      ]
    },
    {
      "id": 4,
      "label": "doctest.testmod()",
      "successors": []
    }
  ]
}