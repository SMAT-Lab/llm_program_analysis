{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 70,
  "functions": [
    {
      "name": "Slant3DCredentialsField",
      "type": "function",
      "start_line": 14,
      "end_line": 15,
      "functions": [],
      "classes": [],
      "simplified_code": "def Slant3DCredentialsField() -> Slant3DCredentialsInput:\n    return CredentialsField(description=\"Slant3D API key for authentication\")",
      "blocks": [
        {
          "id": 1,
          "label": "def Slant3DCredentialsField() -> Slant3DCredentialsInput:",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "return CredentialsField(description=\"Slant3D API key for authentication\")",
          "successors": []
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "CustomerDetails",
      "type": "class",
      "start_line": 34,
      "end_line": 43,
      "functions": [],
      "classes": [],
      "simplified_code": "class CustomerDetails(BaseModel):\n    name: str\n    email: str\n    phone: str\n    address: str\n    city: str\n    state: str\n    zip: str\n    country_iso: str = \"US\"\n    is_residential: bool = True",
      "blocks": [
        {
          "id": 1,
          "label": "class CustomerDetails(BaseModel):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "name: str",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "email: str",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "phone: str",
          "successors": [
            5
          ]
        },
        {
          "id": 5,
          "label": "address: str",
          "successors": [
            6
          ]
        },
        {
          "id": 6,
          "label": "city: str",
          "successors": [
            7
          ]
        },
        {
          "id": 7,
          "label": "state: str",
          "successors": [
            8
          ]
        },
        {
          "id": 8,
          "label": "zip: str",
          "successors": [
            9
          ]
        },
        {
          "id": 9,
          "label": "country_iso: str = \"US\"",
          "successors": [
            10
          ]
        },
        {
          "id": 10,
          "label": "is_residential: bool = True",
          "successors": []
        }
      ]
    },
    {
      "name": "Color",
      "type": "class",
      "start_line": 46,
      "end_line": 48,
      "functions": [],
      "classes": [],
      "simplified_code": "class Color(Enum):\n    WHITE = \"white\"\n    BLACK = \"black\"",
      "blocks": [
        {
          "id": 1,
          "label": "class Color(Enum):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "WHITE = \"white\"",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "BLACK = \"black\"",
          "successors": []
        }
      ]
    },
    {
      "name": "Profile",
      "type": "class",
      "start_line": 51,
      "end_line": 53,
      "functions": [],
      "classes": [],
      "simplified_code": "class Profile(Enum):\n    PLA = \"PLA\"\n    PETG = \"PETG\"",
      "blocks": [
        {
          "id": 1,
          "label": "class Profile(Enum):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "PLA = \"PLA\"",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "PETG = \"PETG\"",
          "successors": []
        }
      ]
    },
    {
      "name": "OrderItem",
      "type": "class",
      "start_line": 56,
      "end_line": 61,
      "functions": [],
      "classes": [],
      "simplified_code": "class OrderItem(BaseModel):\n    # filename: str\n    file_url: str\n    quantity: str  # String as per API spec\n    color: Color = Color.WHITE\n    profile: Profile = Profile.PLA",
      "blocks": [
        {
          "id": 1,
          "label": "class OrderItem(BaseModel):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "file_url: str",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "quantity: str",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "color: Color = Color.WHITE",
          "successors": [
            5
          ]
        },
        {
          "id": 5,
          "label": "profile: Profile = Profile.PLA",
          "successors": []
        }
      ]
    },
    {
      "name": "Filament",
      "type": "class",
      "start_line": 66,
      "end_line": 70,
      "functions": [],
      "classes": [],
      "simplified_code": "class Filament(BaseModel):\n    filament: str\n    hexColor: str\n    colorTag: str\n    profile: str",
      "blocks": [
        {
          "id": 1,
          "label": "class Filament(BaseModel):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "filament: str",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "hexColor: str",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "colorTag: str",
          "successors": [
            5
          ]
        },
        {
          "id": 5,
          "label": "profile: str",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "from enum import Enum\nfrom typing import Literal\n\nfrom pydantic import BaseModel, SecretStr\n\nfrom backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput\nfrom backend.integrations.providers import ProviderName\n\nSlant3DCredentialsInput = CredentialsMetaInput[\n    Literal[ProviderName.SLANT3D], Literal[\"api_key\"]\n]\n\n\n    return CredentialsField(description=\"Slant3D API key for authentication\")\n\n\nTEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"slant3d\",\n    api_key=SecretStr(\"mock-slant3d-api-key\"),\n    title=\"Mock Slant3D API key\",\n    expires_at=None,\n)\n\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.title,\n}\n\n\n    is_residential: bool = True\n\n\n    BLACK = \"black\"\n\n\n    PETG = \"PETG\"\n\n\n    profile: Profile = Profile.PLA\n    # image_url: str = \"\"\n    # sku: str = \"\"\n\n\n    profile: str",
  "blocks": [
    {
      "id": 1,
      "label": "from enum import Enum",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "from typing import Literal",
      "successors": [
        3
      ]
    },
    {
      "id": 3,
      "label": "from pydantic import BaseModel, SecretStr",
      "successors": [
        4
      ]
    },
    {
      "id": 4,
      "label": "from backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput",
      "successors": [
        5
      ]
    },
    {
      "id": 5,
      "label": "from backend.integrations.providers import ProviderName",
      "successors": [
        6
      ]
    },
    {
      "id": 6,
      "label": "Slant3DCredentialsInput = CredentialsMetaInput[Literal[ProviderName.SLANT3D], Literal[\"api_key\"]]",
      "successors": [
        7
      ]
    },
    {
      "id": 7,
      "label": "return CredentialsField(description=\"Slant3D API key for authentication\")",
      "successors": [
        8
      ]
    },
    {
      "id": 8,
      "label": "TEST_CREDENTIALS = APIKeyCredentials(id=\"01234567-89ab-cdef-0123-456789abcdef\", provider=\"slant3d\", api_key=SecretStr(\"mock-slant3d-api-key\"), title=\"Mock Slant3D API key\", expires_at=None)",
      "successors": [
        9
      ]
    },
    {
      "id": 9,
      "label": "TEST_CREDENTIALS_INPUT = {\"provider\": TEST_CREDENTIALS.provider, \"id\": TEST_CREDENTIALS.id, \"type\": TEST_CREDENTIALS.type, \"title\": TEST_CREDENTIALS.title}",
      "successors": [
        10
      ]
    },
    {
      "id": 10,
      "label": "is_residential: bool = True",
      "successors": [
        11
      ]
    },
    {
      "id": 11,
      "label": "BLACK = \"black\"",
      "successors": [
        12
      ]
    },
    {
      "id": 12,
      "label": "PETG = \"PETG\"",
      "successors": [
        13
      ]
    },
    {
      "id": 13,
      "label": "profile: Profile = Profile.PLA",
      "successors": [
        14
      ]
    },
    {
      "id": 14,
      "label": "profile: str",
      "successors": []
    }
  ]
}