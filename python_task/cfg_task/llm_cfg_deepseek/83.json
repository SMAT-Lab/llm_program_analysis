{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 22,
  "functions": [],
  "classes": [
    {
      "name": "User",
      "type": "class",
      "start_line": 9,
      "end_line": 22,
      "functions": [
        {
          "name": "from_payload",
          "type": "function",
          "start_line": 16,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": "    def from_payload(cls, payload):\n        return cls(\n            user_id=payload[\"sub\"],\n            email=payload.get(\"email\", \"\"),\n            phone_number=payload.get(\"phone\", \"\"),\n            role=payload[\"role\"],\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "def from_payload(cls, payload):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "return cls(user_id=payload[\"sub\"], email=payload.get(\"email\", \"\"), phone_number=payload.get(\"phone\", \"\"), role=payload[\"role\"],)",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "class User:\n    user_id: str\n    email: str\n    phone_number: str\n    role: str\n\n    @classmethod\n        )",
      "blocks": [
        {
          "id": 1,
          "label": "class User:",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "user_id: str",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "email: str",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "phone_number: str",
          "successors": [
            5
          ]
        },
        {
          "id": 5,
          "label": "role: str",
          "successors": [
            6
          ]
        },
        {
          "id": 6,
          "label": "@classmethod",
          "successors": [
            7
          ]
        },
        {
          "id": 7,
          "label": "def from_dict(cls, data: dict):",
          "successors": [
            8
          ]
        },
        {
          "id": 8,
          "label": "return cls(",
          "successors": [
            9
          ]
        },
        {
          "id": 9,
          "label": "user_id=data['user_id'],",
          "successors": [
            10
          ]
        },
        {
          "id": 10,
          "label": "email=data['email'],",
          "successors": [
            11
          ]
        },
        {
          "id": 11,
          "label": "phone_number=data['phone_number'],",
          "successors": [
            12
          ]
        },
        {
          "id": 12,
          "label": "role=data['role']",
          "successors": [
            13
          ]
        },
        {
          "id": 13,
          "label": ")",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "from dataclasses import dataclass\n\nDEFAULT_USER_ID = \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\nDEFAULT_EMAIL = \"default@example.com\"\n\n\n# Using dataclass here to avoid adding dependency on pydantic\n@dataclass(frozen=True)\n        )",
  "blocks": [
    {
      "id": 1,
      "label": "from dataclasses import dataclass",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "DEFAULT_USER_ID = \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"",
      "successors": [
        3
      ]
    },
    {
      "id": 3,
      "label": "DEFAULT_EMAIL = \"default@example.com\"",
      "successors": [
        4
      ]
    },
    {
      "id": 4,
      "label": "@dataclass(frozen=True)",
      "successors": []
    }
  ]
}