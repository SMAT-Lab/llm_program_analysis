{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 184,
  "functions": [],
  "classes": [
    {
      "name": "GoogleSheetsReadBlock",
      "type": "class",
      "start_line": 17,
      "end_line": 99,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 37,
          "end_line": 66,
          "functions": [],
          "classes": [],
          "simplified_code": "    def __init__(self):\n        super().__init__(\n            id=\"5724e902-3635-47e9-a108-aaa0263a4988\",\n            description=\"This block reads data from a Google Sheets spreadsheet.\",\n            categories={BlockCategory.DATA},\n            input_schema=GoogleSheetsReadBlock.Input,\n            output_schema=GoogleSheetsReadBlock.Output,\n            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,\n            test_input={\n                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\",\n                \"range\": \"Sheet1!A1:B2\",\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"result\",\n                    [\n                        [\"Name\", \"Score\"],\n                        [\"Alice\", \"85\"],\n                    ],\n                ),\n            ],\n            test_mock={\n                \"_read_sheet\": lambda *args, **kwargs: [\n                    [\"Name\", \"Score\"],\n                    [\"Alice\", \"85\"],\n                ],\n            },\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "def __init__(self):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "super().__init__(...)",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 68,
          "end_line": 73,
          "functions": [],
          "classes": [],
          "simplified_code": "    def run(\n        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs\n    ) -> BlockOutput:\n        service = self._build_service(credentials, **kwargs)\n        data = self._read_sheet(service, input_data.spreadsheet_id, input_data.range)\n        yield \"result\", data",
          "blocks": [
            {
              "id": 1,
              "label": "def run(self, input_data: Input, *, credentials: GoogleCredentials, **kwargs) -> BlockOutput:",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "service = self._build_service(credentials, **kwargs)",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "data = self._read_sheet(service, input_data.spreadsheet_id, input_data.range)",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "yield \"result\", data",
              "successors": []
            }
          ]
        },
        {
          "name": "_build_service",
          "type": "function",
          "start_line": 76,
          "end_line": 93,
          "functions": [],
          "classes": [],
          "simplified_code": "    def _build_service(credentials: GoogleCredentials, **kwargs):\n        creds = Credentials(\n            token=(\n                credentials.access_token.get_secret_value()\n                if credentials.access_token\n                else None\n            ),\n            refresh_token=(\n                credentials.refresh_token.get_secret_value()\n                if credentials.refresh_token\n                else None\n            ),\n            token_uri=\"https://oauth2.googleapis.com/token\",\n            client_id=kwargs.get(\"client_id\"),\n            client_secret=kwargs.get(\"client_secret\"),\n            scopes=credentials.scopes,\n        )\n        return build(\"sheets\", \"v4\", credentials=creds)",
          "blocks": [
            {
              "id": 1,
              "label": "def _build_service(credentials: GoogleCredentials, **kwargs):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "creds = Credentials(...)",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "return build(\"sheets\", \"v4\", credentials=creds)",
              "successors": []
            }
          ]
        },
        {
          "name": "_read_sheet",
          "type": "function",
          "start_line": 95,
          "end_line": 98,
          "functions": [],
          "classes": [],
          "simplified_code": "    def _read_sheet(self, service, spreadsheet_id: str, range: str) -> list[list[str]]:\n        sheet = service.spreadsheets()\n        result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range).execute()\n        return result.get(\"values\", [])",
          "blocks": [
            {
              "id": 1,
              "label": "def _read_sheet(self, service, spreadsheet_id: str, range: str) -> list[list[str]]:",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "sheet = service.spreadsheets()",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range).execute()",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "return result.get(\"values\", [])",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 18,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    class Input(BlockSchema):\n        credentials: GoogleCredentialsInput = GoogleCredentialsField(\n            [\"https://www.googleapis.com/auth/spreadsheets.readonly\"]\n        )\n        spreadsheet_id: str = SchemaField(\n            description=\"The ID of the spreadsheet to read from\",\n        )\n        range: str = SchemaField(\n            description=\"The A1 notation of the range to read\",\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "class Input(BlockSchema):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "credentials: GoogleCredentialsInput = GoogleCredentialsField([\"https://www.googleapis.com/auth/spreadsheets.readonly\"])",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "spreadsheet_id: str = SchemaField(description=\"The ID of the spreadsheet to read from\")",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "range: str = SchemaField(description=\"The A1 notation of the range to read\")",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 29,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": "    class Output(BlockSchema):\n        result: list[list[str]] = SchemaField(\n            description=\"The data read from the spreadsheet\",\n        )\n        error: str = SchemaField(\n            description=\"Error message if any\",\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "class Output(BlockSchema):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "result: list[list[str]] = SchemaField(description=\"The data read from the spreadsheet\")",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "error: str = SchemaField(description=\"Error message if any\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "class GoogleSheetsReadBlock(Block):\n        )\n\n        )\n\n        )\n\n        yield \"result\", data\n\n    @staticmethod\n        return build(\"sheets\", \"v4\", credentials=creds)\n\n        return result.get(\"values\", [])\n",
      "blocks": [
        {
          "id": 1,
          "label": "class GoogleSheetsReadBlock(Block):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "yield \"result\", data",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "@staticmethod",
          "successors": [
            4
          ]
        },
        {
          "id": 4,
          "label": "return build(\"sheets\", \"v4\", credentials=creds)",
          "successors": [
            5
          ]
        },
        {
          "id": 5,
          "label": "return result.get(\"values\", [])",
          "successors": []
        }
      ]
    },
    {
      "name": "GoogleSheetsWriteBlock",
      "type": "class",
      "start_line": 101,
      "end_line": 184,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 124,
          "end_line": 155,
          "functions": [],
          "classes": [],
          "simplified_code": "    def __init__(self):\n        super().__init__(\n            id=\"d9291e87-301d-47a8-91fe-907fb55460e5\",\n            description=\"This block writes data to a Google Sheets spreadsheet.\",\n            categories={BlockCategory.DATA},\n            input_schema=GoogleSheetsWriteBlock.Input,\n            output_schema=GoogleSheetsWriteBlock.Output,\n            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,\n            test_input={\n                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\",\n                \"range\": \"Sheet1!A1:B2\",\n                \"values\": [\n                    [\"Name\", \"Score\"],\n                    [\"Bob\", \"90\"],\n                ],\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"result\",\n                    {\"updatedCells\": 4, \"updatedColumns\": 2, \"updatedRows\": 2},\n                ),\n            ],\n            test_mock={\n                \"_write_sheet\": lambda *args, **kwargs: {\n                    \"updatedCells\": 4,\n                    \"updatedColumns\": 2,\n                    \"updatedRows\": 2,\n                },\n            },\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "def __init__(self):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "super().__init__()",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "id=\"d9291e87-301d-47a8-91fe-907fb55460e5\"",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "description=\"This block writes data to a Google Sheets spreadsheet.\"",
              "successors": [
                5
              ]
            },
            {
              "id": 5,
              "label": "categories={BlockCategory.DATA}",
              "successors": [
                6
              ]
            },
            {
              "id": 6,
              "label": "input_schema=GoogleSheetsWriteBlock.Input",
              "successors": [
                7
              ]
            },
            {
              "id": 7,
              "label": "output_schema=GoogleSheetsWriteBlock.Output",
              "successors": [
                8
              ]
            },
            {
              "id": 8,
              "label": "disabled=not GOOGLE_OAUTH_IS_CONFIGURED",
              "successors": [
                9
              ]
            },
            {
              "id": 9,
              "label": "test_input={...}",
              "successors": [
                10
              ]
            },
            {
              "id": 10,
              "label": "test_credentials=TEST_CREDENTIALS",
              "successors": [
                11
              ]
            },
            {
              "id": 11,
              "label": "test_output=[...]",
              "successors": [
                12
              ]
            },
            {
              "id": 12,
              "label": "test_mock={...}",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 157,
          "end_line": 167,
          "functions": [],
          "classes": [],
          "simplified_code": "    def run(\n        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs\n    ) -> BlockOutput:\n        service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)\n        result = self._write_sheet(\n            service,\n            input_data.spreadsheet_id,\n            input_data.range,\n            input_data.values,\n        )\n        yield \"result\", result",
          "blocks": [
            {
              "id": 1,
              "label": "def run(self, input_data: Input, *, credentials: GoogleCredentials, **kwargs) -> BlockOutput:",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "result = self._write_sheet(service, input_data.spreadsheet_id, input_data.range, input_data.values)",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "yield \"result\", result",
              "successors": []
            }
          ]
        },
        {
          "name": "_write_sheet",
          "type": "function",
          "start_line": 169,
          "end_line": 184,
          "functions": [],
          "classes": [],
          "simplified_code": "    def _write_sheet(\n        self, service, spreadsheet_id: str, range: str, values: list[list[str]]\n    ) -> dict:\n        body = {\"values\": values}\n        result = (\n            service.spreadsheets()\n            .values()\n            .update(\n                spreadsheetId=spreadsheet_id,\n                range=range,\n                valueInputOption=\"USER_ENTERED\",\n                body=body,\n            )\n            .execute()\n        )\n        return result",
          "blocks": [
            {
              "id": 1,
              "label": "def _write_sheet(self, service, spreadsheet_id: str, range: str, values: list[list[str]]) -> dict:",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "body = {\"values\": values}",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "result = (service.spreadsheets().values().update(spreadsheetId=spreadsheet_id, range=range, valueInputOption=\"USER_ENTERED\", body=body).execute())",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "return result",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 102,
          "end_line": 114,
          "functions": [],
          "classes": [],
          "simplified_code": "    class Input(BlockSchema):\n        credentials: GoogleCredentialsInput = GoogleCredentialsField(\n            [\"https://www.googleapis.com/auth/spreadsheets\"]\n        )\n        spreadsheet_id: str = SchemaField(\n            description=\"The ID of the spreadsheet to write to\",\n        )\n        range: str = SchemaField(\n            description=\"The A1 notation of the range to write\",\n        )\n        values: list[list[str]] = SchemaField(\n            description=\"The data to write to the spreadsheet\",\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "class Input(BlockSchema):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "credentials: GoogleCredentialsInput = GoogleCredentialsField([\"https://www.googleapis.com/auth/spreadsheets\"])",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "spreadsheet_id: str = SchemaField(description=\"The ID of the spreadsheet to write to\")",
              "successors": [
                4
              ]
            },
            {
              "id": 4,
              "label": "range: str = SchemaField(description=\"The A1 notation of the range to write\")",
              "successors": [
                5
              ]
            },
            {
              "id": 5,
              "label": "values: list[list[str]] = SchemaField(description=\"The data to write to the spreadsheet\")",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 116,
          "end_line": 122,
          "functions": [],
          "classes": [],
          "simplified_code": "    class Output(BlockSchema):\n        result: dict = SchemaField(\n            description=\"The result of the write operation\",\n        )\n        error: str = SchemaField(\n            description=\"Error message if any\",\n        )",
          "blocks": [
            {
              "id": 1,
              "label": "class Output(BlockSchema):",
              "successors": [
                2
              ]
            },
            {
              "id": 2,
              "label": "result: dict = SchemaField(description=\"The result of the write operation\",)",
              "successors": [
                3
              ]
            },
            {
              "id": 3,
              "label": "error: str = SchemaField(description=\"Error message if any\",)",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "class GoogleSheetsWriteBlock(Block):\n        )\n\n        )\n\n        )\n\n        yield \"result\", result\n\n        return result",
      "blocks": [
        {
          "id": 1,
          "label": "class GoogleSheetsWriteBlock(Block):",
          "successors": [
            2
          ]
        },
        {
          "id": 2,
          "label": "yield \"result\", result",
          "successors": [
            3
          ]
        },
        {
          "id": 3,
          "label": "return result",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "from google.oauth2.credentials import Credentials\nfrom googleapiclient.discovery import build\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\nfrom ._auth import (\n    GOOGLE_OAUTH_IS_CONFIGURED,\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    GoogleCredentials,\n    GoogleCredentialsField,\n    GoogleCredentialsInput,\n)\n\n\n\n\n        return result",
  "blocks": [
    {
      "id": 1,
      "label": "from google.oauth2.credentials import Credentials",
      "successors": [
        2
      ]
    },
    {
      "id": 2,
      "label": "from googleapiclient.discovery import build",
      "successors": [
        3
      ]
    },
    {
      "id": 3,
      "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "successors": [
        4
      ]
    },
    {
      "id": 4,
      "label": "from backend.data.model import SchemaField",
      "successors": [
        5
      ]
    },
    {
      "id": 5,
      "label": "from ._auth import ( GOOGLE_OAUTH_IS_CONFIGURED, TEST_CREDENTIALS, TEST_CREDENTIALS_INPUT, GoogleCredentials, GoogleCredentialsField, GoogleCredentialsInput, )",
      "successors": [
        6
      ]
    },
    {
      "id": 6,
      "label": "return result",
      "successors": []
    }
  ]
}