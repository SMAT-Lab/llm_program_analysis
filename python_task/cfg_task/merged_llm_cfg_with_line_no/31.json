{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 27,
  "functions": [
    {
      "name": "excess_3_code",
      "type": "function",
      "start_line": 1,
      "end_line": 21,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 1,
          "line": "def excess_3_code(number: int) -> str:"
        },
        {
          "lineno": 2,
          "line": "    \"\"\""
        },
        {
          "lineno": 3,
          "line": "    Find excess-3 code of integer base 10."
        },
        {
          "lineno": 4,
          "line": "    Add 3 to all digits in a decimal number then convert to a binary-coded decimal."
        },
        {
          "lineno": 5,
          "line": "    https://en.wikipedia.org/wiki/Excess-3"
        },
        {
          "lineno": 6,
          "line": ""
        },
        {
          "lineno": 7,
          "line": "    >>> excess_3_code(0)"
        },
        {
          "lineno": 8,
          "line": "    '0b0011'"
        },
        {
          "lineno": 9,
          "line": "    >>> excess_3_code(3)"
        },
        {
          "lineno": 10,
          "line": "    '0b0110'"
        },
        {
          "lineno": 11,
          "line": "    >>> excess_3_code(2)"
        },
        {
          "lineno": 12,
          "line": "    '0b0101'"
        },
        {
          "lineno": 13,
          "line": "    >>> excess_3_code(20)"
        },
        {
          "lineno": 14,
          "line": "    '0b01010011'"
        },
        {
          "lineno": 15,
          "line": "    >>> excess_3_code(120)"
        },
        {
          "lineno": 16,
          "line": "    '0b010001010011'"
        },
        {
          "lineno": 17,
          "line": "    \"\"\""
        },
        {
          "lineno": 18,
          "line": "    num = \"\""
        },
        {
          "lineno": 19,
          "line": "    for digit in str(max(0, number)):"
        },
        {
          "lineno": 20,
          "line": "        num += str(bin(int(digit) + 3))[2:].zfill(4)"
        },
        {
          "lineno": 21,
          "line": "    return \"0b\" + num"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "def excess_3_code(number: int) -> str:\n\"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"",
          "successors": [
            {
              "id": 3,
              "label": "num = \"\"",
              "successors": [
                {
                  "id": 4,
                  "label": "for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "return \"0b\" + num",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 22,
      "line": ""
    },
    {
      "lineno": 23,
      "line": ""
    },
    {
      "lineno": 24,
      "line": "if __name__ == \"__main__\":"
    },
    {
      "lineno": 25,
      "line": "    import doctest"
    },
    {
      "lineno": 26,
      "line": ""
    },
    {
      "lineno": 27,
      "line": "    doctest.testmod()"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "if __name__ == \"__main__\":\n    import doctest",
      "successors": [
        {
          "id": 3,
          "label": "    doctest.testmod()",
          "successors": []
        }
      ]
    }
  ]
}