{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 184,
  "functions": [],
  "classes": [
    {
      "name": "GoogleSheetsReadBlock",
      "type": "class",
      "start_line": 17,
      "end_line": 99,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 37,
          "end_line": 66,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 37,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 38,
              "line": "        super().__init__("
            },
            {
              "lineno": 39,
              "line": "            id=\"5724e902-3635-47e9-a108-aaa0263a4988\","
            },
            {
              "lineno": 40,
              "line": "            description=\"This block reads data from a Google Sheets spreadsheet.\","
            },
            {
              "lineno": 41,
              "line": "            categories={BlockCategory.DATA},"
            },
            {
              "lineno": 42,
              "line": "            input_schema=GoogleSheetsReadBlock.Input,"
            },
            {
              "lineno": 43,
              "line": "            output_schema=GoogleSheetsReadBlock.Output,"
            },
            {
              "lineno": 44,
              "line": "            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,"
            },
            {
              "lineno": 45,
              "line": "            test_input={"
            },
            {
              "lineno": 46,
              "line": "                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\","
            },
            {
              "lineno": 47,
              "line": "                \"range\": \"Sheet1!A1:B2\","
            },
            {
              "lineno": 48,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 49,
              "line": "            },"
            },
            {
              "lineno": 50,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 51,
              "line": "            test_output=["
            },
            {
              "lineno": 52,
              "line": "                ("
            },
            {
              "lineno": 53,
              "line": "                    \"result\","
            },
            {
              "lineno": 54,
              "line": "                    ["
            },
            {
              "lineno": 55,
              "line": "                        [\"Name\", \"Score\"],"
            },
            {
              "lineno": 56,
              "line": "                        [\"Alice\", \"85\"],"
            },
            {
              "lineno": 57,
              "line": "                    ],"
            },
            {
              "lineno": 58,
              "line": "                ),"
            },
            {
              "lineno": 59,
              "line": "            ],"
            },
            {
              "lineno": 60,
              "line": "            test_mock={"
            },
            {
              "lineno": 61,
              "line": "                \"_read_sheet\": lambda *args, **kwargs: ["
            },
            {
              "lineno": 62,
              "line": "                    [\"Name\", \"Score\"],"
            },
            {
              "lineno": 63,
              "line": "                    [\"Alice\", \"85\"],"
            },
            {
              "lineno": 64,
              "line": "                ],"
            },
            {
              "lineno": 65,
              "line": "            },"
            },
            {
              "lineno": 66,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"5724e902-3635-47e9-a108-aaa0263a4988\",\n            description=\"This block reads data from a Google Sheets spreadsheet.\",\n            categories={BlockCategory.DATA},\n            input_schema=GoogleSheetsReadBlock.Input,\n            output_schema=GoogleSheetsReadBlock.Output,\n            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,\n            test_input={\n                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\",\n                \"range\": \"Sheet1!A1:B2\",\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"result\",\n                    [\n                        [\"Name\", \"Score\"],\n                        [\"Alice\", \"85\"],\n                    ],\n                ),\n            ],\n            test_mock={\n                \"_read_sheet\": lambda *args, **kwargs: [\n                    [\"Name\", \"Score\"],\n                    [\"Alice\", \"85\"],\n                ],\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 68,
          "end_line": 73,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 68,
              "line": "    def run("
            },
            {
              "lineno": 69,
              "line": "        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs"
            },
            {
              "lineno": 70,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 71,
              "line": "        service = self._build_service(credentials, **kwargs)"
            },
            {
              "lineno": 72,
              "line": "        data = self._read_sheet(service, input_data.spreadsheet_id, input_data.range)"
            },
            {
              "lineno": 73,
              "line": "        yield \"result\", data"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs\n    ) -> BlockOutput:\n        service = self._build_service(credentials, **kwargs)\n        data = self._read_sheet(service, input_data.spreadsheet_id, input_data.range)\n        yield \"result\", data",
              "successors": []
            }
          ]
        },
        {
          "name": "_build_service",
          "type": "function",
          "start_line": 76,
          "end_line": 93,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 76,
              "line": "    def _build_service(credentials: GoogleCredentials, **kwargs):"
            },
            {
              "lineno": 77,
              "line": "        creds = Credentials("
            },
            {
              "lineno": 78,
              "line": "            token=("
            },
            {
              "lineno": 79,
              "line": "                credentials.access_token.get_secret_value()"
            },
            {
              "lineno": 80,
              "line": "                if credentials.access_token"
            },
            {
              "lineno": 81,
              "line": "                else None"
            },
            {
              "lineno": 82,
              "line": "            ),"
            },
            {
              "lineno": 83,
              "line": "            refresh_token=("
            },
            {
              "lineno": 84,
              "line": "                credentials.refresh_token.get_secret_value()"
            },
            {
              "lineno": 85,
              "line": "                if credentials.refresh_token"
            },
            {
              "lineno": 86,
              "line": "                else None"
            },
            {
              "lineno": 87,
              "line": "            ),"
            },
            {
              "lineno": 88,
              "line": "            token_uri=\"https://oauth2.googleapis.com/token\","
            },
            {
              "lineno": 89,
              "line": "            client_id=kwargs.get(\"client_id\"),"
            },
            {
              "lineno": 90,
              "line": "            client_secret=kwargs.get(\"client_secret\"),"
            },
            {
              "lineno": 91,
              "line": "            scopes=credentials.scopes,"
            },
            {
              "lineno": 92,
              "line": "        )"
            },
            {
              "lineno": 93,
              "line": "        return build(\"sheets\", \"v4\", credentials=creds)"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def _build_service(credentials: GoogleCredentials, **kwargs):\n        creds = Credentials(\n            token=(\n                credentials.access_token.get_secret_value()\n                if credentials.access_token\n                else None\n            ),\n            refresh_token=(\n                credentials.refresh_token.get_secret_value()\n                if credentials.refresh_token\n                else None\n            ),\n            token_uri=\"https://oauth2.googleapis.com/token\",\n            client_id=kwargs.get(\"client_id\"),\n            client_secret=kwargs.get(\"client_secret\"),\n            scopes=credentials.scopes,\n        )\n        return build(\"sheets\", \"v4\", credentials=creds)",
              "successors": []
            }
          ]
        },
        {
          "name": "_read_sheet",
          "type": "function",
          "start_line": 95,
          "end_line": 98,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 95,
              "line": "    def _read_sheet(self, service, spreadsheet_id: str, range: str) -> list[list[str]]:"
            },
            {
              "lineno": 96,
              "line": "        sheet = service.spreadsheets()"
            },
            {
              "lineno": 97,
              "line": "        result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range).execute()"
            },
            {
              "lineno": 98,
              "line": "        return result.get(\"values\", [])"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "def _read_sheet(self, service, spreadsheet_id: str, range: str) -> list[list[str]]:\n    sheet = service.spreadsheets()\n    result = sheet.values().get(spreadsheetId=spreadsheet_id, range=range).execute()\nreturn result.get(\"values\", [])",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 18,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 18,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 19,
              "line": "        credentials: GoogleCredentialsInput = GoogleCredentialsField("
            },
            {
              "lineno": 20,
              "line": "            [\"https://www.googleapis.com/auth/spreadsheets.readonly\"]"
            },
            {
              "lineno": 21,
              "line": "        )"
            },
            {
              "lineno": 22,
              "line": "        spreadsheet_id: str = SchemaField("
            },
            {
              "lineno": 23,
              "line": "            description=\"The ID of the spreadsheet to read from\","
            },
            {
              "lineno": 24,
              "line": "        )"
            },
            {
              "lineno": 25,
              "line": "        range: str = SchemaField("
            },
            {
              "lineno": 26,
              "line": "            description=\"The A1 notation of the range to read\","
            },
            {
              "lineno": 27,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: GoogleCredentialsInput = GoogleCredentialsField(\n            [\"https://www.googleapis.com/auth/spreadsheets.readonly\"]\n        )\n        spreadsheet_id: str = SchemaField(\n            description=\"The ID of the spreadsheet to read from\",\n        )\n        range: str = SchemaField(\n            description=\"The A1 notation of the range to read\",\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 29,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 29,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 30,
              "line": "        result: list[list[str]] = SchemaField("
            },
            {
              "lineno": 31,
              "line": "            description=\"The data read from the spreadsheet\","
            },
            {
              "lineno": 32,
              "line": "        )"
            },
            {
              "lineno": 33,
              "line": "        error: str = SchemaField("
            },
            {
              "lineno": 34,
              "line": "            description=\"Error message if any\","
            },
            {
              "lineno": 35,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        result: list[list[str]] = SchemaField(\n            description=\"The data read from the spreadsheet\",\n        )\n        error: str = SchemaField(\n            description=\"Error message if any\",\n        )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 17,
          "line": "class GoogleSheetsReadBlock(Block):"
        },
        {
          "lineno": 28,
          "line": ""
        },
        {
          "lineno": 36,
          "line": ""
        },
        {
          "lineno": 67,
          "line": ""
        },
        {
          "lineno": 74,
          "line": ""
        },
        {
          "lineno": 75,
          "line": "    @staticmethod"
        },
        {
          "lineno": 94,
          "line": ""
        },
        {
          "lineno": 99,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class GoogleSheetsReadBlock(Block):",
          "successors": []
        }
      ]
    },
    {
      "name": "GoogleSheetsWriteBlock",
      "type": "class",
      "start_line": 101,
      "end_line": 184,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 124,
          "end_line": 155,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 124,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 125,
              "line": "        super().__init__("
            },
            {
              "lineno": 126,
              "line": "            id=\"d9291e87-301d-47a8-91fe-907fb55460e5\","
            },
            {
              "lineno": 127,
              "line": "            description=\"This block writes data to a Google Sheets spreadsheet.\","
            },
            {
              "lineno": 128,
              "line": "            categories={BlockCategory.DATA},"
            },
            {
              "lineno": 129,
              "line": "            input_schema=GoogleSheetsWriteBlock.Input,"
            },
            {
              "lineno": 130,
              "line": "            output_schema=GoogleSheetsWriteBlock.Output,"
            },
            {
              "lineno": 131,
              "line": "            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,"
            },
            {
              "lineno": 132,
              "line": "            test_input={"
            },
            {
              "lineno": 133,
              "line": "                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\","
            },
            {
              "lineno": 134,
              "line": "                \"range\": \"Sheet1!A1:B2\","
            },
            {
              "lineno": 135,
              "line": "                \"values\": ["
            },
            {
              "lineno": 136,
              "line": "                    [\"Name\", \"Score\"],"
            },
            {
              "lineno": 137,
              "line": "                    [\"Bob\", \"90\"],"
            },
            {
              "lineno": 138,
              "line": "                ],"
            },
            {
              "lineno": 139,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 140,
              "line": "            },"
            },
            {
              "lineno": 141,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 142,
              "line": "            test_output=["
            },
            {
              "lineno": 143,
              "line": "                ("
            },
            {
              "lineno": 144,
              "line": "                    \"result\","
            },
            {
              "lineno": 145,
              "line": "                    {\"updatedCells\": 4, \"updatedColumns\": 2, \"updatedRows\": 2},"
            },
            {
              "lineno": 146,
              "line": "                ),"
            },
            {
              "lineno": 147,
              "line": "            ],"
            },
            {
              "lineno": 148,
              "line": "            test_mock={"
            },
            {
              "lineno": 149,
              "line": "                \"_write_sheet\": lambda *args, **kwargs: {"
            },
            {
              "lineno": 150,
              "line": "                    \"updatedCells\": 4,"
            },
            {
              "lineno": 151,
              "line": "                    \"updatedColumns\": 2,"
            },
            {
              "lineno": 152,
              "line": "                    \"updatedRows\": 2,"
            },
            {
              "lineno": 153,
              "line": "                },"
            },
            {
              "lineno": 154,
              "line": "            },"
            },
            {
              "lineno": 155,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"d9291e87-301d-47a8-91fe-907fb55460e5\",\n            description=\"This block writes data to a Google Sheets spreadsheet.\",\n            categories={BlockCategory.DATA},\n            input_schema=GoogleSheetsWriteBlock.Input,\n            output_schema=GoogleSheetsWriteBlock.Output,\n            disabled=not GOOGLE_OAUTH_IS_CONFIGURED,\n            test_input={\n                \"spreadsheet_id\": \"1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms\",\n                \"range\": \"Sheet1!A1:B2\",\n                \"values\": [\n                    [\"Name\", \"Score\"],\n                    [\"Bob\", \"90\"],\n                ],\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"result\",\n                    {\"updatedCells\": 4, \"updatedColumns\": 2, \"updatedRows\": 2},\n                ),\n            ],\n            test_mock={\n                \"_write_sheet\": lambda *args, **kwargs: {\n                    \"updatedCells\": 4,\n                    \"updatedColumns\": 2,\n                    \"updatedRows\": 2,\n                },\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 157,
          "end_line": 167,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 157,
              "line": "    def run("
            },
            {
              "lineno": 158,
              "line": "        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs"
            },
            {
              "lineno": 159,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 160,
              "line": "        service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)"
            },
            {
              "lineno": 161,
              "line": "        result = self._write_sheet("
            },
            {
              "lineno": 162,
              "line": "            service,"
            },
            {
              "lineno": 163,
              "line": "            input_data.spreadsheet_id,"
            },
            {
              "lineno": 164,
              "line": "            input_data.range,"
            },
            {
              "lineno": 165,
              "line": "            input_data.values,"
            },
            {
              "lineno": 166,
              "line": "        )"
            },
            {
              "lineno": 167,
              "line": "        yield \"result\", result"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: GoogleCredentials, **kwargs\n    ) -> BlockOutput:\n        service = GoogleSheetsReadBlock._build_service(credentials, **kwargs)\n        result = self._write_sheet(\n            service,\n            input_data.spreadsheet_id,\n            input_data.range,\n            input_data.values,\n        )",
              "successors": [
                {
                  "id": 3,
                  "label": "        yield \"result\", result",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "_write_sheet",
          "type": "function",
          "start_line": 169,
          "end_line": 184,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 169,
              "line": "    def _write_sheet("
            },
            {
              "lineno": 170,
              "line": "        self, service, spreadsheet_id: str, range: str, values: list[list[str]]"
            },
            {
              "lineno": 171,
              "line": "    ) -> dict:"
            },
            {
              "lineno": 172,
              "line": "        body = {\"values\": values}"
            },
            {
              "lineno": 173,
              "line": "        result = ("
            },
            {
              "lineno": 174,
              "line": "            service.spreadsheets()"
            },
            {
              "lineno": 175,
              "line": "            .values()"
            },
            {
              "lineno": 176,
              "line": "            .update("
            },
            {
              "lineno": 177,
              "line": "                spreadsheetId=spreadsheet_id,"
            },
            {
              "lineno": 178,
              "line": "                range=range,"
            },
            {
              "lineno": 179,
              "line": "                valueInputOption=\"USER_ENTERED\","
            },
            {
              "lineno": 180,
              "line": "                body=body,"
            },
            {
              "lineno": 181,
              "line": "            )"
            },
            {
              "lineno": 182,
              "line": "            .execute()"
            },
            {
              "lineno": 183,
              "line": "        )"
            },
            {
              "lineno": 184,
              "line": "        return result"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def _write_sheet(\n        self, service, spreadsheet_id: str, range: str, values: list[list[str]]\n    ) -> dict:\n        body = {\"values\": values}\n        result = (\n            service.spreadsheets()\n            .values()\n            .update(\n                spreadsheetId=spreadsheet_id,\n                range=range,\n                valueInputOption=\"USER_ENTERED\",\n                body=body,\n            )\n            .execute()\n        )\n        return result",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 102,
          "end_line": 114,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 102,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 103,
              "line": "        credentials: GoogleCredentialsInput = GoogleCredentialsField("
            },
            {
              "lineno": 104,
              "line": "            [\"https://www.googleapis.com/auth/spreadsheets\"]"
            },
            {
              "lineno": 105,
              "line": "        )"
            },
            {
              "lineno": 106,
              "line": "        spreadsheet_id: str = SchemaField("
            },
            {
              "lineno": 107,
              "line": "            description=\"The ID of the spreadsheet to write to\","
            },
            {
              "lineno": 108,
              "line": "        )"
            },
            {
              "lineno": 109,
              "line": "        range: str = SchemaField("
            },
            {
              "lineno": 110,
              "line": "            description=\"The A1 notation of the range to write\","
            },
            {
              "lineno": 111,
              "line": "        )"
            },
            {
              "lineno": 112,
              "line": "        values: list[list[str]] = SchemaField("
            },
            {
              "lineno": 113,
              "line": "            description=\"The data to write to the spreadsheet\","
            },
            {
              "lineno": 114,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: GoogleCredentialsInput = GoogleCredentialsField(\n            [\"https://www.googleapis.com/auth/spreadsheets\"]\n        )\n        spreadsheet_id: str = SchemaField(\n            description=\"The ID of the spreadsheet to write to\",\n        )\n        range: str = SchemaField(\n            description=\"The A1 notation of the range to write\",\n        )\n        values: list[list[str]] = SchemaField(\n            description=\"The data to write to the spreadsheet\",\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 116,
          "end_line": 122,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 116,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 117,
              "line": "        result: dict = SchemaField("
            },
            {
              "lineno": 118,
              "line": "            description=\"The result of the write operation\","
            },
            {
              "lineno": 119,
              "line": "        )"
            },
            {
              "lineno": 120,
              "line": "        error: str = SchemaField("
            },
            {
              "lineno": 121,
              "line": "            description=\"Error message if any\","
            },
            {
              "lineno": 122,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        result: dict = SchemaField(\n            description=\"The result of the write operation\",\n        )\n        error: str = SchemaField(\n            description=\"Error message if any\",\n        )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 101,
          "line": "class GoogleSheetsWriteBlock(Block):"
        },
        {
          "lineno": 115,
          "line": ""
        },
        {
          "lineno": 123,
          "line": ""
        },
        {
          "lineno": 156,
          "line": ""
        },
        {
          "lineno": 168,
          "line": ""
        }
      ],
      "blocks": []
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "from google.oauth2.credentials import Credentials"
    },
    {
      "lineno": 2,
      "line": "from googleapiclient.discovery import build"
    },
    {
      "lineno": 3,
      "line": ""
    },
    {
      "lineno": 4,
      "line": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema"
    },
    {
      "lineno": 5,
      "line": "from backend.data.model import SchemaField"
    },
    {
      "lineno": 6,
      "line": ""
    },
    {
      "lineno": 7,
      "line": "from ._auth import ("
    },
    {
      "lineno": 8,
      "line": "    GOOGLE_OAUTH_IS_CONFIGURED,"
    },
    {
      "lineno": 9,
      "line": "    TEST_CREDENTIALS,"
    },
    {
      "lineno": 10,
      "line": "    TEST_CREDENTIALS_INPUT,"
    },
    {
      "lineno": 11,
      "line": "    GoogleCredentials,"
    },
    {
      "lineno": 12,
      "line": "    GoogleCredentialsField,"
    },
    {
      "lineno": 13,
      "line": "    GoogleCredentialsInput,"
    },
    {
      "lineno": 14,
      "line": ")"
    },
    {
      "lineno": 15,
      "line": ""
    },
    {
      "lineno": 16,
      "line": ""
    },
    {
      "lineno": 100,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "from google.oauth2.credentials import Credentials\nfrom googleapiclient.discovery import build\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\nfrom ._auth import (\n    GOOGLE_OAUTH_IS_CONFIGURED,\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    GoogleCredentials,\n    GoogleCredentialsField,\n    GoogleCredentialsInput,\n)\n",
      "successors": [
        {
          "id": 3,
          "label": "",
          "successors": []
        }
      ]
    }
  ]
}