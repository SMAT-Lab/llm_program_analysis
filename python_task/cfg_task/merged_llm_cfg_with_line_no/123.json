{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 418,
  "functions": [],
  "classes": [
    {
      "name": "Slant3DCreateOrderBlock",
      "type": "class",
      "start_line": 22,
      "end_line": 95,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 44,
          "end_line": 77,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 44,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 45,
              "line": "        super().__init__("
            },
            {
              "lineno": 46,
              "line": "            id=\"f73007d6-f48f-4aaf-9e6b-6883998a09b4\","
            },
            {
              "lineno": 47,
              "line": "            description=\"Create a new print order\","
            },
            {
              "lineno": 48,
              "line": "            input_schema=self.Input,"
            },
            {
              "lineno": 49,
              "line": "            output_schema=self.Output,"
            },
            {
              "lineno": 50,
              "line": "            test_input={"
            },
            {
              "lineno": 51,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 52,
              "line": "                \"order_number\": \"TEST-001\","
            },
            {
              "lineno": 53,
              "line": "                \"customer\": {"
            },
            {
              "lineno": 54,
              "line": "                    \"name\": \"John Doe\","
            },
            {
              "lineno": 55,
              "line": "                    \"email\": \"john@example.com\","
            },
            {
              "lineno": 56,
              "line": "                    \"phone\": \"123-456-7890\","
            },
            {
              "lineno": 57,
              "line": "                    \"address\": \"123 Test St\","
            },
            {
              "lineno": 58,
              "line": "                    \"city\": \"Test City\","
            },
            {
              "lineno": 59,
              "line": "                    \"state\": \"TS\","
            },
            {
              "lineno": 60,
              "line": "                    \"zip\": \"12345\","
            },
            {
              "lineno": 61,
              "line": "                },"
            },
            {
              "lineno": 62,
              "line": "                \"items\": ["
            },
            {
              "lineno": 63,
              "line": "                    {"
            },
            {
              "lineno": 64,
              "line": "                        \"file_url\": \"https://example.com/model.stl\","
            },
            {
              "lineno": 65,
              "line": "                        \"quantity\": \"1\","
            },
            {
              "lineno": 66,
              "line": "                        \"color\": \"black\","
            },
            {
              "lineno": 67,
              "line": "                        \"profile\": \"PLA\","
            },
            {
              "lineno": 68,
              "line": "                    }"
            },
            {
              "lineno": 69,
              "line": "                ],"
            },
            {
              "lineno": 70,
              "line": "            },"
            },
            {
              "lineno": 71,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 72,
              "line": "            test_output=[(\"order_id\", \"314144241\")],"
            },
            {
              "lineno": 73,
              "line": "            test_mock={"
            },
            {
              "lineno": 74,
              "line": "                \"_make_request\": lambda *args, **kwargs: {\"orderId\": \"314144241\"},"
            },
            {
              "lineno": 75,
              "line": "                \"_convert_to_color\": lambda *args, **kwargs: \"black\","
            },
            {
              "lineno": 76,
              "line": "            },"
            },
            {
              "lineno": 77,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"f73007d6-f48f-4aaf-9e6b-6883998a09b4\",\n            description=\"Create a new print order\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"order_number\": \"TEST-001\",\n                \"customer\": {\n                    \"name\": \"John Doe\",\n                    \"email\": \"john@example.com\",\n                    \"phone\": \"123-456-7890\",\n                    \"address\": \"123 Test St\",\n                    \"city\": \"Test City\",\n                    \"state\": \"TS\",\n                    \"zip\": \"12345\",\n                },\n                \"items\": [\n                    {\n                        \"file_url\": \"https://example.com/model.stl\",\n                        \"quantity\": \"1\",\n                        \"color\": \"black\",\n                        \"profile\": \"PLA\",\n                    }\n                ],\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"order_id\", \"314144241\")],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\"orderId\": \"314144241\"},\n                \"_convert_to_color\": lambda *args, **kwargs: \"black\",\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 79,
          "end_line": 95,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 79,
              "line": "    def run("
            },
            {
              "lineno": 80,
              "line": "        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs"
            },
            {
              "lineno": 81,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 82,
              "line": "        try:"
            },
            {
              "lineno": 83,
              "line": "            order_data = self._format_order_data("
            },
            {
              "lineno": 84,
              "line": "                input_data.customer,"
            },
            {
              "lineno": 85,
              "line": "                input_data.order_number,"
            },
            {
              "lineno": 86,
              "line": "                input_data.items,"
            },
            {
              "lineno": 87,
              "line": "                credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 88,
              "line": "            )"
            },
            {
              "lineno": 89,
              "line": "            result = self._make_request("
            },
            {
              "lineno": 90,
              "line": "                \"POST\", \"order\", credentials.api_key.get_secret_value(), json=order_data"
            },
            {
              "lineno": 91,
              "line": "            )"
            },
            {
              "lineno": 92,
              "line": "            yield \"order_id\", result[\"orderId\"]"
            },
            {
              "lineno": 93,
              "line": "        except Exception as e:"
            },
            {
              "lineno": 94,
              "line": "            yield \"error\", str(e)"
            },
            {
              "lineno": 95,
              "line": "            raise"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            order_data = self._format_order_data(\n                input_data.customer,\n                input_data.order_number,\n                input_data.items,\n                credentials.api_key.get_secret_value(),\n            )\n            result = self._make_request(\n                \"POST\", \"order\", credentials.api_key.get_secret_value(), json=order_data\n            )\n            yield \"order_id\", result[\"orderId\"]",
              "successors": [
                {
                  "id": 3,
                  "label": "        except Exception as e:\n            yield \"error\", str(e)\n            raise",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 25,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 25,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 26,
              "line": "        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()"
            },
            {
              "lineno": 27,
              "line": "        order_number: str = SchemaField("
            },
            {
              "lineno": 28,
              "line": "            description=\"Your custom order number (or leave blank for a random one)\","
            },
            {
              "lineno": 29,
              "line": "            default_factory=lambda: str(uuid.uuid4()),"
            },
            {
              "lineno": 30,
              "line": "        )"
            },
            {
              "lineno": 31,
              "line": "        customer: CustomerDetails = SchemaField("
            },
            {
              "lineno": 32,
              "line": "            description=\"Customer details for where to ship the item\","
            },
            {
              "lineno": 33,
              "line": "            advanced=False,"
            },
            {
              "lineno": 34,
              "line": "        )"
            },
            {
              "lineno": 35,
              "line": "        items: List[OrderItem] = SchemaField("
            },
            {
              "lineno": 36,
              "line": "            description=\"List of items to print\","
            },
            {
              "lineno": 37,
              "line": "            advanced=False,"
            },
            {
              "lineno": 38,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n        order_number: str = SchemaField(\n            description=\"Your custom order number (or leave blank for a random one)\",\n            default_factory=lambda: str(uuid.uuid4()),\n        )\n        customer: CustomerDetails = SchemaField(\n            description=\"Customer details for where to ship the item\",\n            advanced=False,\n        )\n        items: List[OrderItem] = SchemaField(\n            description=\"List of items to print\",\n            advanced=False,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 40,
          "end_line": 42,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 40,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 41,
              "line": "        order_id: str = SchemaField(description=\"Slant3D order ID\")"
            },
            {
              "lineno": 42,
              "line": "        error: str = SchemaField(description=\"Error message if order failed\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        order_id: str = SchemaField(description=\"Slant3D order ID\")\n        error: str = SchemaField(description=\"Error message if order failed\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 22,
          "line": "class Slant3DCreateOrderBlock(Slant3DBlockBase):"
        },
        {
          "lineno": 23,
          "line": "    \"\"\"Block for creating new orders\"\"\""
        },
        {
          "lineno": 24,
          "line": ""
        },
        {
          "lineno": 39,
          "line": ""
        },
        {
          "lineno": 43,
          "line": ""
        },
        {
          "lineno": 78,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Slant3DCreateOrderBlock(Slant3DBlockBase):\n    \"\"\"Block for creating new orders\"\"\"",
          "successors": []
        }
      ]
    },
    {
      "name": "Slant3DEstimateOrderBlock",
      "type": "class",
      "start_line": 98,
      "end_line": 186,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 122,
          "end_line": 163,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 122,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 123,
              "line": "        super().__init__("
            },
            {
              "lineno": 124,
              "line": "            id=\"bf8823d6-b42a-48c7-b558-d7c117f2ae85\","
            },
            {
              "lineno": 125,
              "line": "            description=\"Get order cost estimate\","
            },
            {
              "lineno": 126,
              "line": "            input_schema=self.Input,"
            },
            {
              "lineno": 127,
              "line": "            output_schema=self.Output,"
            },
            {
              "lineno": 128,
              "line": "            test_input={"
            },
            {
              "lineno": 129,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 130,
              "line": "                \"order_number\": \"TEST-001\","
            },
            {
              "lineno": 131,
              "line": "                \"customer\": {"
            },
            {
              "lineno": 132,
              "line": "                    \"name\": \"John Doe\","
            },
            {
              "lineno": 133,
              "line": "                    \"email\": \"john@example.com\","
            },
            {
              "lineno": 134,
              "line": "                    \"phone\": \"123-456-7890\","
            },
            {
              "lineno": 135,
              "line": "                    \"address\": \"123 Test St\","
            },
            {
              "lineno": 136,
              "line": "                    \"city\": \"Test City\","
            },
            {
              "lineno": 137,
              "line": "                    \"state\": \"TS\","
            },
            {
              "lineno": 138,
              "line": "                    \"zip\": \"12345\","
            },
            {
              "lineno": 139,
              "line": "                },"
            },
            {
              "lineno": 140,
              "line": "                \"items\": ["
            },
            {
              "lineno": 141,
              "line": "                    {"
            },
            {
              "lineno": 142,
              "line": "                        \"file_url\": \"https://example.com/model.stl\","
            },
            {
              "lineno": 143,
              "line": "                        \"quantity\": \"1\","
            },
            {
              "lineno": 144,
              "line": "                        \"color\": \"black\","
            },
            {
              "lineno": 145,
              "line": "                        \"profile\": \"PLA\","
            },
            {
              "lineno": 146,
              "line": "                    }"
            },
            {
              "lineno": 147,
              "line": "                ],"
            },
            {
              "lineno": 148,
              "line": "            },"
            },
            {
              "lineno": 149,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 150,
              "line": "            test_output=["
            },
            {
              "lineno": 151,
              "line": "                (\"total_price\", 9.31),"
            },
            {
              "lineno": 152,
              "line": "                (\"shipping_cost\", 5.56),"
            },
            {
              "lineno": 153,
              "line": "                (\"printing_cost\", 3.75),"
            },
            {
              "lineno": 154,
              "line": "            ],"
            },
            {
              "lineno": 155,
              "line": "            test_mock={"
            },
            {
              "lineno": 156,
              "line": "                \"_make_request\": lambda *args, **kwargs: {"
            },
            {
              "lineno": 157,
              "line": "                    \"totalPrice\": 9.31,"
            },
            {
              "lineno": 158,
              "line": "                    \"shippingCost\": 5.56,"
            },
            {
              "lineno": 159,
              "line": "                    \"printingCost\": 3.75,"
            },
            {
              "lineno": 160,
              "line": "                },"
            },
            {
              "lineno": 161,
              "line": "                \"_convert_to_color\": lambda *args, **kwargs: \"black\","
            },
            {
              "lineno": 162,
              "line": "            },"
            },
            {
              "lineno": 163,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"bf8823d6-b42a-48c7-b558-d7c117f2ae85\",\n            description=\"Get order cost estimate\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"order_number\": \"TEST-001\",\n                \"customer\": {\n                    \"name\": \"John Doe\",\n                    \"email\": \"john@example.com\",\n                    \"phone\": \"123-456-7890\",\n                    \"address\": \"123 Test St\",\n                    \"city\": \"Test City\",\n                    \"state\": \"TS\",\n                    \"zip\": \"12345\",\n                },\n                \"items\": [\n                    {\n                        \"file_url\": \"https://example.com/model.stl\",\n                        \"quantity\": \"1\",\n                        \"color\": \"black\",\n                        \"profile\": \"PLA\",\n                    }\n                ],\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\"total_price\", 9.31),\n                (\"shipping_cost\", 5.56),\n                (\"printing_cost\", 3.75),\n            ],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"totalPrice\": 9.31,\n                    \"shippingCost\": 5.56,\n                    \"printingCost\": 3.75,\n                },\n                \"_convert_to_color\": lambda *args, **kwargs: \"black\",\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 165,
          "end_line": 186,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 165,
              "line": "    def run("
            },
            {
              "lineno": 166,
              "line": "        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs"
            },
            {
              "lineno": 167,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 168,
              "line": "        order_data = self._format_order_data("
            },
            {
              "lineno": 169,
              "line": "            input_data.customer,"
            },
            {
              "lineno": 170,
              "line": "            input_data.order_number,"
            },
            {
              "lineno": 171,
              "line": "            input_data.items,"
            },
            {
              "lineno": 172,
              "line": "            credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 173,
              "line": "        )"
            },
            {
              "lineno": 174,
              "line": "        try:"
            },
            {
              "lineno": 175,
              "line": "            result = self._make_request("
            },
            {
              "lineno": 176,
              "line": "                \"POST\","
            },
            {
              "lineno": 177,
              "line": "                \"order/estimate\","
            },
            {
              "lineno": 178,
              "line": "                credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 179,
              "line": "                json=order_data,"
            },
            {
              "lineno": 180,
              "line": "            )"
            },
            {
              "lineno": 181,
              "line": "            yield \"total_price\", result[\"totalPrice\"]"
            },
            {
              "lineno": 182,
              "line": "            yield \"shipping_cost\", result[\"shippingCost\"]"
            },
            {
              "lineno": 183,
              "line": "            yield \"printing_cost\", result[\"printingCost\"]"
            },
            {
              "lineno": 184,
              "line": "        except baserequests.HTTPError as e:"
            },
            {
              "lineno": 185,
              "line": "            yield \"error\", str(f\"Error estimating order: {e} {e.response.text}\")"
            },
            {
              "lineno": 186,
              "line": "            raise"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        order_data = self._format_order_data(\n            input_data.customer,\n            input_data.order_number,\n            input_data.items,\n            credentials.api_key.get_secret_value(),\n        )\n        try:\n            result = self._make_request(\n                \"POST\",\n                \"order/estimate\",\n                credentials.api_key.get_secret_value(),\n                json=order_data,\n            )\n            yield \"total_price\", result[\"totalPrice\"]\n            yield \"shipping_cost\", result[\"shippingCost\"]\n            yield \"printing_cost\", result[\"printingCost\"]",
              "successors": [
                {
                  "id": 3,
                  "label": "        except baserequests.HTTPError as e:\n            yield \"error\", str(f\"Error estimating order: {e} {e.response.text}\")\n            raise",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 101,
          "end_line": 114,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 101,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 102,
              "line": "        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()"
            },
            {
              "lineno": 103,
              "line": "        order_number: str = SchemaField("
            },
            {
              "lineno": 104,
              "line": "            description=\"Your custom order number (or leave blank for a random one)\","
            },
            {
              "lineno": 105,
              "line": "            default_factory=lambda: str(uuid.uuid4()),"
            },
            {
              "lineno": 106,
              "line": "        )"
            },
            {
              "lineno": 107,
              "line": "        customer: CustomerDetails = SchemaField("
            },
            {
              "lineno": 108,
              "line": "            description=\"Customer details for where to ship the item\","
            },
            {
              "lineno": 109,
              "line": "            advanced=False,"
            },
            {
              "lineno": 110,
              "line": "        )"
            },
            {
              "lineno": 111,
              "line": "        items: List[OrderItem] = SchemaField("
            },
            {
              "lineno": 112,
              "line": "            description=\"List of items to print\","
            },
            {
              "lineno": 113,
              "line": "            advanced=False,"
            },
            {
              "lineno": 114,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n        order_number: str = SchemaField(\n            description=\"Your custom order number (or leave blank for a random one)\",\n            default_factory=lambda: str(uuid.uuid4()),\n        )\n        customer: CustomerDetails = SchemaField(\n            description=\"Customer details for where to ship the item\",\n            advanced=False,\n        )\n        items: List[OrderItem] = SchemaField(\n            description=\"List of items to print\",\n            advanced=False,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 116,
          "end_line": 120,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 116,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 117,
              "line": "        total_price: float = SchemaField(description=\"Total price in USD\")"
            },
            {
              "lineno": 118,
              "line": "        shipping_cost: float = SchemaField(description=\"Shipping cost\")"
            },
            {
              "lineno": 119,
              "line": "        printing_cost: float = SchemaField(description=\"Printing cost\")"
            },
            {
              "lineno": 120,
              "line": "        error: str = SchemaField(description=\"Error message if estimation failed\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        total_price: float = SchemaField(description=\"Total price in USD\")\n        shipping_cost: float = SchemaField(description=\"Shipping cost\")\n        printing_cost: float = SchemaField(description=\"Printing cost\")\n        error: str = SchemaField(description=\"Error message if estimation failed\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 98,
          "line": "class Slant3DEstimateOrderBlock(Slant3DBlockBase):"
        },
        {
          "lineno": 99,
          "line": "    \"\"\"Block for getting order cost estimates\"\"\""
        },
        {
          "lineno": 100,
          "line": ""
        },
        {
          "lineno": 115,
          "line": ""
        },
        {
          "lineno": 121,
          "line": ""
        },
        {
          "lineno": 164,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Slant3DEstimateOrderBlock(Slant3DBlockBase):\n    \"\"\"Block for getting order cost estimates\"\"\"\n",
          "successors": []
        }
      ]
    },
    {
      "name": "Slant3DEstimateShippingBlock",
      "type": "class",
      "start_line": 189,
      "end_line": 269,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 211,
          "end_line": 247,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 211,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 212,
              "line": "        super().__init__("
            },
            {
              "lineno": 213,
              "line": "            id=\"00aae2a1-caf6-4a74-8175-39a0615d44e1\","
            },
            {
              "lineno": 214,
              "line": "            description=\"Get shipping cost estimate\","
            },
            {
              "lineno": 215,
              "line": "            input_schema=self.Input,"
            },
            {
              "lineno": 216,
              "line": "            output_schema=self.Output,"
            },
            {
              "lineno": 217,
              "line": "            test_input={"
            },
            {
              "lineno": 218,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 219,
              "line": "                \"order_number\": \"TEST-001\","
            },
            {
              "lineno": 220,
              "line": "                \"customer\": {"
            },
            {
              "lineno": 221,
              "line": "                    \"name\": \"John Doe\","
            },
            {
              "lineno": 222,
              "line": "                    \"email\": \"john@example.com\","
            },
            {
              "lineno": 223,
              "line": "                    \"phone\": \"123-456-7890\","
            },
            {
              "lineno": 224,
              "line": "                    \"address\": \"123 Test St\","
            },
            {
              "lineno": 225,
              "line": "                    \"city\": \"Test City\","
            },
            {
              "lineno": 226,
              "line": "                    \"state\": \"TS\","
            },
            {
              "lineno": 227,
              "line": "                    \"zip\": \"12345\","
            },
            {
              "lineno": 228,
              "line": "                },"
            },
            {
              "lineno": 229,
              "line": "                \"items\": ["
            },
            {
              "lineno": 230,
              "line": "                    {"
            },
            {
              "lineno": 231,
              "line": "                        \"file_url\": \"https://example.com/model.stl\","
            },
            {
              "lineno": 232,
              "line": "                        \"quantity\": \"1\","
            },
            {
              "lineno": 233,
              "line": "                        \"color\": \"black\","
            },
            {
              "lineno": 234,
              "line": "                        \"profile\": \"PLA\","
            },
            {
              "lineno": 235,
              "line": "                    }"
            },
            {
              "lineno": 236,
              "line": "                ],"
            },
            {
              "lineno": 237,
              "line": "            },"
            },
            {
              "lineno": 238,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 239,
              "line": "            test_output=[(\"shipping_cost\", 4.81), (\"currency_code\", \"usd\")],"
            },
            {
              "lineno": 240,
              "line": "            test_mock={"
            },
            {
              "lineno": 241,
              "line": "                \"_make_request\": lambda *args, **kwargs: {"
            },
            {
              "lineno": 242,
              "line": "                    \"shippingCost\": 4.81,"
            },
            {
              "lineno": 243,
              "line": "                    \"currencyCode\": \"usd\","
            },
            {
              "lineno": 244,
              "line": "                },"
            },
            {
              "lineno": 245,
              "line": "                \"_convert_to_color\": lambda *args, **kwargs: \"black\","
            },
            {
              "lineno": 246,
              "line": "            },"
            },
            {
              "lineno": 247,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"00aae2a1-caf6-4a74-8175-39a0615d44e1\",\n            description=\"Get shipping cost estimate\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"order_number\": \"TEST-001\",\n                \"customer\": {\n                    \"name\": \"John Doe\",\n                    \"email\": \"john@example.com\",\n                    \"phone\": \"123-456-7890\",\n                    \"address\": \"123 Test St\",\n                    \"city\": \"Test City\",\n                    \"state\": \"TS\",\n                    \"zip\": \"12345\",\n                },\n                \"items\": [\n                    {\n                        \"file_url\": \"https://example.com/model.stl\",\n                        \"quantity\": \"1\",\n                        \"color\": \"black\",\n                        \"profile\": \"PLA\",\n                    }\n                ],\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"shipping_cost\", 4.81), (\"currency_code\", \"usd\")],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"shippingCost\": 4.81,\n                    \"currencyCode\": \"usd\",\n                },\n                \"_convert_to_color\": lambda *args, **kwargs: \"black\",\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 249,
          "end_line": 269,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 249,
              "line": "    def run("
            },
            {
              "lineno": 250,
              "line": "        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs"
            },
            {
              "lineno": 251,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 252,
              "line": "        try:"
            },
            {
              "lineno": 253,
              "line": "            order_data = self._format_order_data("
            },
            {
              "lineno": 254,
              "line": "                input_data.customer,"
            },
            {
              "lineno": 255,
              "line": "                input_data.order_number,"
            },
            {
              "lineno": 256,
              "line": "                input_data.items,"
            },
            {
              "lineno": 257,
              "line": "                credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 258,
              "line": "            )"
            },
            {
              "lineno": 259,
              "line": "            result = self._make_request("
            },
            {
              "lineno": 260,
              "line": "                \"POST\","
            },
            {
              "lineno": 261,
              "line": "                \"order/estimateShipping\","
            },
            {
              "lineno": 262,
              "line": "                credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 263,
              "line": "                json=order_data,"
            },
            {
              "lineno": 264,
              "line": "            )"
            },
            {
              "lineno": 265,
              "line": "            yield \"shipping_cost\", result[\"shippingCost\"]"
            },
            {
              "lineno": 266,
              "line": "            yield \"currency_code\", result[\"currencyCode\"]"
            },
            {
              "lineno": 267,
              "line": "        except Exception as e:"
            },
            {
              "lineno": 268,
              "line": "            yield \"error\", str(e)"
            },
            {
              "lineno": 269,
              "line": "            raise"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            order_data = self._format_order_data(\n                input_data.customer,\n                input_data.order_number,\n                input_data.items,\n                credentials.api_key.get_secret_value(),\n            )\n            result = self._make_request(\n                \"POST\",\n                \"order/estimateShipping\",\n                credentials.api_key.get_secret_value(),\n                json=order_data,\n            )\n            yield \"shipping_cost\", result[\"shippingCost\"]\n            yield \"currency_code\", result[\"currencyCode\"]",
              "successors": [
                {
                  "id": 3,
                  "label": "        except Exception as e:\n            yield \"error\", str(e)\n            raise",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 192,
          "end_line": 204,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 192,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 193,
              "line": "        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()"
            },
            {
              "lineno": 194,
              "line": "        order_number: str = SchemaField("
            },
            {
              "lineno": 195,
              "line": "            description=\"Your custom order number (or leave blank for a random one)\","
            },
            {
              "lineno": 196,
              "line": "            default_factory=lambda: str(uuid.uuid4()),"
            },
            {
              "lineno": 197,
              "line": "        )"
            },
            {
              "lineno": 198,
              "line": "        customer: CustomerDetails = SchemaField("
            },
            {
              "lineno": 199,
              "line": "            description=\"Customer details for where to ship the item\""
            },
            {
              "lineno": 200,
              "line": "        )"
            },
            {
              "lineno": 201,
              "line": "        items: List[OrderItem] = SchemaField("
            },
            {
              "lineno": 202,
              "line": "            description=\"List of items to print\","
            },
            {
              "lineno": 203,
              "line": "            advanced=False,"
            },
            {
              "lineno": 204,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n        order_number: str = SchemaField(\n            description=\"Your custom order number (or leave blank for a random one)\",\n            default_factory=lambda: str(uuid.uuid4()),\n        )\n        customer: CustomerDetails = SchemaField(\n            description=\"Customer details for where to ship the item\"\n        )\n        items: List[OrderItem] = SchemaField(\n            description=\"List of items to print\",\n            advanced=False,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 206,
          "end_line": 209,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 206,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 207,
              "line": "        shipping_cost: float = SchemaField(description=\"Estimated shipping cost\")"
            },
            {
              "lineno": 208,
              "line": "        currency_code: str = SchemaField(description=\"Currency code (e.g., 'usd')\")"
            },
            {
              "lineno": 209,
              "line": "        error: str = SchemaField(description=\"Error message if estimation failed\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        shipping_cost: float = SchemaField(description=\"Estimated shipping cost\")\n        currency_code: str = SchemaField(description=\"Currency code (e.g., 'usd')\")\n        error: str = SchemaField(description=\"Error message if estimation failed\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 189,
          "line": "class Slant3DEstimateShippingBlock(Slant3DBlockBase):"
        },
        {
          "lineno": 190,
          "line": "    \"\"\"Block for getting shipping cost estimates\"\"\""
        },
        {
          "lineno": 191,
          "line": ""
        },
        {
          "lineno": 205,
          "line": ""
        },
        {
          "lineno": 210,
          "line": ""
        },
        {
          "lineno": 248,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Slant3DEstimateShippingBlock(Slant3DBlockBase):\n\"\"\"Block for getting shipping cost estimates\"\"\"",
          "successors": []
        }
      ]
    },
    {
      "name": "Slant3DGetOrdersBlock",
      "type": "class",
      "start_line": 272,
      "end_line": 325,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 282,
          "end_line": 313,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 282,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 283,
              "line": "        super().__init__("
            },
            {
              "lineno": 284,
              "line": "            id=\"42283bf5-8a32-4fb4-92a2-60a9ea48e105\","
            },
            {
              "lineno": 285,
              "line": "            description=\"Get all orders for the account\","
            },
            {
              "lineno": 286,
              "line": "            input_schema=self.Input,"
            },
            {
              "lineno": 287,
              "line": "            output_schema=self.Output,"
            },
            {
              "lineno": 288,
              "line": "            # This block is disabled for cloud hosted because it allows access to all orders for the account"
            },
            {
              "lineno": 289,
              "line": "            disabled=settings.Settings().config.behave_as == BehaveAs.CLOUD,"
            },
            {
              "lineno": 290,
              "line": "            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},"
            },
            {
              "lineno": 291,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 292,
              "line": "            test_output=["
            },
            {
              "lineno": 293,
              "line": "                ("
            },
            {
              "lineno": 294,
              "line": "                    \"orders\","
            },
            {
              "lineno": 295,
              "line": "                    ["
            },
            {
              "lineno": 296,
              "line": "                        \"1234567890\","
            },
            {
              "lineno": 297,
              "line": "                    ],"
            },
            {
              "lineno": 298,
              "line": "                )"
            },
            {
              "lineno": 299,
              "line": "            ],"
            },
            {
              "lineno": 300,
              "line": "            test_mock={"
            },
            {
              "lineno": 301,
              "line": "                \"_make_request\": lambda *args, **kwargs: {"
            },
            {
              "lineno": 302,
              "line": "                    \"ordersData\": ["
            },
            {
              "lineno": 303,
              "line": "                        {"
            },
            {
              "lineno": 304,
              "line": "                            \"orderId\": 1234567890,"
            },
            {
              "lineno": 305,
              "line": "                            \"orderTimestamp\": {"
            },
            {
              "lineno": 306,
              "line": "                                \"_seconds\": 1719510986,"
            },
            {
              "lineno": 307,
              "line": "                                \"_nanoseconds\": 710000000,"
            },
            {
              "lineno": 308,
              "line": "                            },"
            },
            {
              "lineno": 309,
              "line": "                        }"
            },
            {
              "lineno": 310,
              "line": "                    ]"
            },
            {
              "lineno": 311,
              "line": "                }"
            },
            {
              "lineno": 312,
              "line": "            },"
            },
            {
              "lineno": 313,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"42283bf5-8a32-4fb4-92a2-60a9ea48e105\",\n            description=\"Get all orders for the account\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            # This block is disabled for cloud hosted because it allows access to all orders for the account\n            disabled=settings.Settings().config.behave_as == BehaveAs.CLOUD,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"orders\",\n                    [\n                        \"1234567890\",\n                    ],\n                )\n            ],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"ordersData\": [\n                        {\n                            \"orderId\": 1234567890,\n                            \"orderTimestamp\": {\n                                \"_seconds\": 1719510986,\n                                \"_nanoseconds\": 710000000,\n                            },\n                        }\n                    ]\n                }\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 315,
          "end_line": 325,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 315,
              "line": "    def run("
            },
            {
              "lineno": 316,
              "line": "        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs"
            },
            {
              "lineno": 317,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 318,
              "line": "        try:"
            },
            {
              "lineno": 319,
              "line": "            result = self._make_request("
            },
            {
              "lineno": 320,
              "line": "                \"GET\", \"order\", credentials.api_key.get_secret_value()"
            },
            {
              "lineno": 321,
              "line": "            )"
            },
            {
              "lineno": 322,
              "line": "            yield \"orders\", [str(order[\"orderId\"]) for order in result[\"ordersData\"]]"
            },
            {
              "lineno": 323,
              "line": "        except Exception as e:"
            },
            {
              "lineno": 324,
              "line": "            yield \"error\", str(e)"
            },
            {
              "lineno": 325,
              "line": "            raise"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(\n                \"GET\", \"order\", credentials.api_key.get_secret_value()\n            )\n            yield \"orders\", [str(order[\"orderId\"]) for order in result[\"ordersData\"]]",
              "successors": [
                {
                  "id": 3,
                  "label": "        except Exception as e:\n            yield \"error\", str(e)\n            raise",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 275,
          "end_line": 276,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 275,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 276,
              "line": "        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 278,
          "end_line": 280,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 278,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 279,
              "line": "        orders: List[str] = SchemaField(description=\"List of orders with their details\")"
            },
            {
              "lineno": 280,
              "line": "        error: str = SchemaField(description=\"Error message if request failed\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        orders: List[str] = SchemaField(description=\"List of orders with their details\")\n        error: str = SchemaField(description=\"Error message if request failed\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 272,
          "line": "class Slant3DGetOrdersBlock(Slant3DBlockBase):"
        },
        {
          "lineno": 273,
          "line": "    \"\"\"Block for retrieving all orders\"\"\""
        },
        {
          "lineno": 274,
          "line": ""
        },
        {
          "lineno": 277,
          "line": ""
        },
        {
          "lineno": 281,
          "line": ""
        },
        {
          "lineno": 314,
          "line": ""
        }
      ],
      "blocks": []
    },
    {
      "name": "Slant3DTrackingBlock",
      "type": "class",
      "start_line": 328,
      "end_line": 375,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 342,
          "end_line": 360,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 342,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 343,
              "line": "        super().__init__("
            },
            {
              "lineno": 344,
              "line": "            id=\"dd7c0293-c5af-4551-ba3e-fc162fb1fb89\","
            },
            {
              "lineno": 345,
              "line": "            description=\"Track order status and shipping\","
            },
            {
              "lineno": 346,
              "line": "            input_schema=self.Input,"
            },
            {
              "lineno": 347,
              "line": "            output_schema=self.Output,"
            },
            {
              "lineno": 348,
              "line": "            test_input={"
            },
            {
              "lineno": 349,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 350,
              "line": "                \"order_id\": \"314144241\","
            },
            {
              "lineno": 351,
              "line": "            },"
            },
            {
              "lineno": 352,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 353,
              "line": "            test_output=[(\"status\", \"awaiting_shipment\"), (\"tracking_numbers\", [])],"
            },
            {
              "lineno": 354,
              "line": "            test_mock={"
            },
            {
              "lineno": 355,
              "line": "                \"_make_request\": lambda *args, **kwargs: {"
            },
            {
              "lineno": 356,
              "line": "                    \"status\": \"awaiting_shipment\","
            },
            {
              "lineno": 357,
              "line": "                    \"trackingNumbers\": [],"
            },
            {
              "lineno": 358,
              "line": "                }"
            },
            {
              "lineno": 359,
              "line": "            },"
            },
            {
              "lineno": 360,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"dd7c0293-c5af-4551-ba3e-fc162fb1fb89\",\n            description=\"Track order status and shipping\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"order_id\": \"314144241\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"status\", \"awaiting_shipment\"), (\"tracking_numbers\", [])],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"status\": \"awaiting_shipment\",\n                    \"trackingNumbers\": [],\n                }\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 362,
          "end_line": 375,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 362,
              "line": "    def run("
            },
            {
              "lineno": 363,
              "line": "        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs"
            },
            {
              "lineno": 364,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 365,
              "line": "        try:"
            },
            {
              "lineno": 366,
              "line": "            result = self._make_request("
            },
            {
              "lineno": 367,
              "line": "                \"GET\","
            },
            {
              "lineno": 368,
              "line": "                f\"order/{input_data.order_id}/get-tracking\","
            },
            {
              "lineno": 369,
              "line": "                credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 370,
              "line": "            )"
            },
            {
              "lineno": 371,
              "line": "            yield \"status\", result[\"status\"]"
            },
            {
              "lineno": 372,
              "line": "            yield \"tracking_numbers\", result[\"trackingNumbers\"]"
            },
            {
              "lineno": 373,
              "line": "        except Exception as e:"
            },
            {
              "lineno": 374,
              "line": "            yield \"error\", str(e)"
            },
            {
              "lineno": 375,
              "line": "            raise"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(\n                \"GET\",\n                f\"order/{input_data.order_id}/get-tracking\",\n                credentials.api_key.get_secret_value(),\n            )\n            yield \"status\", result[\"status\"]\n            yield \"tracking_numbers\", result[\"trackingNumbers\"]",
              "successors": [
                {
                  "id": 3,
                  "label": "        except Exception as e:\n            yield \"error\", str(e)\n            raise",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 331,
          "end_line": 333,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 331,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 332,
              "line": "        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()"
            },
            {
              "lineno": 333,
              "line": "        order_id: str = SchemaField(description=\"Slant3D order ID to track\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n        order_id: str = SchemaField(description=\"Slant3D order ID to track\")",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 335,
          "end_line": 340,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 335,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 336,
              "line": "        status: str = SchemaField(description=\"Order status\")"
            },
            {
              "lineno": 337,
              "line": "        tracking_numbers: List[str] = SchemaField("
            },
            {
              "lineno": 338,
              "line": "            description=\"List of tracking numbers\""
            },
            {
              "lineno": 339,
              "line": "        )"
            },
            {
              "lineno": 340,
              "line": "        error: str = SchemaField(description=\"Error message if tracking failed\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        status: str = SchemaField(description=\"Order status\")\n        tracking_numbers: List[str] = SchemaField(\n            description=\"List of tracking numbers\"\n        )\n        error: str = SchemaField(description=\"Error message if tracking failed\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 328,
          "line": "class Slant3DTrackingBlock(Slant3DBlockBase):"
        },
        {
          "lineno": 329,
          "line": "    \"\"\"Block for tracking order status and shipping\"\"\""
        },
        {
          "lineno": 330,
          "line": ""
        },
        {
          "lineno": 334,
          "line": ""
        },
        {
          "lineno": 341,
          "line": ""
        },
        {
          "lineno": 361,
          "line": ""
        }
      ],
      "blocks": []
    },
    {
      "name": "Slant3DCancelOrderBlock",
      "type": "class",
      "start_line": 378,
      "end_line": 418,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 389,
          "end_line": 404,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 389,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 390,
              "line": "        super().__init__("
            },
            {
              "lineno": 391,
              "line": "            id=\"54de35e1-407f-450b-b5fa-3b5e2eba8185\","
            },
            {
              "lineno": 392,
              "line": "            description=\"Cancel an existing order\","
            },
            {
              "lineno": 393,
              "line": "            input_schema=self.Input,"
            },
            {
              "lineno": 394,
              "line": "            output_schema=self.Output,"
            },
            {
              "lineno": 395,
              "line": "            test_input={"
            },
            {
              "lineno": 396,
              "line": "                \"credentials\": TEST_CREDENTIALS_INPUT,"
            },
            {
              "lineno": 397,
              "line": "                \"order_id\": \"314144241\","
            },
            {
              "lineno": 398,
              "line": "            },"
            },
            {
              "lineno": 399,
              "line": "            test_credentials=TEST_CREDENTIALS,"
            },
            {
              "lineno": 400,
              "line": "            test_output=[(\"status\", \"Order cancelled\")],"
            },
            {
              "lineno": 401,
              "line": "            test_mock={"
            },
            {
              "lineno": 402,
              "line": "                \"_make_request\": lambda *args, **kwargs: {\"status\": \"Order cancelled\"}"
            },
            {
              "lineno": 403,
              "line": "            },"
            },
            {
              "lineno": 404,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"54de35e1-407f-450b-b5fa-3b5e2eba8185\",\n            description=\"Cancel an existing order\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"order_id\": \"314144241\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"status\", \"Order cancelled\")],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\"status\": \"Order cancelled\"}\n            },\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 406,
          "end_line": 418,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 406,
              "line": "    def run("
            },
            {
              "lineno": 407,
              "line": "        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs"
            },
            {
              "lineno": 408,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 409,
              "line": "        try:"
            },
            {
              "lineno": 410,
              "line": "            result = self._make_request("
            },
            {
              "lineno": 411,
              "line": "                \"DELETE\","
            },
            {
              "lineno": 412,
              "line": "                f\"order/{input_data.order_id}\","
            },
            {
              "lineno": 413,
              "line": "                credentials.api_key.get_secret_value(),"
            },
            {
              "lineno": 414,
              "line": "            )"
            },
            {
              "lineno": 415,
              "line": "            yield \"status\", result[\"status\"]"
            },
            {
              "lineno": 416,
              "line": "        except Exception as e:"
            },
            {
              "lineno": 417,
              "line": "            yield \"error\", str(e)"
            },
            {
              "lineno": 418,
              "line": "            raise"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(",
              "successors": [
                {
                  "id": 3,
                  "label": "                \"DELETE\",\n                f\"order/{input_data.order_id}\",\n                credentials.api_key.get_secret_value(),\n            )\n            yield \"status\", result[\"status\"]",
                  "successors": [
                    {
                      "id": 5,
                      "label": "        except Exception as e:\n            yield \"error\", str(e)\n            raise",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 381,
          "end_line": 383,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 381,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 382,
              "line": "        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()"
            },
            {
              "lineno": 383,
              "line": "        order_id: str = SchemaField(description=\"Slant3D order ID to cancel\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n        order_id: str = SchemaField(description=\"Slant3D order ID to cancel\")",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 385,
          "end_line": 387,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 385,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 386,
              "line": "        status: str = SchemaField(description=\"Cancellation status message\")"
            },
            {
              "lineno": 387,
              "line": "        error: str = SchemaField(description=\"Error message if cancellation failed\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        status: str = SchemaField(description=\"Cancellation status message\")\n        error: str = SchemaField(description=\"Error message if cancellation failed\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 378,
          "line": "class Slant3DCancelOrderBlock(Slant3DBlockBase):"
        },
        {
          "lineno": 379,
          "line": "    \"\"\"Block for canceling orders\"\"\""
        },
        {
          "lineno": 380,
          "line": ""
        },
        {
          "lineno": 384,
          "line": ""
        },
        {
          "lineno": 388,
          "line": ""
        },
        {
          "lineno": 405,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Slant3DCancelOrderBlock(Slant3DBlockBase):\n    \"\"\"Block for canceling orders\"\"\"\n\n\n\n",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import uuid"
    },
    {
      "lineno": 2,
      "line": "from typing import List"
    },
    {
      "lineno": 3,
      "line": ""
    },
    {
      "lineno": 4,
      "line": "import requests as baserequests"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": "from backend.data.block import BlockOutput, BlockSchema"
    },
    {
      "lineno": 7,
      "line": "from backend.data.model import APIKeyCredentials, SchemaField"
    },
    {
      "lineno": 8,
      "line": "from backend.util import settings"
    },
    {
      "lineno": 9,
      "line": "from backend.util.settings import BehaveAs"
    },
    {
      "lineno": 10,
      "line": ""
    },
    {
      "lineno": 11,
      "line": "from ._api import ("
    },
    {
      "lineno": 12,
      "line": "    TEST_CREDENTIALS,"
    },
    {
      "lineno": 13,
      "line": "    TEST_CREDENTIALS_INPUT,"
    },
    {
      "lineno": 14,
      "line": "    CustomerDetails,"
    },
    {
      "lineno": 15,
      "line": "    OrderItem,"
    },
    {
      "lineno": 16,
      "line": "    Slant3DCredentialsField,"
    },
    {
      "lineno": 17,
      "line": "    Slant3DCredentialsInput,"
    },
    {
      "lineno": 18,
      "line": ")"
    },
    {
      "lineno": 19,
      "line": "from .base import Slant3DBlockBase"
    },
    {
      "lineno": 20,
      "line": ""
    },
    {
      "lineno": 21,
      "line": ""
    },
    {
      "lineno": 96,
      "line": ""
    },
    {
      "lineno": 97,
      "line": ""
    },
    {
      "lineno": 187,
      "line": ""
    },
    {
      "lineno": 188,
      "line": ""
    },
    {
      "lineno": 270,
      "line": ""
    },
    {
      "lineno": 271,
      "line": ""
    },
    {
      "lineno": 326,
      "line": ""
    },
    {
      "lineno": 327,
      "line": ""
    },
    {
      "lineno": 376,
      "line": ""
    },
    {
      "lineno": 377,
      "line": ""
    }
  ],
  "blocks": []
}