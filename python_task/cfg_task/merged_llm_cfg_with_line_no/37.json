{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 121,
  "functions": [],
  "classes": [
    {
      "name": "HubSpotEngagementBlock",
      "type": "class",
      "start_line": 13,
      "end_line": 121,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 37,
          "end_line": 44,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 37,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 38,
              "line": "        super().__init__("
            },
            {
              "lineno": 39,
              "line": "            id=\"c6524385-7d87-49d6-a470-248bd29ca765\","
            },
            {
              "lineno": 40,
              "line": "            description=\"Manages HubSpot engagements - sends emails and tracks engagement metrics\","
            },
            {
              "lineno": 41,
              "line": "            categories={BlockCategory.CRM, BlockCategory.COMMUNICATION},"
            },
            {
              "lineno": 42,
              "line": "            input_schema=HubSpotEngagementBlock.Input,"
            },
            {
              "lineno": 43,
              "line": "            output_schema=HubSpotEngagementBlock.Output,"
            },
            {
              "lineno": 44,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"c6524385-7d87-49d6-a470-248bd29ca765\",\n            description=\"Manages HubSpot engagements - sends emails and tracks engagement metrics\",\n            categories={BlockCategory.CRM, BlockCategory.COMMUNICATION},\n            input_schema=HubSpotEngagementBlock.Input,\n            output_schema=HubSpotEngagementBlock.Output,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 46,
          "end_line": 121,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 46,
              "line": "    def run("
            },
            {
              "lineno": 47,
              "line": "        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs"
            },
            {
              "lineno": 48,
              "line": "    ) -> BlockOutput:"
            },
            {
              "lineno": 49,
              "line": "        base_url = \"https://api.hubapi.com\""
            },
            {
              "lineno": 50,
              "line": "        headers = {"
            },
            {
              "lineno": 51,
              "line": "            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\","
            },
            {
              "lineno": 52,
              "line": "            \"Content-Type\": \"application/json\","
            },
            {
              "lineno": 53,
              "line": "        }"
            },
            {
              "lineno": 54,
              "line": ""
            },
            {
              "lineno": 55,
              "line": "        if input_data.operation == \"send_email\":"
            },
            {
              "lineno": 56,
              "line": "            # Using the email send API"
            },
            {
              "lineno": 57,
              "line": "            email_url = f\"{base_url}/crm/v3/objects/emails\""
            },
            {
              "lineno": 58,
              "line": "            email_data = {"
            },
            {
              "lineno": 59,
              "line": "                \"properties\": {"
            },
            {
              "lineno": 60,
              "line": "                    \"hs_timestamp\": datetime.now().isoformat(),"
            },
            {
              "lineno": 61,
              "line": "                    \"hubspot_owner_id\": \"1\",  # This should be configurable"
            },
            {
              "lineno": 62,
              "line": "                    \"hs_email_direction\": \"OUTBOUND\","
            },
            {
              "lineno": 63,
              "line": "                    \"hs_email_status\": \"SEND\","
            },
            {
              "lineno": 64,
              "line": "                    \"hs_email_subject\": input_data.email_data.get(\"subject\"),"
            },
            {
              "lineno": 65,
              "line": "                    \"hs_email_text\": input_data.email_data.get(\"content\"),"
            },
            {
              "lineno": 66,
              "line": "                    \"hs_email_to_email\": input_data.email_data.get(\"recipient\"),"
            },
            {
              "lineno": 67,
              "line": "                }"
            },
            {
              "lineno": 68,
              "line": "            }"
            },
            {
              "lineno": 69,
              "line": ""
            },
            {
              "lineno": 70,
              "line": "            response = requests.post(email_url, headers=headers, json=email_data)"
            },
            {
              "lineno": 71,
              "line": "            result = response.json()"
            },
            {
              "lineno": 72,
              "line": "            yield \"result\", result"
            },
            {
              "lineno": 73,
              "line": "            yield \"status\", \"email_sent\""
            },
            {
              "lineno": 74,
              "line": ""
            },
            {
              "lineno": 75,
              "line": "        elif input_data.operation == \"track_engagement\":"
            },
            {
              "lineno": 76,
              "line": "            # Get engagement events for the contact"
            },
            {
              "lineno": 77,
              "line": "            from_date = datetime.now() - timedelta(days=input_data.timeframe_days)"
            },
            {
              "lineno": 78,
              "line": "            engagement_url = ("
            },
            {
              "lineno": 79,
              "line": "                f\"{base_url}/crm/v3/objects/contacts/{input_data.contact_id}/engagement\""
            },
            {
              "lineno": 80,
              "line": "            )"
            },
            {
              "lineno": 81,
              "line": ""
            },
            {
              "lineno": 82,
              "line": "            params = {\"limit\": 100, \"after\": from_date.isoformat()}"
            },
            {
              "lineno": 83,
              "line": ""
            },
            {
              "lineno": 84,
              "line": "            response = requests.get(engagement_url, headers=headers, params=params)"
            },
            {
              "lineno": 85,
              "line": "            engagements = response.json()"
            },
            {
              "lineno": 86,
              "line": ""
            },
            {
              "lineno": 87,
              "line": "            # Process engagement metrics"
            },
            {
              "lineno": 88,
              "line": "            metrics = {"
            },
            {
              "lineno": 89,
              "line": "                \"email_opens\": 0,"
            },
            {
              "lineno": 90,
              "line": "                \"email_clicks\": 0,"
            },
            {
              "lineno": 91,
              "line": "                \"email_replies\": 0,"
            },
            {
              "lineno": 92,
              "line": "                \"last_engagement\": None,"
            },
            {
              "lineno": 93,
              "line": "                \"engagement_score\": 0,"
            },
            {
              "lineno": 94,
              "line": "            }"
            },
            {
              "lineno": 95,
              "line": ""
            },
            {
              "lineno": 96,
              "line": "            for engagement in engagements.get(\"results\", []):"
            },
            {
              "lineno": 97,
              "line": "                eng_type = engagement.get(\"properties\", {}).get(\"hs_engagement_type\")"
            },
            {
              "lineno": 98,
              "line": "                if eng_type == \"EMAIL\":"
            },
            {
              "lineno": 99,
              "line": "                    metrics[\"email_opens\"] += 1"
            },
            {
              "lineno": 100,
              "line": "                elif eng_type == \"EMAIL_CLICK\":"
            },
            {
              "lineno": 101,
              "line": "                    metrics[\"email_clicks\"] += 1"
            },
            {
              "lineno": 102,
              "line": "                elif eng_type == \"EMAIL_REPLY\":"
            },
            {
              "lineno": 103,
              "line": "                    metrics[\"email_replies\"] += 1"
            },
            {
              "lineno": 104,
              "line": ""
            },
            {
              "lineno": 105,
              "line": "                # Update last engagement time"
            },
            {
              "lineno": 106,
              "line": "                eng_time = engagement.get(\"properties\", {}).get(\"hs_timestamp\")"
            },
            {
              "lineno": 107,
              "line": "                if eng_time and ("
            },
            {
              "lineno": 108,
              "line": "                    not metrics[\"last_engagement\"]"
            },
            {
              "lineno": 109,
              "line": "                    or eng_time > metrics[\"last_engagement\"]"
            },
            {
              "lineno": 110,
              "line": "                ):"
            },
            {
              "lineno": 111,
              "line": "                    metrics[\"last_engagement\"] = eng_time"
            },
            {
              "lineno": 112,
              "line": ""
            },
            {
              "lineno": 113,
              "line": "            # Calculate simple engagement score"
            },
            {
              "lineno": 114,
              "line": "            metrics[\"engagement_score\"] = ("
            },
            {
              "lineno": 115,
              "line": "                metrics[\"email_opens\"]"
            },
            {
              "lineno": 116,
              "line": "                + metrics[\"email_clicks\"] * 2"
            },
            {
              "lineno": 117,
              "line": "                + metrics[\"email_replies\"] * 3"
            },
            {
              "lineno": 118,
              "line": "            )"
            },
            {
              "lineno": 119,
              "line": ""
            },
            {
              "lineno": 120,
              "line": "            yield \"result\", metrics"
            },
            {
              "lineno": 121,
              "line": "            yield \"status\", \"engagement_tracked\""
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "def run(self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs):\n        base_url = \"https://api.hubapi.com\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }",
              "successors": [
                {
                  "id": 2,
                  "label": "if input_data.operation == \"send_email\":\n            email_url = f\"{base_url}/crm/v3/objects/emails\"\n            email_data = {\n                \"properties\": {\n                    \"hs_timestamp\": datetime.now().isoformat(),\n                    \"hubspot_owner_id\": \"1\",  # This should be configurable\n                    \"hs_email_direction\": \"OUTBOUND\",\n                    \"hs_email_status\": \"SEND\",\n                    \"hs_email_subject\": input_data.email_data.get(\"subject\"),\n                    \"hs_email_text\": input_data.email_data.get(\"content\"),\n                    \"hs_email_to_email\": input_data.email_data.get(\"recipient\"),\n                }\n            }",
                  "successors": [
                    {
                      "id": 4,
                      "label": "            response = requests.post(email_url, headers=headers, json=email_data)\n            result = response.json()\n            yield \"result\", result\n            yield \"status\", \"email_sent\"",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "label": "elif input_data.operation == \"track_engagement\":\n            from_date = datetime.now() - timedelta(days=input_data.timeframe_days)\n            engagement_url = (\n                f\"{base_url}/crm/v3/objects/contacts/{input_data.contact_id}/engagement\"\n            )\n\n            params = {\"limit\": 100, \"after\": from_date.isoformat()}\n\n            response = requests.get(engagement_url, headers=headers, params=params)\n            engagements = response.json()\n\n            metrics = {\n                \"email_opens\": 0,\n                \"email_clicks\": 0,\n                \"email_replies\": 0,\n                \"last_engagement\": None,\n                \"engagement_score\": 0,\n            }",
                  "successors": [
                    {
                      "id": 7,
                      "label": "            for engagement in engagements.get(\"results\", []):\n                eng_type = engagement.get(\"properties\", {}).get(\"hs_engagement_type\")\n                if eng_type == \"EMAIL\":\n                    metrics[\"email_opens\"] += 1\n                elif eng_type == \"EMAIL_CLICK\":\n                    metrics[\"email_clicks\"] += 1\n                elif eng_type == \"EMAIL_REPLY\":\n                    metrics[\"email_replies\"] += 1\n\n                # Update last engagement time\n                eng_time = engagement.get(\"properties\", {}).get(\"hs_timestamp\")\n                if eng_time and (\n                    not metrics[\"last_engagement\"]\n                    or eng_time > metrics[\"last_engagement\"]\n                ):\n                    metrics[\"last_engagement\"] = eng_time",
                      "successors": [
                        {
                          "id": 8,
                          "label": "            metrics[\"engagement_score\"] = (\n                metrics[\"email_opens\"]\n                + metrics[\"email_clicks\"] * 2\n                + metrics[\"email_replies\"] * 3\n            )\n\n            yield \"result\", metrics\n            yield \"status\", \"engagement_tracked\"",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 14,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 15,
              "line": "        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()"
            },
            {
              "lineno": 16,
              "line": "        operation: str = SchemaField("
            },
            {
              "lineno": 17,
              "line": "            description=\"Operation to perform (send_email, track_engagement)\","
            },
            {
              "lineno": 18,
              "line": "            default=\"send_email\","
            },
            {
              "lineno": 19,
              "line": "        )"
            },
            {
              "lineno": 20,
              "line": "        email_data: dict = SchemaField("
            },
            {
              "lineno": 21,
              "line": "            description=\"Email data including recipient, subject, content\","
            },
            {
              "lineno": 22,
              "line": "            default={},"
            },
            {
              "lineno": 23,
              "line": "        )"
            },
            {
              "lineno": 24,
              "line": "        contact_id: str = SchemaField("
            },
            {
              "lineno": 25,
              "line": "            description=\"Contact ID for engagement tracking\", default=\"\""
            },
            {
              "lineno": 26,
              "line": "        )"
            },
            {
              "lineno": 27,
              "line": "        timeframe_days: int = SchemaField("
            },
            {
              "lineno": 28,
              "line": "            description=\"Number of days to look back for engagement\","
            },
            {
              "lineno": 29,
              "line": "            default=30,"
            },
            {
              "lineno": 30,
              "line": "            optional=True,"
            },
            {
              "lineno": 31,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (send_email, track_engagement)\",\n            default=\"send_email\",\n        )\n        email_data: dict = SchemaField(\n            description=\"Email data including recipient, subject, content\",\n            default={},\n        )\n        contact_id: str = SchemaField(\n            description=\"Contact ID for engagement tracking\", default=\"\"\n        )\n        timeframe_days: int = SchemaField(\n            description=\"Number of days to look back for engagement\",\n            default=30,\n            optional=True,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 33,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 33,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 34,
              "line": "        result: dict = SchemaField(description=\"Operation result\")"
            },
            {
              "lineno": 35,
              "line": "        status: str = SchemaField(description=\"Operation status\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        result: dict = SchemaField(description=\"Operation result\")\n        status: str = SchemaField(description=\"Operation status\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 13,
          "line": "class HubSpotEngagementBlock(Block):"
        },
        {
          "lineno": 32,
          "line": ""
        },
        {
          "lineno": 36,
          "line": ""
        },
        {
          "lineno": 45,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class HubSpotEngagementBlock(Block):",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "from datetime import datetime, timedelta"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "from backend.blocks.hubspot._auth import ("
    },
    {
      "lineno": 4,
      "line": "    HubSpotCredentials,"
    },
    {
      "lineno": 5,
      "line": "    HubSpotCredentialsField,"
    },
    {
      "lineno": 6,
      "line": "    HubSpotCredentialsInput,"
    },
    {
      "lineno": 7,
      "line": ")"
    },
    {
      "lineno": 8,
      "line": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema"
    },
    {
      "lineno": 9,
      "line": "from backend.data.model import SchemaField"
    },
    {
      "lineno": 10,
      "line": "from backend.util.request import requests"
    },
    {
      "lineno": 11,
      "line": ""
    },
    {
      "lineno": 12,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "from datetime import datetime, timedelta\nfrom backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests",
      "successors": []
    }
  ]
}