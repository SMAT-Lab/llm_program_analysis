{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 95,
  "functions": [],
  "classes": [
    {
      "name": "EmailCredentials",
      "type": "class",
      "start_line": 11,
      "end_line": 19,
      "functions": [],
      "simplified_code": [
        {
          "lineno": 11,
          "line": "class EmailCredentials(BaseModel):"
        },
        {
          "lineno": 12,
          "line": "    smtp_server: str = SchemaField("
        },
        {
          "lineno": 13,
          "line": "        default=\"smtp.gmail.com\", description=\"SMTP server address\""
        },
        {
          "lineno": 14,
          "line": "    )"
        },
        {
          "lineno": 15,
          "line": "    smtp_port: int = SchemaField(default=25, description=\"SMTP port number\")"
        },
        {
          "lineno": 16,
          "line": "    smtp_username: BlockSecret = SecretField(key=\"smtp_username\")"
        },
        {
          "lineno": 17,
          "line": "    smtp_password: BlockSecret = SecretField(key=\"smtp_password\")"
        },
        {
          "lineno": 18,
          "line": ""
        },
        {
          "lineno": 19,
          "line": "    model_config = ConfigDict(title=\"Email Credentials\")"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class EmailCredentials(BaseModel):\n    smtp_server: str = SchemaField(\n        default=\"smtp.gmail.com\", description=\"SMTP server address\"\n    )\n    smtp_port: int = SchemaField(default=25, description=\"SMTP port number\")\n    smtp_username: BlockSecret = SecretField(key=\"smtp_username\")\n    smtp_password: BlockSecret = SecretField(key=\"smtp_password\")\n\n    model_config = ConfigDict(title=\"Email Credentials\")",
          "successors": []
        }
      ]
    },
    {
      "name": "SendEmailBlock",
      "type": "class",
      "start_line": 22,
      "end_line": 95,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 44,
          "end_line": 65,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 44,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 45,
              "line": "        super().__init__("
            },
            {
              "lineno": 46,
              "line": "            disabled=True,"
            },
            {
              "lineno": 47,
              "line": "            id=\"4335878a-394e-4e67-adf2-919877ff49ae\","
            },
            {
              "lineno": 48,
              "line": "            description=\"This block sends an email using the provided SMTP credentials.\","
            },
            {
              "lineno": 49,
              "line": "            categories={BlockCategory.OUTPUT},"
            },
            {
              "lineno": 50,
              "line": "            input_schema=SendEmailBlock.Input,"
            },
            {
              "lineno": 51,
              "line": "            output_schema=SendEmailBlock.Output,"
            },
            {
              "lineno": 52,
              "line": "            test_input={"
            },
            {
              "lineno": 53,
              "line": "                \"to_email\": \"recipient@example.com\","
            },
            {
              "lineno": 54,
              "line": "                \"subject\": \"Test Email\","
            },
            {
              "lineno": 55,
              "line": "                \"body\": \"This is a test email.\","
            },
            {
              "lineno": 56,
              "line": "                \"creds\": {"
            },
            {
              "lineno": 57,
              "line": "                    \"smtp_server\": \"smtp.gmail.com\","
            },
            {
              "lineno": 58,
              "line": "                    \"smtp_port\": 25,"
            },
            {
              "lineno": 59,
              "line": "                    \"smtp_username\": \"your-email@gmail.com\","
            },
            {
              "lineno": 60,
              "line": "                    \"smtp_password\": \"your-gmail-password\","
            },
            {
              "lineno": 61,
              "line": "                },"
            },
            {
              "lineno": 62,
              "line": "            },"
            },
            {
              "lineno": 63,
              "line": "            test_output=[(\"status\", \"Email sent successfully\")],"
            },
            {
              "lineno": 64,
              "line": "            test_mock={\"send_email\": lambda *args, **kwargs: \"Email sent successfully\"},"
            },
            {
              "lineno": 65,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            disabled=True,\n            id=\"4335878a-394e-4e67-adf2-919877ff49ae\",\n            description=\"This block sends an email using the provided SMTP credentials.\",\n            categories={BlockCategory.OUTPUT},\n            input_schema=SendEmailBlock.Input,\n            output_schema=SendEmailBlock.Output,\n            test_input={\n                \"to_email\": \"recipient@example.com\",\n                \"subject\": \"Test Email\",\n                \"body\": \"This is a test email.\",\n                \"creds\": {\n                    \"smtp_server\": \"smtp.gmail.com\",\n                    \"smtp_port\": 25,\n                    \"smtp_username\": \"your-email@gmail.com\",\n                    \"smtp_password\": \"your-gmail-password\",\n                },\n            },\n            test_output=[(\"status\", \"Email sent successfully\")],\n            test_mock={\"send_email\": lambda *args, **kwargs: \"Email sent successfully\"},\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "send_email",
          "type": "function",
          "start_line": 68,
          "end_line": 87,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 68,
              "line": "    def send_email("
            },
            {
              "lineno": 69,
              "line": "        creds: EmailCredentials, to_email: str, subject: str, body: str"
            },
            {
              "lineno": 70,
              "line": "    ) -> str:"
            },
            {
              "lineno": 71,
              "line": "        smtp_server = creds.smtp_server"
            },
            {
              "lineno": 72,
              "line": "        smtp_port = creds.smtp_port"
            },
            {
              "lineno": 73,
              "line": "        smtp_username = creds.smtp_username.get_secret_value()"
            },
            {
              "lineno": 74,
              "line": "        smtp_password = creds.smtp_password.get_secret_value()"
            },
            {
              "lineno": 75,
              "line": ""
            },
            {
              "lineno": 76,
              "line": "        msg = MIMEMultipart()"
            },
            {
              "lineno": 77,
              "line": "        msg[\"From\"] = smtp_username"
            },
            {
              "lineno": 78,
              "line": "        msg[\"To\"] = to_email"
            },
            {
              "lineno": 79,
              "line": "        msg[\"Subject\"] = subject"
            },
            {
              "lineno": 80,
              "line": "        msg.attach(MIMEText(body, \"plain\"))"
            },
            {
              "lineno": 81,
              "line": ""
            },
            {
              "lineno": 82,
              "line": "        with smtplib.SMTP(smtp_server, smtp_port) as server:"
            },
            {
              "lineno": 83,
              "line": "            server.starttls()"
            },
            {
              "lineno": 84,
              "line": "            server.login(smtp_username, smtp_password)"
            },
            {
              "lineno": 85,
              "line": "            server.sendmail(smtp_username, to_email, msg.as_string())"
            },
            {
              "lineno": 86,
              "line": ""
            },
            {
              "lineno": 87,
              "line": "        return \"Email sent successfully\""
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def send_email(\n        creds: EmailCredentials, to_email: str, subject: str, body: str\n    ) -> str:\n        smtp_server = creds.smtp_server\n        smtp_port = creds.smtp_port\n        smtp_username = creds.smtp_username.get_secret_value()\n        smtp_password = creds.smtp_password.get_secret_value()\n\n        msg = MIMEMultipart()\n        msg[\"From\"] = smtp_username\n        msg[\"To\"] = to_email\n        msg[\"Subject\"] = subject\n        msg.attach(MIMEText(body, \"plain\"))\n        with smtplib.SMTP(smtp_server, smtp_port) as server:\n            server.starttls()\n            server.login(smtp_username, smtp_password)\n            server.sendmail(smtp_username, to_email, msg.as_string())",
              "successors": [
                {
                  "id": 3,
                  "label": "        return \"Email sent successfully\"",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 89,
          "end_line": 95,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 89,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 90,
              "line": "        yield \"status\", self.send_email("
            },
            {
              "lineno": 91,
              "line": "            input_data.creds,"
            },
            {
              "lineno": 92,
              "line": "            input_data.to_email,"
            },
            {
              "lineno": 93,
              "line": "            input_data.subject,"
            },
            {
              "lineno": 94,
              "line": "            input_data.body,"
            },
            {
              "lineno": 95,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        yield \"status\", self.send_email(\n            input_data.creds,\n            input_data.to_email,\n            input_data.subject,\n            input_data.body,\n        )",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 23,
          "end_line": 36,
          "functions": [],
          "simplified_code": [
            {
              "lineno": 23,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 24,
              "line": "        to_email: str = SchemaField("
            },
            {
              "lineno": 25,
              "line": "            description=\"Recipient email address\", placeholder=\"recipient@example.com\""
            },
            {
              "lineno": 26,
              "line": "        )"
            },
            {
              "lineno": 27,
              "line": "        subject: str = SchemaField("
            },
            {
              "lineno": 28,
              "line": "            description=\"Subject of the email\", placeholder=\"Enter the email subject\""
            },
            {
              "lineno": 29,
              "line": "        )"
            },
            {
              "lineno": 30,
              "line": "        body: str = SchemaField("
            },
            {
              "lineno": 31,
              "line": "            description=\"Body of the email\", placeholder=\"Enter the email body\""
            },
            {
              "lineno": 32,
              "line": "        )"
            },
            {
              "lineno": 33,
              "line": "        creds: EmailCredentials = SchemaField("
            },
            {
              "lineno": 34,
              "line": "            description=\"SMTP credentials\","
            },
            {
              "lineno": 35,
              "line": "            default=EmailCredentials(),"
            },
            {
              "lineno": 36,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        to_email: str = SchemaField(\n            description=\"Recipient email address\", placeholder=\"recipient@example.com\"\n        )\n        subject: str = SchemaField(\n            description=\"Subject of the email\", placeholder=\"Enter the email subject\"\n        )\n        body: str = SchemaField(\n            description=\"Body of the email\", placeholder=\"Enter the email body\"\n        )\n        creds: EmailCredentials = SchemaField(\n            description=\"SMTP credentials\",\n            default=EmailCredentials(),\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 38,
          "end_line": 42,
          "functions": [],
          "simplified_code": [
            {
              "lineno": 38,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 39,
              "line": "        status: str = SchemaField(description=\"Status of the email sending operation\")"
            },
            {
              "lineno": 40,
              "line": "        error: str = SchemaField("
            },
            {
              "lineno": 41,
              "line": "            description=\"Error message if the email sending failed\""
            },
            {
              "lineno": 42,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "class Output(BlockSchema):\n    status: str = SchemaField(description=\"Status of the email sending operation\")\n    error: str = SchemaField(\n        description=\"Error message if the email sending failed\"\n    )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 22,
          "line": "class SendEmailBlock(Block):"
        },
        {
          "lineno": 37,
          "line": ""
        },
        {
          "lineno": 43,
          "line": ""
        },
        {
          "lineno": 66,
          "line": ""
        },
        {
          "lineno": 67,
          "line": "    @staticmethod"
        },
        {
          "lineno": 88,
          "line": ""
        }
      ],
      "blocks": []
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import smtplib"
    },
    {
      "lineno": 2,
      "line": "from email.mime.multipart import MIMEMultipart"
    },
    {
      "lineno": 3,
      "line": "from email.mime.text import MIMEText"
    },
    {
      "lineno": 4,
      "line": ""
    },
    {
      "lineno": 5,
      "line": "from pydantic import BaseModel, ConfigDict"
    },
    {
      "lineno": 6,
      "line": ""
    },
    {
      "lineno": 7,
      "line": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema"
    },
    {
      "lineno": 8,
      "line": "from backend.data.model import BlockSecret, SchemaField, SecretField"
    },
    {
      "lineno": 9,
      "line": ""
    },
    {
      "lineno": 10,
      "line": ""
    },
    {
      "lineno": 20,
      "line": ""
    },
    {
      "lineno": 21,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "import smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\n\nfrom pydantic import BaseModel, ConfigDict\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import BlockSecret, SchemaField, SecretField",
      "successors": []
    }
  ]
}