{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 39,
  "functions": [],
  "classes": [
    {
      "name": "TextDecoderBlock",
      "type": "class",
      "start_line": 7,
      "end_line": 39,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 19,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 19,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 20,
              "line": "        super().__init__("
            },
            {
              "lineno": 21,
              "line": "            id=\"2570e8fe-8447-43ed-84c7-70d657923231\","
            },
            {
              "lineno": 22,
              "line": "            description=\"Decodes a string containing escape sequences into actual text\","
            },
            {
              "lineno": 23,
              "line": "            categories={BlockCategory.TEXT},"
            },
            {
              "lineno": 24,
              "line": "            input_schema=TextDecoderBlock.Input,"
            },
            {
              "lineno": 25,
              "line": "            output_schema=TextDecoderBlock.Output,"
            },
            {
              "lineno": 26,
              "line": "            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},"
            },
            {
              "lineno": 27,
              "line": "            test_output=["
            },
            {
              "lineno": 28,
              "line": "                ("
            },
            {
              "lineno": 29,
              "line": "                    \"decoded_text\","
            },
            {
              "lineno": 30,
              "line": "                    \"\"\"Hello"
            },
            {
              "lineno": 31,
              "line": "World!"
            },
            {
              "lineno": 32,
              "line": "This is a \"quoted\" string.\"\"\","
            },
            {
              "lineno": 33,
              "line": "                )"
            },
            {
              "lineno": 34,
              "line": "            ],"
            },
            {
              "lineno": 35,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 37,
          "end_line": 39,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 37,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 38,
              "line": "        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")"
            },
            {
              "lineno": 39,
              "line": "        yield \"decoded_text\", decoded_text"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text",
              "successors": []
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 8,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 8,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 9,
              "line": "        text: str = SchemaField("
            },
            {
              "lineno": 10,
              "line": "            description=\"A string containing escaped characters to be decoded\","
            },
            {
              "lineno": 11,
              "line": "            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',"
            },
            {
              "lineno": 12,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 14,
          "end_line": 17,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 15,
              "line": "        decoded_text: str = SchemaField("
            },
            {
              "lineno": 16,
              "line": "            description=\"The decoded text with escape sequences processed\""
            },
            {
              "lineno": 17,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "class TextDecoderBlock(Block):"
        },
        {
          "lineno": 13,
          "line": ""
        },
        {
          "lineno": 18,
          "line": ""
        },
        {
          "lineno": 36,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class TextDecoderBlock(Block):",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import codecs"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema"
    },
    {
      "lineno": 4,
      "line": "from backend.data.model import SchemaField"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "import codecs\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField",
      "successors": []
    }
  ]
}