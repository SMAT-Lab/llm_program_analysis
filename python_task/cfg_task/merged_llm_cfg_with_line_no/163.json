{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 73,
  "functions": [],
  "classes": [
    {
      "name": "PagesDataStore",
      "type": "class",
      "start_line": 4,
      "end_line": 34,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 6,
          "end_line": 8,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 6,
              "line": "    def __init__(self, db):"
            },
            {
              "lineno": 7,
              "line": "        self.db = db"
            },
            {
              "lineno": 8,
              "line": "        pass"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self, db):\n        self.db = db\n        pass",
              "successors": []
            }
          ]
        },
        {
          "name": "add_link_to_crawl",
          "type": "function",
          "start_line": 10,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 10,
              "line": "    def add_link_to_crawl(self, url):"
            },
            {
              "lineno": 11,
              "line": "        \"\"\"Add the given link to `links_to_crawl`.\"\"\""
            },
            {
              "lineno": 12,
              "line": "        pass"
            }
          ],
          "blocks": []
        },
        {
          "name": "remove_link_to_crawl",
          "type": "function",
          "start_line": 14,
          "end_line": 16,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    def remove_link_to_crawl(self, url):"
            },
            {
              "lineno": 15,
              "line": "        \"\"\"Remove the given link from `links_to_crawl`.\"\"\""
            },
            {
              "lineno": 16,
              "line": "        pass"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def remove_link_to_crawl(self, url):\n        \"\"\"Remove the given link from `links_to_crawl`.\"\"\"\n        pass",
              "successors": []
            }
          ]
        },
        {
          "name": "reduce_priority_link_to_crawl",
          "type": "function",
          "start_line": 18,
          "end_line": 20,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 18,
              "line": "    def reduce_priority_link_to_crawl(self, url):"
            },
            {
              "lineno": 19,
              "line": "        \"\"\"Reduce the priority of a link in `links_to_crawl` to avoid cycles.\"\"\""
            },
            {
              "lineno": 20,
              "line": "        pass"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def reduce_priority_link_to_crawl(self, url):\n        \"\"\"Reduce the priority of a link in `links_to_crawl` to avoid cycles.\"\"\"\n        pass",
              "successors": []
            }
          ]
        },
        {
          "name": "extract_max_priority_page",
          "type": "function",
          "start_line": 22,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 22,
              "line": "    def extract_max_priority_page(self):"
            },
            {
              "lineno": 23,
              "line": "        \"\"\"Return the highest priority link in `links_to_crawl`.\"\"\""
            },
            {
              "lineno": 24,
              "line": "        pass"
            }
          ],
          "blocks": []
        },
        {
          "name": "insert_crawled_link",
          "type": "function",
          "start_line": 26,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 26,
              "line": "    def insert_crawled_link(self, url, signature):"
            },
            {
              "lineno": 27,
              "line": "        \"\"\"Add the given link to `crawled_links`.\"\"\""
            },
            {
              "lineno": 28,
              "line": "        pass"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def insert_crawled_link(self, url, signature):\n        \"\"\"Add the given link to `crawled_links`.\"\"\"\n        pass",
              "successors": []
            }
          ]
        },
        {
          "name": "crawled_similar",
          "type": "function",
          "start_line": 30,
          "end_line": 32,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 30,
              "line": "    def crawled_similar(self, signature):"
            },
            {
              "lineno": 31,
              "line": "        \"\"\"Determine if we've already crawled a page matching the given signature\"\"\""
            },
            {
              "lineno": 32,
              "line": "        pass"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def crawled_similar(self, signature):\n        \"\"\"Determine if we've already crawled a page matching the given signature\"\"\"\n        pass",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 4,
          "line": "class PagesDataStore(object):"
        },
        {
          "lineno": 5,
          "line": ""
        },
        {
          "lineno": 9,
          "line": ""
        },
        {
          "lineno": 13,
          "line": ""
        },
        {
          "lineno": 17,
          "line": ""
        },
        {
          "lineno": 21,
          "line": ""
        },
        {
          "lineno": 25,
          "line": ""
        },
        {
          "lineno": 29,
          "line": ""
        },
        {
          "lineno": 33,
          "line": ""
        },
        {
          "lineno": 34,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class PagesDataStore(object):",
          "successors": []
        }
      ]
    },
    {
      "name": "Page",
      "type": "class",
      "start_line": 35,
      "end_line": 47,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 37,
          "end_line": 41,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 37,
              "line": "    def __init__(self, url, contents, child_urls):"
            },
            {
              "lineno": 38,
              "line": "        self.url = url"
            },
            {
              "lineno": 39,
              "line": "        self.contents = contents"
            },
            {
              "lineno": 40,
              "line": "        self.child_urls = child_urls"
            },
            {
              "lineno": 41,
              "line": "        self.signature = self.create_signature()"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self, url, contents, child_urls):\n        self.url = url\n        self.contents = contents\n        self.child_urls = child_urls\n        self.signature = self.create_signature()",
              "successors": []
            }
          ]
        },
        {
          "name": "create_signature",
          "type": "function",
          "start_line": 43,
          "end_line": 45,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 43,
              "line": "    def create_signature(self):"
            },
            {
              "lineno": 44,
              "line": "        # Create signature based on url and contents"
            },
            {
              "lineno": 45,
              "line": "        pass"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def create_signature(self):\n        # Create signature based on url and contents\n        pass",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 35,
          "line": "class Page(object):"
        },
        {
          "lineno": 36,
          "line": ""
        },
        {
          "lineno": 42,
          "line": ""
        },
        {
          "lineno": 46,
          "line": ""
        },
        {
          "lineno": 47,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Page(object):",
          "successors": []
        }
      ]
    },
    {
      "name": "Crawler",
      "type": "class",
      "start_line": 48,
      "end_line": 73,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 50,
          "end_line": 54,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 50,
              "line": "    def __init__(self, pages, data_store, reverse_index_queue, doc_index_queue):"
            },
            {
              "lineno": 51,
              "line": "        self.pages = pages"
            },
            {
              "lineno": 52,
              "line": "        self.data_store = data_store"
            },
            {
              "lineno": 53,
              "line": "        self.reverse_index_queue = reverse_index_queue"
            },
            {
              "lineno": 54,
              "line": "        self.doc_index_queue = doc_index_queue"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self, pages, data_store, reverse_index_queue, doc_index_queue):\n        self.pages = pages\n        self.data_store = data_store\n        self.reverse_index_queue = reverse_index_queue\n        self.doc_index_queue = doc_index_queue",
              "successors": []
            }
          ]
        },
        {
          "name": "crawl_page",
          "type": "function",
          "start_line": 56,
          "end_line": 62,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 56,
              "line": "    def crawl_page(self, page):"
            },
            {
              "lineno": 57,
              "line": "        for url in page.child_urls:"
            },
            {
              "lineno": 58,
              "line": "            self.data_store.add_link_to_crawl(url)"
            },
            {
              "lineno": 59,
              "line": "        self.reverse_index_queue.generate(page)"
            },
            {
              "lineno": 60,
              "line": "        self.doc_index_queue.generate(page)"
            },
            {
              "lineno": 61,
              "line": "        self.data_store.remove_link_to_crawl(page.url)"
            },
            {
              "lineno": 62,
              "line": "        self.data_store.insert_crawled_link(page.url, page.signature)"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def crawl_page(self, page):",
              "successors": [
                {
                  "id": 2,
                  "label": "        for url in page.child_urls:\n            self.data_store.add_link_to_crawl(url)",
                  "successors": [
                    {
                      "id": 3,
                      "label": "        self.reverse_index_queue.generate(page)\n        self.doc_index_queue.generate(page)\n        self.data_store.remove_link_to_crawl(page.url)\n        self.data_store.insert_crawled_link(page.url, page.signature)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "crawl",
          "type": "function",
          "start_line": 64,
          "end_line": 73,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 64,
              "line": "    def crawl(self):"
            },
            {
              "lineno": 65,
              "line": "        while True:"
            },
            {
              "lineno": 66,
              "line": "            page = self.data_store.extract_max_priority_page()"
            },
            {
              "lineno": 67,
              "line": "            if page is None:"
            },
            {
              "lineno": 68,
              "line": "                break"
            },
            {
              "lineno": 69,
              "line": "            if self.data_store.crawled_similar(page.signature):"
            },
            {
              "lineno": 70,
              "line": "                self.data_store.reduce_priority_link_to_crawl(page.url)"
            },
            {
              "lineno": 71,
              "line": "            else:"
            },
            {
              "lineno": 72,
              "line": "                self.crawl_page(page)"
            },
            {
              "lineno": 73,
              "line": "            page = self.data_store.extract_max_priority_page()"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def crawl(self):",
              "successors": [
                {
                  "id": 2,
                  "label": "        while True:\n            page = self.data_store.extract_max_priority_page()\n            if page is None:",
                  "successors": [
                    {
                      "id": 3,
                      "label": "                break",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "label": "            if self.data_store.crawled_similar(page.signature):\n                self.data_store.reduce_priority_link_to_crawl(page.url)\n            page = self.data_store.extract_max_priority_page()",
                      "successors": [
                        {
                          "id": 2,
                          "label": "        while True:\n            page = self.data_store.extract_max_priority_page()\n            if page is None:",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 6,
                      "label": "            else:\n                self.crawl_page(page)\n            page = self.data_store.extract_max_priority_page()",
                      "successors": [
                        {
                          "id": 2,
                          "label": "        while True:\n            page = self.data_store.extract_max_priority_page()\n            if page is None:",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 48,
          "line": "class Crawler(object):"
        },
        {
          "lineno": 49,
          "line": ""
        },
        {
          "lineno": 55,
          "line": ""
        },
        {
          "lineno": 63,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Crawler(object):",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "# -*- coding: utf-8 -*-"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": ""
    }
  ],
  "blocks": []
}