{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 30,
  "functions": [],
  "classes": [
    {
      "name": "CompassWebhookType",
      "type": "class",
      "start_line": 14,
      "end_line": 16,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 14,
          "line": "class CompassWebhookType(StrEnum):"
        },
        {
          "lineno": 15,
          "line": "    TRANSCRIPTION = \"transcription\""
        },
        {
          "lineno": 16,
          "line": "    TASK = \"task\""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class CompassWebhookType(StrEnum):\n    TRANSCRIPTION = \"transcription\"\n    TASK = \"task\"",
          "successors": []
        }
      ]
    },
    {
      "name": "CompassWebhookManager",
      "type": "class",
      "start_line": 19,
      "end_line": 30,
      "functions": [
        {
          "name": "validate_payload",
          "type": "function",
          "start_line": 24,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 24,
              "line": "    async def validate_payload("
            },
            {
              "lineno": 25,
              "line": "        cls, webhook: integrations.Webhook, request: Request"
            },
            {
              "lineno": 26,
              "line": "    ) -> tuple[dict, str]:"
            },
            {
              "lineno": 27,
              "line": "        payload = await request.json()"
            },
            {
              "lineno": 28,
              "line": "        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type"
            },
            {
              "lineno": 29,
              "line": ""
            },
            {
              "lineno": 30,
              "line": "        return payload, event_type"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type",
              "successors": [
                {
                  "id": 3,
                  "label": "        return payload, event_type",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 19,
          "line": "class CompassWebhookManager(ManualWebhookManagerBase):"
        },
        {
          "lineno": 20,
          "line": "    PROVIDER_NAME = ProviderName.COMPASS"
        },
        {
          "lineno": 21,
          "line": "    WebhookType = CompassWebhookType"
        },
        {
          "lineno": 22,
          "line": ""
        },
        {
          "lineno": 23,
          "line": "    @classmethod"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class CompassWebhookManager(ManualWebhookManagerBase):\nPROVIDER_NAME = ProviderName.COMPASS\nWebhookType = CompassWebhookType",
          "successors": [
            {
              "id": 3,
              "label": "@classmethod",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import logging"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "from fastapi import Request"
    },
    {
      "lineno": 4,
      "line": "from strenum import StrEnum"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": "from backend.data import integrations"
    },
    {
      "lineno": 7,
      "line": "from backend.integrations.providers import ProviderName"
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 9,
      "line": "from ._manual_base import ManualWebhookManagerBase"
    },
    {
      "lineno": 10,
      "line": ""
    },
    {
      "lineno": 11,
      "line": "logger = logging.getLogger(__name__)"
    },
    {
      "lineno": 12,
      "line": ""
    },
    {
      "lineno": 13,
      "line": ""
    },
    {
      "lineno": 17,
      "line": ""
    },
    {
      "lineno": 18,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "import logging\nfrom fastapi import Request\nfrom strenum import StrEnum",
      "successors": [
        {
          "id": 3,
          "label": "from backend.data import integrations\nfrom backend.integrations.providers import ProviderName\nfrom ._manual_base import ManualWebhookManagerBase",
          "successors": [
            {
              "id": 5,
              "label": "logger = logging.getLogger(__name__)",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}