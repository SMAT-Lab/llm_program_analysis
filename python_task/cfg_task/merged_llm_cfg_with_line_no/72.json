{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 78,
  "functions": [],
  "classes": [
    {
      "name": "HttpMethod",
      "type": "class",
      "start_line": 10,
      "end_line": 17,
      "functions": [],
      "simplified_code": [
        {
          "lineno": 10,
          "line": "class HttpMethod(Enum):"
        },
        {
          "lineno": 11,
          "line": "    GET = \"GET\""
        },
        {
          "lineno": 12,
          "line": "    POST = \"POST\""
        },
        {
          "lineno": 13,
          "line": "    PUT = \"PUT\""
        },
        {
          "lineno": 14,
          "line": "    DELETE = \"DELETE\""
        },
        {
          "lineno": 15,
          "line": "    PATCH = \"PATCH\""
        },
        {
          "lineno": 16,
          "line": "    OPTIONS = \"OPTIONS\""
        },
        {
          "lineno": 17,
          "line": "    HEAD = \"HEAD\""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class HttpMethod(Enum):\n    GET = \"GET\"\n    POST = \"POST\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"\n    OPTIONS = \"OPTIONS\"\n    HEAD = \"HEAD\"",
          "successors": []
        }
      ]
    },
    {
      "name": "SendWebRequestBlock",
      "type": "class",
      "start_line": 20,
      "end_line": 78,
      "functions": [
        {
          "name": "__init__",
          "type": "function",
          "start_line": 49,
          "end_line": 56,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 49,
              "line": "    def __init__(self):"
            },
            {
              "lineno": 50,
              "line": "        super().__init__("
            },
            {
              "lineno": 51,
              "line": "            id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\","
            },
            {
              "lineno": 52,
              "line": "            description=\"This block makes an HTTP request to the given URL.\","
            },
            {
              "lineno": 53,
              "line": "            categories={BlockCategory.OUTPUT},"
            },
            {
              "lineno": 54,
              "line": "            input_schema=SendWebRequestBlock.Input,"
            },
            {
              "lineno": 55,
              "line": "            output_schema=SendWebRequestBlock.Output,"
            },
            {
              "lineno": 56,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def __init__(self):\n        super().__init__(\n            id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\",\n            description=\"This block makes an HTTP request to the given URL.\",\n            categories={BlockCategory.OUTPUT},\n            input_schema=SendWebRequestBlock.Input,\n            output_schema=SendWebRequestBlock.Output,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "run",
          "type": "function",
          "start_line": 58,
          "end_line": 78,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 58,
              "line": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:"
            },
            {
              "lineno": 59,
              "line": "        if isinstance(input_data.body, str):"
            },
            {
              "lineno": 60,
              "line": "            input_data.body = json.loads(input_data.body)"
            },
            {
              "lineno": 61,
              "line": ""
            },
            {
              "lineno": 62,
              "line": "        response = requests.request("
            },
            {
              "lineno": 63,
              "line": "            input_data.method.value,"
            },
            {
              "lineno": 64,
              "line": "            input_data.url,"
            },
            {
              "lineno": 65,
              "line": "            headers=input_data.headers,"
            },
            {
              "lineno": 66,
              "line": "            json=input_data.body if input_data.json_format else None,"
            },
            {
              "lineno": 67,
              "line": "            data=input_data.body if not input_data.json_format else None,"
            },
            {
              "lineno": 68,
              "line": "        )"
            },
            {
              "lineno": 69,
              "line": "        result = response.json() if input_data.json_format else response.text"
            },
            {
              "lineno": 70,
              "line": ""
            },
            {
              "lineno": 71,
              "line": "        if response.status_code // 100 == 2:"
            },
            {
              "lineno": 72,
              "line": "            yield \"response\", result"
            },
            {
              "lineno": 73,
              "line": "        elif response.status_code // 100 == 4:"
            },
            {
              "lineno": 74,
              "line": "            yield \"client_error\", result"
            },
            {
              "lineno": 75,
              "line": "        elif response.status_code // 100 == 5:"
            },
            {
              "lineno": 76,
              "line": "            yield \"server_error\", result"
            },
            {
              "lineno": 77,
              "line": "        else:"
            },
            {
              "lineno": 78,
              "line": "            raise ValueError(f\"Unexpected status code: {response.status_code}\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        if isinstance(input_data.body, str):\n            input_data.body = json.loads(input_data.body)",
              "successors": [
                {
                  "id": 3,
                  "label": "        response = requests.request(\n            input_data.method.value,\n            input_data.url,\n            headers=input_data.headers,\n            json=input_data.body if input_data.json_format else None,\n            data=input_data.body if not input_data.json_format else None,\n        )\n        result = response.json() if input_data.json_format else response.text\n        if response.status_code // 100 == 2:",
                  "successors": [
                    {
                      "id": 5,
                      "label": "            yield \"response\", result\n",
                      "successors": []
                    },
                    {
                      "id": 6,
                      "label": "        elif response.status_code // 100 == 4:",
                      "successors": [
                        {
                          "id": 7,
                          "label": "            yield \"client_error\", result\n",
                          "successors": []
                        },
                        {
                          "id": 8,
                          "label": "        elif response.status_code // 100 == 5:",
                          "successors": [
                            {
                              "id": 9,
                              "label": "            yield \"server_error\", result\n",
                              "successors": []
                            },
                            {
                              "id": 10,
                              "label": "        else:\n            raise ValueError(f\"Unexpected status code: {response.status_code}\")\n",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "class",
          "start_line": 21,
          "end_line": 42,
          "functions": [],
          "simplified_code": [
            {
              "lineno": 21,
              "line": "    class Input(BlockSchema):"
            },
            {
              "lineno": 22,
              "line": "        url: str = SchemaField("
            },
            {
              "lineno": 23,
              "line": "            description=\"The URL to send the request to\","
            },
            {
              "lineno": 24,
              "line": "            placeholder=\"https://api.example.com\","
            },
            {
              "lineno": 25,
              "line": "        )"
            },
            {
              "lineno": 26,
              "line": "        method: HttpMethod = SchemaField("
            },
            {
              "lineno": 27,
              "line": "            description=\"The HTTP method to use for the request\","
            },
            {
              "lineno": 28,
              "line": "            default=HttpMethod.POST,"
            },
            {
              "lineno": 29,
              "line": "        )"
            },
            {
              "lineno": 30,
              "line": "        headers: dict[str, str] = SchemaField("
            },
            {
              "lineno": 31,
              "line": "            description=\"The headers to include in the request\","
            },
            {
              "lineno": 32,
              "line": "            default={},"
            },
            {
              "lineno": 33,
              "line": "        )"
            },
            {
              "lineno": 34,
              "line": "        json_format: bool = SchemaField("
            },
            {
              "lineno": 35,
              "line": "            title=\"JSON format\","
            },
            {
              "lineno": 36,
              "line": "            description=\"Whether to send and receive body as JSON\","
            },
            {
              "lineno": 37,
              "line": "            default=True,"
            },
            {
              "lineno": 38,
              "line": "        )"
            },
            {
              "lineno": 39,
              "line": "        body: Any = SchemaField("
            },
            {
              "lineno": 40,
              "line": "            description=\"The body of the request\","
            },
            {
              "lineno": 41,
              "line": "            default=None,"
            },
            {
              "lineno": 42,
              "line": "        )"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Input(BlockSchema):\n        url: str = SchemaField(\n            description=\"The URL to send the request to\",\n            placeholder=\"https://api.example.com\",\n        )\n        method: HttpMethod = SchemaField(\n            description=\"The HTTP method to use for the request\",\n            default=HttpMethod.POST,\n        )\n        headers: dict[str, str] = SchemaField(\n            description=\"The headers to include in the request\",\n            default={},\n        )\n        json_format: bool = SchemaField(\n            title=\"JSON format\",\n            description=\"Whether to send and receive body as JSON\",\n            default=True,\n        )\n        body: Any = SchemaField(\n            description=\"The body of the request\",\n            default=None,\n        )",
              "successors": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "class",
          "start_line": 44,
          "end_line": 47,
          "functions": [],
          "simplified_code": [
            {
              "lineno": 44,
              "line": "    class Output(BlockSchema):"
            },
            {
              "lineno": 45,
              "line": "        response: object = SchemaField(description=\"The response from the server\")"
            },
            {
              "lineno": 46,
              "line": "        client_error: object = SchemaField(description=\"The error on 4xx status codes\")"
            },
            {
              "lineno": 47,
              "line": "        server_error: object = SchemaField(description=\"The error on 5xx status codes\")"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    class Output(BlockSchema):\n        response: object = SchemaField(description=\"The response from the server\")\n        client_error: object = SchemaField(description=\"The error on 4xx status codes\")\n        server_error: object = SchemaField(description=\"The error on 5xx status codes\")",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 20,
          "line": "class SendWebRequestBlock(Block):"
        },
        {
          "lineno": 43,
          "line": ""
        },
        {
          "lineno": 48,
          "line": ""
        },
        {
          "lineno": 57,
          "line": ""
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class SendWebRequestBlock(Block):",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "import json"
    },
    {
      "lineno": 2,
      "line": "from enum import Enum"
    },
    {
      "lineno": 3,
      "line": "from typing import Any"
    },
    {
      "lineno": 4,
      "line": ""
    },
    {
      "lineno": 5,
      "line": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema"
    },
    {
      "lineno": 6,
      "line": "from backend.data.model import SchemaField"
    },
    {
      "lineno": 7,
      "line": "from backend.util.request import requests"
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 9,
      "line": ""
    },
    {
      "lineno": 18,
      "line": ""
    },
    {
      "lineno": 19,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "import json\nfrom enum import Enum\nfrom typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests",
      "successors": []
    }
  ]
}